var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"0.7.2","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["gener","index","match","nx","project","readm","result","speakout","us"],"overview.html":["16","23","9","browser","class","inject","interfac","match","out","overview","reset","result","support","svg","zoom"],"modules.html":["match","modul","result"],"injectables/AppleAuthService.html":["8","access","appl","appleauthservic","applelogindto","applesignin","applesignin.getauthorizationtoken","applesignin.getclientsecret","applesignin.verifyidtoken(response.id_token","apps/api/src/features/auth/service/appl","async","audienc","auth","auth.keyidentifi","auth.servic","auth.service.t","auth.teamid","auth[typ","auth[type].redirecturi","authconfig","authconfig.appl","authorizationcod","await","catch","class","clientid","clientsecret","config/auth.config","const","dto/appl","e","email","export","file","fs","getus","getuser(undefin","httpexcept","id","ignoreexpir","import","info","inject","instanceof","ios'].clientid","join","json","json.email","json.stringifi","json.sub","key.p8","keyidentifi","login.dto","match","method","name","nestjs/common","new","path","privatekey","promis","readfilesync","readfilesync(join(paths.secret","redirecturi","respons","response?.id_token","result","retriev","return","shared/constants/path","signin","socialus","sourc","teamid","throw","token","tri","true","type","unauthorizedexcept","unauthorizedexception(e.messag","utf"],"injectables/AuthService.html":["access","access_token","alreadi","appl","apps/api/src/features/auth/service/auth.service.t","async","auth.guard","authservic","await","badrequestexcept","badrequestexception('email","catch","class","const","constructor","constructor(userservic","customnam","decod","e","email","environ","environments.accesstokenexpir","environments/environ","environments[typ","error","exist","expir","export","facebookid","fieldid","file","forwardref","getaccesstokenopt","getaccesstokenoptions(us","getrefreshtokenopt","getrefreshtokenoptions(us","getsocialus","getsocialuserhandl","gettokenopt","gettokenoptions(typ","googleid","guard/jwt","httpexcept","id","import","info","inject","inject(forwardref","instanceof","interfac","internalus","internaluser.email","internaluser.sav","jwtservic","jwtsignopt","keyof","login","login(us","loginwithrefreshtoken","loginwithrefreshtoken(refreshtoken","loginwiththirdparti","loginwiththirdparty(fieldid","match","method","name","nestjs/common","nestjs/jwt","new","number","onlin","option","options.expiresin","password","payload","privat","promis","refresh","refresh_token","refreshtoken","result","return","secret","sessiontoken","socialus","sourc","string","sub","this.getaccesstokenoptions(us","this.getrefreshtokenoptions(us","this.gettokenoptions('access","this.gettokenoptions('refresh","this.jwtservice.decode(refreshtoken","this.jwtservice.signasync","this.jwtservice.verifyasync","this.login(internalus","this.login(us","this.userservice.cr","this.userservice.generateusernam","this.userservice.getuser(usernam","this.userservice.getuserbi","this.userservice.getuserbyemail(email","this.userservice.validateuserbyid(decoded.sub","throw","token","tokenexpir","tokenrespons","tokensecret","tri","type","unauthorizedexcept","unauthorizedexception('incorrect","unauthorizedexception('invalid","unauthorizedexception('us","user","user.id","user.sessiontoken","user.usernam","user.validatepassword(password","user/schema/user.schema","user/service/user.servic","usernam","userservic","valid","validate(usernam","void"],"injectables/ConfService.html":["_id","apps/api/src/features/conf/service/conf.service.t","async","await","blockedfield","bodi","class","client","conf","conf._id","conf.members.push(user._id","conf.members.some((memb","conf.sav","conf:delet","conf:join","conf:leav","conf:upd","confdto","confgateway","confid","confmodel","confservic","const","constructor","constructor(confmodel","creat","create(conf","createdat","delet","delete(conf","descript","dto/conf.dto","encontrada","end","event","except.broadcast.to(`conf_${conf._id}`).emit(ev","execpopul","export","file","find","findbyid(confid","findon","findoneandupd","forwardref","gateway/conf.gateway","getconf","getconf(confid","getconfbyidandown","getconfbyidandowner(confid","getconfsbymemb","getconfsbymember(us","getconfsbyown","getconfsbyowner(us","getconfsbysponsor","getconfsbysponsor(sponsorid","getpublicconf","getsocket","getsocketcli","getsocketclient(socket).room","getsockets(conf","handledeleteconf","handledeleteconf(conf","handlejoinconf","handlejoinconf(us","handleleaveconf","handleleaveconf(us","handleupdateconf","handleupdateconf(conf","import","info","inject","inject(forwardref","injectmodel","injectmodel(conf.nam","ispubl","join","join(confid","keyof","leav","leave(us","match","member","member.id","messag","messages/service/message.servic","messageservic","method","model","mongoos","nestjs/common","nestjs/mongoos","new","notfoundexcept","notfoundexception('conf","não","object","object.assign(conf","owner","owner._id","partial","populate('memb","populate('own","populate('sponsor","privat","promise.al","properti","remov","remove(conf.memb","result","return","schema/conf.schema","sendmessag","sendmessage(conf","sendmessageexcept","sendmessageexcept(except","shared/utils/get","shared/utils/remov","slug","socket","socket.io","socket.join(`conf_${conf._id","socket.leave(`conf_${conf._id","sourc","sponsor","sponsor/service/sponsor.servic","sponsorid","sponsorservic","start","string","subscribesocket","subscribesocket(socket","t","this.blockedfields.join","this.confgateway.server.in(`conf_${conf._id}`).allsocket","this.confgateway.server.to(`conf_${conf._id}`).emit(ev","this.confmodel","this.confmodel.cr","this.confmodel.find","this.confmodel.findoneanddelet","this.getconf(confid","this.getconfbyidandowner(confid","this.handledeleteconf(conf","this.handlejoinconf(us","this.handleleaveconf(us","this.handleupdateconf(conf","this.messageservice.deleteroommessages(conf","this.sendmessage(conf","this.sponsorservice.unpopulatedfield","this.userservice.filteruser(us","this.userservice.unpopulatedfield","this.validateconf(confid","throw","titl","true","unpopulatedfield","unsubscribesocket","unsubscribesocket(socket","updat","update(conf","updatequeri","user","user._id","user.id","user/schema/user.schema","user/service/user.servic","userservic","validateconf","validateconf(confid","validateconfbyidandown","validateconfbyidandowner(confid","void"],"injectables/GoogleAuthService.html":["access_token","accesstoken","apps/api/src/features/auth/service/googl","async","auth","auth.appsecret","auth.service.t","authconfig","authconfig.googl","await","class","client","client.setcredenti","config/auth.config","const","data","export","file","getus","getuser(accesstoken","googl","google.auth.oauth2(auth.appid","google.oauth2","googleapi","googleauthservic","import","info","inject","match","method","nestjs/common","new","oauth2","oauth2.userinfo.get","result","return","sourc","string","v2","version","void"],"injectables/JwtAuthGuard.html":["allowani","apps/api/src/features/auth/guard/jwt","async","auth.guard.t","author","authorization[0].tolowercas","authorization[1","authservic","autorização","await","bearer","canactiv","canactivate(ctx","catch","class","client","client.headers.authorization?.split","client.us","const","constructor","constructor(authservic","ctx.gethandl","ctx.gettyp","ctx.switchtows().getclient().disconnect(tru","de","decod","decodificar","e","encontrado","executioncontext","export","file","fornecido","forwardref","getclient","getclient(ctx","getrequest","getrequest(ctx","gettoken","gettoken(ctx","handlerequest","handlerequest(ctx","implement","import","incapaz","info","inject","inject(forwardref","interfac","invalid","inválida","jwtauthguard","jwtservic","match","messag","method","nestjs/common","nestjs/cor","nestjs/jwt","new","null","não","o","privat","promis","properti","reflector","result","return","service/auth.servic","shared/utils/get","socket","socket.io","sourc","string","sub","this.authservice.getaccesstokenoptions(us","this.getrequest(ctx","this.gettoken(ctx","this.handlerequest(ctx","this.jwtservice.decode(token","this.jwtservice.verifyasync","this.reflector","this.reflector.get('allow","this.throwexception(ctx","this.userservice.validateuserbyid(sub","this.validate(decod","throw","throwexcept","throwexception(ctx","tipo","token","tri","true","unauthorizedexcept","unauthorizedexception(messag","user","user/service/user.servic","usernam","userservic","valid","validate(undefin","void","ws"],"injectables/MessageService.html":["1","30","_filterqueri","_id","a.createdat.gettim","apps/api/src/features/messages/service/message.service.t","async","await","b","b.createdat.gettim","befor","class","const","constructor","constructor(messagemodel","createdat","createdirectmessag","createdirectmessage(from","createroommessag","createroommessage(from","date","delet","deletedirectmessag","deletedirectmessage(messag","deletedirectmessages(from","deleteroommessag","deleteroommessage(room","deleteroommessages(room","direct:delete_messag","encontrada","execpopul","export","file","filter","filter.createdat","filterqueri","find(filt","findbyid(id","findon","findone(this.getdirectmessagefilter(from","forwardref","from._id","from.id","getdirectmessag","getdirectmessagefilt","getdirectmessagefilter(from","getdirectmessages(from","getfirstdirectmessag","getfirstdirectmessage(from","getfirstroommessag","getfirstroommessage(room","getmessag","getmessage(id","getmessages(filt","getpopulatedmessag","getpopulatedmessage(id","getroommessag","getroommessages(room","import","info","inject","inject(forwardref","injectmodel","injectmodel(message.nam","limit","limit(limit","lte","match","messag","message._id","message.from","message.to","message.to._id","messageid","messagemodel","messages.sort","messageservic","method","model","mongoos","nestjs/common","nestjs/mongoos","new","notfoundexcept","notfoundexception('messagem","number","não","object","populate('from","populate('room","populate('to","privat","result","return","room","room._id","room.id","room/schema/room.schema","room/service/room.servic","room:delete_messag","roomservic","schema/message.schema","sort","sortmessag","sortmessages(messag","sourc","string","this.getdirectmessagefilter(from","this.getmessage(id","this.getmessages(filt","this.getpopulatedmessage(id","this.messagemodel","this.messagemodel.cr","this.messagemodel.deletemani","this.messagemodel.findoneanddelet","this.roomservice.sendmessage(room","this.sortmessag","this.userservice.sendmessag","this.userservice.sendmessage(from","this.userservice.sendmessage(to","this.userservice.unpopulatedfield","throw","to._id","to.id","user","user/schema/user.schema","user/service/user.servic","userservic","validatemessag","validatemessage(id","validatepopulatedmessag","validatepopulatedmessage(id","void"],"injectables/MobileNotificationService.html":["admin","api/firebas","apps/api/src/features/notification/service/mobil","async","class","click_act","data","export","fcm","fcm.sendtodevice(token","file","firebas","flutter_notification_click","import","info","inject","match","messag","messaging.messagingpayload","messagingpayload","method","mobilenotificationservic","nestjs/common","notification.service.t","payload","payload.data","result","return","sendnotif","sendnotification(token","sourc","string","token","void"],"injectables/ParseObjectIdPipe.html":["apps/api/src/shared/pipe/pars","argumentmetadata","badrequestexcept","badrequestexception(`${metadata.data","class","export","file","id.pipe.t","implement","import","info","inject","match","metadata","method","mongodb","nestjs/common","new","object","objectid","objectid.createfromhexstring(valu","objectid.isvalid(valu","parseobjectidpip","pipetransform","result","return","sourc","throw","transform","transform(valu","void"],"injectables/RecoverService.html":["1000","apps/api/src/features/user/service/recover.service.t","async","await","class","code","constructor","constructor(recoverymodel","creat","create(us","date","date.now","delet","delete(us","environ","environments.recovercodeexpir","environments/environ","expir","export","file","get(cod","import","info","inject","injectmodel","injectmodel(recover.nam","match","method","model","mongoos","nestjs/common","nestjs/mongoos","new","owner","populate('own","privat","randomstr","randomstring(50","recov","recover['cod","recoverservic","recoverymodel","result","return","schema/recover.schema","schema/user.schema","shared/utils/random","sourc","string","this.delete(us","this.recoverymodel.cr","this.recoverymodel.deletemani","this.recoverymodel.findon","user","user._id","void"],"injectables/RoomService.html":["_id","apps/api/src/features/room/service/room.service.t","async","await","bodi","class","client","const","constructor","constructor(roommodel","creat","create(room","delet","delete(room","dto/room.dto","event","except.broadcast.to(`room_${room._id}`).emit(ev","execpopul","export","file","find","findbyid(roomid","findon","findoneandupd","forwardref","found","gateway/room.gateway","getpublicroom","getroom","getroom(roomid","getroombyidandown","getroombyidandowner(roomid","getroomsbymemb","getroomsbymember(us","getroomsbyown","getroomsbyowner(us","getsocket","getsocketcli","getsocketclient(socket).room","getsockets(room","handledeleteroom","handledeleteroom(room","handlejoinroom","handlejoinroom(us","handleleaveroom","handleleaveroom(us","handleupdateroom","handleupdateroom(room","import","info","inject","inject(forwardref","injectmodel","injectmodel(room.nam","ispubl","join","join(roomid","leav","leave(us","match","member","member.id","messag","messages/service/message.servic","messageservic","method","model","mongoos","nestjs/common","nestjs/mongoos","new","notfoundexcept","notfoundexception('room","object","object.assign(room","owner","owner._id","partial","populate('memb","populate('own","privat","promise.al","remov","remove(room.memb","result","return","room","room._id","room.members.push(user._id","room.members.some((memb","room.sav","room:delet","room:join","room:leav","room:upd","roomdto","roomgateway","roomid","roommodel","roomservic","schema/room.schema","sendmessag","sendmessage(room","sendmessageexcept","sendmessageexcept(except","shared/utils/get","shared/utils/remov","socket","socket.io","socket.join(`room_${room._id","socket.leave(`room_${room._id","sourc","string","subscribesocket","subscribesocket(socket","t","this.getroom(roomid","this.getroombyidandowner(roomid","this.handledeleteroom(room","this.handlejoinroom(us","this.handleleaveroom(us","this.handleupdateroom(room","this.messageservice.deleteroommessages(room","this.roomgateway.server.in(`room_${room._id}`).allsocket","this.roomgateway.server.to(`room_${room._id}`).emit(ev","this.roommodel","this.roommodel.cr","this.roommodel.find","this.roommodel.findoneanddelet","this.sendmessage(room","this.userservice.filteruser(us","this.userservice.unpopulatedfield","this.validateroom(roomid","throw","true","unsubscribesocket","unsubscribesocket(socket","updat","update(room","updatequeri","user","user._id","user.id","user/schema/user.schema","user/service/user.servic","userservic","validateroom","validateroom(roomid","validateroombyidandown","validateroombyidandowner(roomid","void"],"injectables/SocketConnectionService.html":["0","apps/api/src/features/user/service/socket","async","await","class","connect","connection.populate('user').execpopul","connection.schema","connection.service.t","connection.us","connections.length","const","constructor","constructor(socketconnectionmodel","creat","create(socket","delet","delete(socket","deleteallconnect","environ","environments.port","environments/environ","export","fals","file","findon","forwardref","getal","getall(us","getbyid","getbyid(id","getbysocket","getbysocket(socket","hostnam","import","info","inject","inject(forwardref","injectmodel","injectmodel(socketconnection.nam","match","method","model","mongoos","nestjs/common","nestjs/mongoos","os","populate('us","privat","result","return","schema/socket","schema/user.schema","serverhostnam","serverport","socket","socket.id","socket.io","socketconnect","socketconnectionmodel","socketconnectionservic","socketid","sourc","string","this.getall(us","this.getbysocket(socket","this.socketconnectionmodel","this.socketconnectionmodel.cr","this.socketconnectionmodel.deletemani","this.socketconnectionmodel.find","this.socketconnectionmodel.findbyid(id).populate('us","this.socketconnectionmodel.findbyidanddelete(connection._id","this.userservice.getonlineus","true","user","user._id","user.onlin","user.sav","user.servic","userservic","void"],"injectables/SpeakerService.html":["1","_filterqueri","_id","a.start.gettim","apps/api/src/features/speakers/service/speaker.service.t","async","await","b","b.start.gettim","befor","class","conf","conf._id","conf/schema/conf.schema","conf/service/conf.servic","conf:delete_speak","confservic","const","constructor","constructor(speakermodel","createconfspeak","createconfspeaker(start","date","delet","deleteconfspeak","deleteconfspeaker(conf","encontrado","end","execpopul","export","file","filter","filter.start","filterqueri","forwardref","getconfspeak","getconfspeakers(conf","getnextconfspeak","getnextconfspeakers(conf","getpopulatedspeak","getpopulatedspeaker(id","getspeak","getspeaker(id","getspeakerfilt","getspeakerfilter(start","getspeakers(filt","import","info","inject","inject(forwardref","injectmodel","injectmodel(speaker.nam","limit","lte","match","method","model","mongoos","nestjs/common","nestjs/mongoos","new","notfoundexcept","notfoundexception('palestrant","number","não","object","populate('start","privat","result","return","schema/speaker.schema","sortspeak","sortspeakers(speak","sourc","speaker","speakerid","speakermodel","speakers.sort((a","speakerservic","start","string","this.confservice.sendmessage(conf","this.getpopulatedspeaker(id","this.getspeaker(id","this.getspeakers(filt","this.sortspeak","this.speakermodel.cr","this.speakermodel.find","this.speakermodel.find(filter).limit(limit).sort","this.speakermodel.findbyid(id","this.speakermodel.findbyid(id).populate('conf","this.speakermodel.findoneanddelet","this.userservice.unpopulatedfield","throw","user/service/user.servic","userservic","validatepopulatedspeak","validatepopulatedspeaker(id","validatespeak","validatespeaker(id","void"],"injectables/SponsorService.html":["_id","apps/api/src/features/sponsor/service/sponsor.service.t","async","await","blockedfield","bodi","class","client","color","conf","conf._id","conf/schema/conf.schema","conf/service/conf.servic","confservic","const","constructor","constructor(sponsormodel","creat","create(sponsor","delet","delete(sponsor","descript","dto/sponsor.dto","emit(ev","encontrada","event","except","except.broadcast.to(`sponsor_${sponsor._id}`).emit(ev","execpopul","export","file","find","findbyid(sponsorid","findon","findoneandupd","forwardref","gateway/sponsor.gateway","getpublicsponsor","getsocket","getsocketcli","getsocketclient(socket).room","getsockets(sponsor","getsponsor","getsponsor(sponsorid","getsponsorbyidandown","getsponsorbyidandowner(sponsorid","getsponsorsbyconf","getsponsorsbyconf(conf","getsponsorsbymemb","getsponsorsbymember(us","getsponsorsbyown","getsponsorsbyowner(us","handledeletesponsor","handledeletesponsor(sponsor","handlejoinsponsor","handlejoinsponsor(us","handleleavesponsor","handleleavesponsor(us","handleupdatesponsor","handleupdatesponsor(sponsor","import","info","inject","inject(forwardref","injectmodel","injectmodel(sponsor.nam","join","join(sponsorid","keyof","leav","leave(us","logo","match","member","member.id","messag","messages/service/message.servic","messageservic","method","model","mongoos","name","nestjs/common","nestjs/mongoos","new","notfoundexcept","notfoundexception('sponsor","não","object","object.assign(sponsor","objectid","owner","owner._id","partial","populate('conf","populate('memb","populate('own","privat","promise.al","properti","remov","remove(sponsor.memb","result","return","schema/sponsor.schema","sendmessag","sendmessage(sponsor","sendmessageexcept","sendmessageexcept(except","shared/utils/get","shared/utils/remov","slug","socket","socket.io","socket.join(`sponsor_${sponsor._id","socket.leave(`sponsor_${sponsor._id","sourc","sponsor","sponsor._id","sponsor.members.push(user._id","sponsor.members.some((memb","sponsor.sav","sponsor:delet","sponsor:join","sponsor:leav","sponsor:upd","sponsordto","sponsorgateway","sponsorid","sponsormodel","sponsorservic","string","subscribesocket","subscribesocket(socket","t","this.blockedfields.join","this.confservice.unpopulatedfield","this.getsponsor(sponsorid","this.getsponsorbyidandowner(sponsorid","this.handledeletesponsor(sponsor","this.handlejoinsponsor(us","this.handleleavesponsor(us","this.handleupdatesponsor(sponsor","this.sendmessag","this.sendmessage(sponsor","this.sponsorgateway.serv","this.sponsorgateway.server.in(`sponsor_${sponsor._id}`).allsocket","this.sponsormodel","this.sponsormodel.cr","this.sponsormodel.find","this.sponsormodel.findon","this.sponsormodel.findoneanddelet","this.userservice.filteruser(us","this.userservice.unpopulatedfield","this.validatesponsor(sponsorid","throw","to(`sponsor_${sponsor._id","unpopulatedfield","unsubscribesocket","unsubscribesocket(socket","updat","update(sponsor","updatequeri","user","user._id","user.id","user/schema/user.schema","user/service/user.servic","userservic","validatesponsor","validatesponsor(sponsorid","validatesponsorbyidandown","validatesponsorbyidandowner(sponsorid","void","websit","youtub"],"injectables/SubscriptionService.html":["admin","apps/api/src/features/user/service/subscription.service.t","async","await","break","case","catch((","class","code","config/dist","const","constructor","constructor(webnotificationservic","creat","create(us","data","default","delet","delete(us","deleteal","deleteall(us","dictionari","direct","e","enum","export","file","firebas","get(us","getal","getall(us","import","info","inject","injectmodel","injectmodel(subscription.nam","interfac","logger","logger('subscriptionservic","match","messag","messaging.notificationmessagepayload","method","mobiledata","mobilenotificationservic","model","mongoos","nestjs/common","nestjs/mongoos","new","notif","notification.servic","notification/service/mobil","notification/service/web","notificationpayload","notificationtyp","partial","payload","payload.mobiledata","payload.notif","payload.webdata","privat","properti","result","return","room","schema/subscription.schema","schema/user.schema","sendnotif","sendnotification(json.parse(subscription.subscript","sendnotification(subscription.subscript","sendnotification(us","sourc","string","subscript","subscription.typ","subscriptionmodel","subscriptionservic","subscriptiontyp","subscriptiontype.mobil","subscriptiontype.web","switch","this.getall(us","this.logger.debug(`${subscription.typ","this.mobilenotificationservic","this.subscriptionmodel.cr","this.subscriptionmodel.deletemani","this.subscriptionmodel.find","this.subscriptionmodel.findon","this.subscriptionmodel.findoneanddelet","this.webnotificationservic","type","user","user._id","void","webdata","webnotificationservic"],"injectables/UserService.html":["_filterqueri","allowedfield","allowedfields.includes(field","app","appleid","apps/api/src/features/user/service/user.service.t","async","await","base.replace(/\\s/g","blockedfield","class","connection.servic","const","constructor","constructor(usermodel","continu","creat","create(bodi","data","delet","email","event","except.broadcast.to(`user_${user._id}`).emit(ev","export","facebookid","field","file","filterqueri","filterus","filteruser(us","forwardref","found","gateway/user.gateway","generateusernam","generateusername(bas","getonlineus","getus","getuser(usernam","getuserbi","getuserby(filt","getuserbyemail","getuserbyemail(mail","getuserbygoogleid","getuserbygoogleid(id","getuserbyid","getuserbyid(id","getuserbynam","getuserbyname(nam","googleid","id","import","info","inject","inject(forwardref","injectmodel","injectmodel(user.nam","keyof","match","messag","method","model","mongodb","mongoos","name","nestjs/common","nestjs/mongoos","new","newinput","notfoundexcept","notfoundexception('us","object.assign(us","objectid","onlin","partial","password","privat","properti","randomstr","randomstring(6","regex","regexp(`^${mail","regexp(`^${nam","result","return","schema/user.schema","sendmessag","sendmessage(us","sendmessageexcept","sendmessageexcept(except","sessiontoken","shared/utils/random","socket","socket.io","socket.join(`user_${user._id","socket.leave(`user_${user._id","socketconnectionservic","sourc","string","subscribesocket","subscribesocket(socket","t","this.blockedfield","this.blockedfields.join","this.generateusername(nam","this.getuserbyemail(email","this.getuserbyemail(usernam","this.getuserbyid(id","this.getuserbyid(user._id","this.getuserbyname(nam","this.getuserbyname(usernam","this.socketconnectionservice.create(socket","this.socketconnectionservice.delete(socket","this.usergateway.server.to(`user_${user._id}`).emit(ev","this.usermodel.create(bodi","this.usermodel.find","this.usermodel.findbyid(id","this.usermodel.findbyidandupdate(user._id","this.usermodel.findon","this.usermodel.findone(filt","throw","true","unpopulatedfield","unsubscribesocket","unsubscribesocket(socket","updatequeri","updateus","updateuser(us","updateuserobject","updateuserobject(us","user","user.generatesessiontoken","user.sav","user.toobject","usergateway","usermodel","usernam","userobject","userobject[field","userservic","validateuserbyemail","validateuserbyemail(email","validateuserbyid","validateuserbyid(id","validateuserbynam","validateuserbyname(usernam","virtual","void"],"injectables/WebNotificationService.html":["admin","apps/api/src/features/notification/service/web","class","data","export","file","firebas","import","info","inject","json.stringifi","match","messag","messaging.webpushconfig","method","nestjs/common","notif","notification.service.t","payload","payload.data","payload.notif","push","pushsubscript","result","return","sendnotif","sendnotification(subscript","sourc","subscript","void","web","webnotificationservic","webpushconfig"],"classes/AppleLoginDto.html":["accesstoken","android","applelogindto","apps/api/src/features/auth/dto/appl","authorizationcod","class","export","file","import","info","io","isnotempti","isopt","isstr","login.dto.t","match","name","properti","result","sourc","string","type","valid","web"],"classes/ConfDto.html":["apiproperti","apps/api/src/features/conf/dto/conf.dto.t","boolean","class","confdto","createdat","date","descript","end","export","file","import","info","isboolean","isdatestr","isnotempti","ispubl","isstr","match","member","nestjs/swagg","owner","properti","requir","result","slug","sourc","start","string","titl","true","type","updatedat","user","user/schema/user.schema","valid"],"classes/ConfSpeakerDto.html":["2000","apiproperti","apps/api/src/features/speakers/dto/conf","bio","class","confid","confspeakerdto","date","end","export","fals","file","id","import","info","isdatestr","ismongoid","isnotempti","isstr","match","maxlength","maxlength(2000","name","nestjs/swagg","objectid","properti","requir","result","shared/mongoose/object","sourc","speaker.dto.t","start","string","true","type","valid"],"classes/CustomSocketIoAdapter.html":["adapt","address","apps/api/src/core/adapter/custom","class","const","createioserv","createioserver(port","customsocketioadapt","export","extend","extern","externalsocketioadapt","file","getaddress","getaddress(socket","import","info","io","io.adapter.t","match","method","next","number","option","result","return","server","server.use((socket","serveropt","shared/utils/get","socket","socket.handshake.address","socket.io","sourc","super.createioserver(port","void"],"classes/DeleteConfSpeakerDto.html":["apps/api/src/features/speakers/dto/delet","class","conf","confid","deleteconfspeakerdto","export","file","import","info","ismongoid","isopt","match","properti","result","sourc","speaker.dto.t","speakerid","string","valid"],"classes/DeleteDirectMessageDto.html":["apiproperti","apps/api/src/features/messages/dto/delet","class","deletedirectmessagedto","direct","export","fals","file","import","info","ismongoid","isopt","match","message.dto.t","messageid","nestjs/swagg","properti","requir","result","sourc","string","true","valid"],"classes/DeleteRoomMessageDto.html":["apiproperti","apps/api/src/features/messages/dto/delet","class","deleteroommessagedto","export","fals","file","import","info","ismongoid","isopt","match","message.dto.t","messageid","nestjs/swagg","properti","requir","result","room","roomid","sourc","string","valid"],"classes/DirectMessageDto.html":["apiproperti","apps/api/src/features/messages/dto/direct","class","directmessagedto","export","fals","file","import","info","ismongoid","isstr","match","maxlength","maxlength(2000","messag","message.dto.t","nestjs/swagg","properti","requir","result","sourc","string","true","valid"],"classes/ExternalSocketIoAdapter.html":["0","1","1e6","1mb","abstractwsadapt","ack","ack(respons","ack)).pip","adapter.t","allow","app","apps/api/src/core/adapter/extern","array.isarray(payload","bindmessagehandl","bindmessagehandlers(cli","callback","class","client","client.emit(response.ev","const","constructor","constructor(app","cooki","cor","creat","create(port","createioserv","createioserver(port","credenti","data","disconnect","disconnect_ev","disconnect_event).pip","export","extend","externalsocketioadapt","file","filter","filter((respons","first","fromev","fromevent(cli","handler","handlers.foreach","httponli","import","inestapplicationcontext","info","io","isack","isfunct","isfunction(ack","isfunction(lastel","isfunction(server.of","isnil","isnil(respons","lastel","map","map((respons","mappayload","mappayload(payload","match","maxhttpbuffers","mergemap","mergemap((payload","messag","message).pip","messagemappingproperti","method","namespac","nestjs/common","nestjs/common/utils/shared.util","nestjs/websocket","nestjs/websockets/const","new","number","observ","opt","opt).of(namespac","option","origin","path","payload","payload.length","payload.slice(0","payload[0","payload[payload.length","per","port","post","privat","public","readonli","request","respons","response.data","response.ev","result","return","rxj","rxjs/oper","s","server","server(port","server(this.httpserv","server.of(namespac","share","size","socket","socket.io","sourc","source$.subscribe(([respons","string","super(app","takeuntil","takeuntil(disconnect","this.cor","this.createioserver(port","this.httpserv","this.mappayload(payload","transform","transform(callback(data","true","void"],"classes/FetchMessagesDto.html":["30","apiproperti","apps/api/src/features/messages/dto/fetch","befor","class","date","default","export","fals","fetchmessagesdto","file","import","info","isdat","isnumb","isopt","limit","match","messages.dto.t","nestjs/swagg","number","properti","requir","result","sourc","transform","type","valid","valu"],"classes/FetchSpeakersDto.html":["30","apps/api/src/features/speakers/dto/fetch","befor","class","date","default","export","fetchspeakersdto","file","import","info","isdat","isnumb","isopt","limit","match","number","properti","result","sourc","speakers.dto.t","transform","type","valid","valu"],"classes/LoginDto.html":["apiproperti","apps/api/src/features/auth/dto/login.dto.t","class","export","file","import","info","isnotempti","isstr","logindto","match","nestjs/swagg","password","properti","requir","result","sourc","string","true","type","usernam","valid"],"classes/ObjectId.html":["apps/api/src/shared/mongoose/object","class","export","extend","file","id.t","import","info","match","mongoos","objectid","result","schema","schema.types.objectid","sourc"],"classes/RecoverPasswordDto.html":["apiproperti","apps/api/src/features/user/dto/recov","class","email","export","file","import","info","isemail","isstr","match","nestjs/swagg","password.dto.t","properti","recoverpassworddto","requir","result","sourc","string","true","type","valid"],"classes/RedisIoAdapter.html":["app","apps/api/src/core/adapter/redi","class","const","constructor","constructor(host","createadapt","createioserv","createioserver(port","custom","customsocketioadapt","export","extend","file","host","import","inestapplicationcontext","info","io.adapt","io.adapter.t","match","method","nestjs/common","new","number","option","port","privat","properti","pubclient","pubclient.dupl","redi","redisadapt","rediscli","redisioadapt","result","return","server","server.adapter(this.redisadapt","serveropt","socket","socket.io","sourc","string","subclient","super(app","super.createioserver(port","this.redisadapt","void"],"classes/RegisterDto.html":["2,20","6","60","9_","apiproperti","apps/api/src/features/auth/dto/register.dto.t","class","email","export","file","import","info","inválido","isemail","isnotempti","isstr","match","matches(/[a","maxlength","maxlength(60","messag","minlength","minlength(6","nestjs/swagg","password","properti","registerdto","requir","result","sourc","string","true","type","usernam","usuário","valid","z0","za"],"classes/RoomDto.html":["apiproperti","apps/api/src/features/room/dto/room.dto.t","boolean","class","export","file","import","info","isboolean","isnotempti","ispubl","isstr","match","member","nestjs/swagg","owner","properti","requir","result","roomdto","sourc","string","titl","true","type","user","user/schema/user.schema","valid"],"classes/RoomMessageDto.html":["apiproperti","apps/api/src/features/messages/dto/room","class","export","file","import","info","ismongoid","isstr","match","maxlength","maxlength(2000","messag","message.dto.t","nestjs/swagg","properti","requir","result","roomid","roommessagedto","sourc","string","true","valid"],"classes/SponsorDto.html":["apiproperti","apps/api/src/features/sponsor/dto/sponsor.dto.t","class","color","descript","export","fals","file","import","info","isnotempti","isstr","match","name","nestjs/swagg","properti","requir","result","slug","sourc","sponsordto","string","true","type","valid","websit","youtub"],"classes/SubscribeEventDto.html":["apiproperti","apps/api/src/features/user/dto/subscrib","boolean","class","confirmpres","event.dto.t","export","file","import","info","isboolean","isnotempti","isopt","match","nestjs/swagg","properti","requir","result","sharedemail","sourc","subscribeeventdto","true","type","valid"],"classes/UpdateEmailDto.html":["apiproperti","apps/api/src/features/user/dto/upd","class","email","email.dto.t","export","file","import","info","isemail","isnotempti","match","nestjs/swagg","properti","requir","result","sourc","string","true","type","updateemaildto","valid"],"classes/UpdatePasswordDto.html":["6","60","apiproperti","apps/api/src/features/user/dto/upd","class","confirmpassword","currentpassword","export","file","import","info","isnotempti","isstr","match","maxlength","maxlength(60","minlength","minlength(6","nestjs/swagg","password","password.dto.t","properti","requir","result","sourc","string","true","type","updatepassworddto","valid"],"classes/UpdateUsernameDto.html":["2","2,20","20","9_","apiproperti","apps/api/src/features/user/dto/upd","class","export","file","import","info","inválido","isnotempti","isstr","match","matches(/[a","maxlength","messag","minlength","nestjs/swagg","properti","requir","result","sourc","string","true","type","updateusernamedto","usernam","username.dto.t","usuário","valid","z0","za"],"interfaces/Client.html":["apps/api/src/shared/utils/get","case","client","client.t","code","config","const","ctx","ctx.gettyp","ctx.switchtohttp().getrequest","ctx.switchtows().getclient().handshak","default","dictionari","executioncontext","export","features/room/schema/room.schema","features/user/schema/user.schema","file","getclient","header","http","import","info","interfac","match","nestjs/common","properti","result","return","room","sourc","switch","t","type","undefin","user","ws"],"interfaces/MailerSchema.html":["apps/api/src/core/mail/config/mailer.config.t","auth","code","config","configfactori","configfactory.getconfig","const","default","defaultvalu","export","fals","file","host","import","info","interfac","join","join(paths.config","mailer.config.json","mailerconfig","mailerconfig.initprettifi","maileropt","maileroptions['default","maileroptions['transport","mailerschema","match","modules/mail","nestj","pass","path","properti","repli","result","secur","shared/constants/path","smtp.example.com","sourc","topsecret","transport","type","user","user@example.com"],"interfaces/NotificationPayload.html":["admin","apps/api/src/features/user/service/subscription.service.t","async","await","break","case","catch((","class","code","config/dist","const","constructor","create(us","data","default","delet","delete(us","deleteall(us","dictionari","direct","e","enum","export","file","firebas","get(us","getall(us","import","info","inject","injectmodel","injectmodel(subscription.nam","interfac","logger","logger('subscriptionservic","match","messag","messaging.notificationmessagepayload","mobiledata","mobilenotificationservic","model","mongoos","nestjs/common","nestjs/mongoos","new","notif","notification.servic","notification/service/mobil","notification/service/web","notificationmessagepayload","notificationpayload","notificationtyp","partial","payload","payload.mobiledata","payload.notif","payload.webdata","privat","properti","result","return","room","schema/subscription.schema","schema/user.schema","sendnotification(json.parse(subscription.subscript","sendnotification(subscription.subscript","sendnotification(us","sourc","string","subscript","subscription.typ","subscriptionmodel","subscriptionservic","subscriptiontyp","subscriptiontype.mobil","subscriptiontype.web","switch","this.getall(us","this.logger.debug(`${subscription.typ","this.mobilenotificationservic","this.subscriptionmodel.cr","this.subscriptionmodel.deletemani","this.subscriptionmodel.find","this.subscriptionmodel.findon","this.subscriptionmodel.findoneanddelet","this.webnotificationservic","type","user","user._id","webdata","webnotificationservic"],"interfaces/Platform.html":["android","appid","appl","apps/api/src/features/auth/config/auth.config.t","appsecret","auth","auth.config.json","authconfig","authconfig.initprettifi","authconfigdefault","clientid","code","config","config.default","configfactori","configfactory.getconfig","const","export","facebook","file","googl","import","info","interfac","io","join","join(paths.config","keyidentifi","match","number","packageid","path","platform","properti","redirecturi","result","secret","secretsschema","shared/constants/path","sourc","string","teamid","type","web"],"interfaces/Secret.html":["android","appid","appl","apps/api/src/features/auth/config/auth.config.t","appsecret","auth","auth.config.json","authconfig","authconfig.initprettifi","authconfigdefault","clientid","code","config","config.default","configfactori","configfactory.getconfig","const","export","facebook","file","googl","import","info","interfac","io","join","join(paths.config","keyidentifi","match","number","packageid","path","platform","properti","redirecturi","result","secret","secretsschema","shared/constants/path","sourc","string","teamid","type","web"],"interfaces/SecretsSchema.html":["android","appid","appl","apps/api/src/features/auth/config/auth.config.t","appsecret","auth","auth.config.json","authconfig","authconfig.initprettifi","authconfigdefault","clientid","code","config","config.default","configfactori","configfactory.getconfig","const","export","facebook","file","googl","import","info","interfac","io","join","join(paths.config","keyidentifi","match","number","packageid","path","platform","properti","redirecturi","result","secret","secretsschema","shared/constants/path","sourc","string","teamid","type","web"],"interfaces/SocialUser.html":["access","access_token","alreadi","apps/api/src/features/auth/service/auth.service.t","async","auth.guard","authservic","await","badrequestexcept","badrequestexception('email","catch","class","const","constructor","customnam","decod","e","email","environ","environments.accesstokenexpir","environments/environ","environments[typ","error","exist","expir","export","fieldid","file","forwardref","getaccesstokenoptions(us","getrefreshtokenoptions(us","getsocialus","getsocialuserhandl","gettokenoptions(typ","guard/jwt","httpexcept","id","import","info","inject","inject(forwardref","instanceof","interfac","internalus","internaluser.email","internaluser.sav","jwtservic","jwtsignopt","keyof","login(us","loginwithrefreshtoken(refreshtoken","loginwiththirdparti","match","name","nestjs/common","nestjs/jwt","new","number","option","options.expiresin","password","payload","privat","promis","properti","refresh","refresh_token","refreshtoken","result","return","secret","socialus","sourc","string","sub","this.getaccesstokenoptions(us","this.getrefreshtokenoptions(us","this.gettokenoptions('access","this.gettokenoptions('refresh","this.jwtservice.decode(refreshtoken","this.jwtservice.signasync","this.jwtservice.verifyasync","this.login(internalus","this.login(us","this.userservice.cr","this.userservice.generateusernam","this.userservice.getuser(usernam","this.userservice.getuserbi","this.userservice.getuserbyemail(email","this.userservice.validateuserbyid(decoded.sub","throw","token","tokenexpir","tokenrespons","tokensecret","tri","type","unauthorizedexcept","unauthorizedexception('incorrect","unauthorizedexception('invalid","unauthorizedexception('us","user","user.id","user.sessiontoken","user.usernam","user.validatepassword(password","user/schema/user.schema","user/service/user.servic","usernam","userservic","validate(usernam"],"interfaces/Token.html":["allowani","apps/api/src/features/auth/guard/jwt","async","auth.guard.t","author","authorization[0].tolowercas","authorization[1","authservic","autorização","await","bearer","canactiv","canactivate(ctx","catch","class","client","client.headers.authorization?.split","client.us","const","constructor","ctx.gethandl","ctx.gettyp","ctx.switchtows().getclient().disconnect(tru","de","decod","decodificar","e","encontrado","executioncontext","export","file","fornecido","forwardref","getclient","getclient(ctx","getrequest(ctx","gettoken(ctx","handlerequest(ctx","implement","import","incapaz","info","inject","inject(forwardref","interfac","invalid","inválida","jwtauthguard","jwtservic","match","messag","nestjs/common","nestjs/cor","nestjs/jwt","new","null","não","o","privat","promis","properti","reflector","result","return","service/auth.servic","shared/utils/get","socket","socket.io","sourc","string","sub","this.authservice.getaccesstokenoptions(us","this.getrequest(ctx","this.gettoken(ctx","this.handlerequest(ctx","this.jwtservice.decode(token","this.jwtservice.verifyasync","this.reflector","this.reflector.get('allow","this.throwexception(ctx","this.userservice.validateuserbyid(sub","this.validate(decod","throw","throwexception(ctx","tipo","token","tri","true","type","unauthorizedexcept","unauthorizedexception(messag","user","user/service/user.servic","usernam","userservic","valid","ws"],"interfaces/TokenResponse.html":["access","access_token","alreadi","apps/api/src/features/auth/service/auth.service.t","async","auth.guard","authservic","await","badrequestexcept","badrequestexception('email","catch","class","const","constructor","customnam","decod","e","email","environ","environments.accesstokenexpir","environments/environ","environments[typ","error","exist","expir","export","fieldid","file","forwardref","getaccesstokenoptions(us","getrefreshtokenoptions(us","getsocialus","getsocialuserhandl","gettokenoptions(typ","guard/jwt","httpexcept","id","import","info","inject","inject(forwardref","instanceof","interfac","internalus","internaluser.email","internaluser.sav","jwtservic","jwtsignopt","keyof","login(us","loginwithrefreshtoken(refreshtoken","loginwiththirdparti","match","name","nestjs/common","nestjs/jwt","new","number","option","options.expiresin","password","payload","privat","promis","properti","refresh","refresh_token","refreshtoken","result","return","secret","socialus","sourc","string","sub","this.getaccesstokenoptions(us","this.getrefreshtokenoptions(us","this.gettokenoptions('access","this.gettokenoptions('refresh","this.jwtservice.decode(refreshtoken","this.jwtservice.signasync","this.jwtservice.verifyasync","this.login(internalus","this.login(us","this.userservice.cr","this.userservice.generateusernam","this.userservice.getuser(usernam","this.userservice.getuserbi","this.userservice.getuserbyemail(email","this.userservice.validateuserbyid(decoded.sub","throw","token","tokenexpir","tokenrespons","tokensecret","tri","type","unauthorizedexcept","unauthorizedexception('incorrect","unauthorizedexception('invalid","unauthorizedexception('us","user","user.id","user.sessiontoken","user.usernam","user.validatepassword(password","user/schema/user.schema","user/service/user.servic","usernam","userservic","validate(usernam"],"miscellaneous.html":["allowani","auth","authconfig","authconfigdefault","confschema","currentus","defaultvalu","env","environ","facebook","fcm","getaddress","getaddressfrom","getclient","getrequest","getsocketcli","getsocketus","geturl","mailerconfig","match","messageschema","miscellan","notificationconfig","path","randomstr","recoverschema","redi","remov","result","roomschema","socketconnectionschema","speakerschema","sponsorschema","subscriptionschema","userschema","variabl"],"coverage.html":["0","0/0","0/1","0/10","0/11","0/17","0/2","0/21","0/24","0/3","0/4","0/5","0/6","0/7","adapter.t","appleauthservic","applelogindto","apps/api/src/core/adapter/custom","apps/api/src/core/adapter/extern","apps/api/src/core/adapter/redi","apps/api/src/core/mail/config/mailer.config.t","apps/api/src/features/auth/config/auth.config.t","apps/api/src/features/auth/dto/appl","apps/api/src/features/auth/dto/login.dto.t","apps/api/src/features/auth/dto/register.dto.t","apps/api/src/features/auth/guard/jwt","apps/api/src/features/auth/service/appl","apps/api/src/features/auth/service/auth.service.t","apps/api/src/features/auth/service/googl","apps/api/src/features/conf/dto/conf.dto.t","apps/api/src/features/conf/service/conf.service.t","apps/api/src/features/messages/dto/delet","apps/api/src/features/messages/dto/direct","apps/api/src/features/messages/dto/fetch","apps/api/src/features/messages/dto/room","apps/api/src/features/messages/service/message.service.t","apps/api/src/features/notification/service/mobil","apps/api/src/features/notification/service/web","apps/api/src/features/room/dto/room.dto.t","apps/api/src/features/room/service/room.service.t","apps/api/src/features/speakers/dto/conf","apps/api/src/features/speakers/dto/delet","apps/api/src/features/speakers/dto/fetch","apps/api/src/features/speakers/service/speaker.service.t","apps/api/src/features/sponsor/dto/sponsor.dto.t","apps/api/src/features/sponsor/service/sponsor.service.t","apps/api/src/features/user/dto/recov","apps/api/src/features/user/dto/subscrib","apps/api/src/features/user/dto/upd","apps/api/src/features/user/service/recover.service.t","apps/api/src/features/user/service/socket","apps/api/src/features/user/service/subscription.service.t","apps/api/src/features/user/service/user.service.t","apps/api/src/shared/mongoose/object","apps/api/src/shared/pipe/pars","apps/api/src/shared/utils/get","auth.guard.t","auth.service.t","authservic","class","client","client.t","conf","confdto","confservic","confspeakerdto","connection.service.t","coverag","customsocketioadapt","deleteconfspeakerdto","deletedirectmessagedto","deleteroommessagedto","direct","directmessagedto","document","email.dto.t","event.dto.t","externalsocketioadapt","fetchmessagesdto","fetchspeakersdto","file","googleauthservic","id.pipe.t","id.t","identifi","inject","interfac","io","io.adapter.t","jwtauthguard","login.dto.t","logindto","mailerschema","match","message.dto.t","messages.dto.t","messageservic","mobilenotificationservic","notification.service.t","notificationpayload","object","objectid","parseobjectidpip","password.dto.t","platform","project","recoverpassworddto","recoverservic","redisioadapt","registerdto","result","room","roomdto","roommessagedto","roomservic","secret","secretsschema","socialus","socket","socketconnectionservic","speaker.dto.t","speakers.dto.t","speakerservic","sponsordto","sponsorservic","statement","subscribeeventdto","subscriptionservic","token","tokenrespons","type","updateemaildto","updatepassworddto","updateusernamedto","username.dto.t","userservic","webnotificationservic"]},"length":53},"tokenStore":{"root":{"0":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"coverage.html":{"ref":"coverage.html","tf":0.17132867132867133}},"/":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}},"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}},"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.03146853146853147}}},"2":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006993006993006993}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006993006993006993}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.04895104895104895}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.027972027972027972}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.01048951048951049}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006993006993006993}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.01048951048951049}}},"docs":{}}},"1":{"0":{"0":{"0":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218}}},"docs":{}},"docs":{}},"6":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}},"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.01327433628318584}},"e":{"6":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}},"docs":{}},"m":{"docs":{},"b":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}},"2":{"0":{"0":{"0":{"docs":{"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.011235955056179775}}},"docs":{}},"docs":{"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332}}},"3":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}},"docs":{"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332}},",":{"2":{"0":{"docs":{"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332}}},"docs":{}},"docs":{}}},"3":{"0":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.03636363636363636},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.043478260869565216}}},"docs":{}},"6":{"0":{"docs":{"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.028169014084507043}}},"docs":{"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.028169014084507043}}},"8":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}},"9":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}},"_":{"docs":{"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332}}}},"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.1111111111111111}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.016129032258064516},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.034482758620689655}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}},"y":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}}}}}}},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}}}}}}}}}},"r":{"docs":{},"l":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426}},"l":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}},"(":{"docs":{},"c":{"docs":{},"t":{"docs":{},"x":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.009900990099009901},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.009900990099009901},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576}}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"t":{"docs":{},"x":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}},"(":{"docs":{},"c":{"docs":{},"t":{"docs":{},"x":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.006024096385542169}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.006756756756756757}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.006024096385542169}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.022988505747126436}}}}},"u":{"docs":{},"s":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.007518796992481203}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.030303030303030304}},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010025062656641603}}}},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"o":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"o":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827}}},"docs":{}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":5.0344827586206895},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"/":{"docs":{},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},".":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":5}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":5.024193548387097},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":5.013201320132013},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":5.008032128514056},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":5.051724137931035},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":5.017241379310345},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":5.009925558312655},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":5.0625},"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":5.068181818181818},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":5.0344827586206895},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":5.009009009009009},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":5.0220994475138125},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":5.015151515151516},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":5.008032128514056},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":5.013452914798206},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":5.010025062656641},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":5.0625},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.011111111111111112},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.011363636363636364},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.015625},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.011673151750972763},"coverage.html":{"ref":"coverage.html","tf":0.055944055944055944}},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":5.03030303030303},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":5.033333333333333},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":5.011111111111111},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":5.049382716049383},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":5.051282051282051},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":5.040404040404041},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":5.011363636363637},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":5.010416666666667},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":5.011673151750973},"coverage.html":{"ref":"coverage.html","tf":0.03146853146853147}}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332},"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332},"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.017543859649122806},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.008771929824561403},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.011235955056179775},"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818},"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":0.029411764705882353},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.025},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.023255813953488372},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.025},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.01818181818181818},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.021739130434782608},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.021739130434782608},"classes/ObjectId.html":{"ref":"classes/ObjectId.html","tf":0.05263157894736842},"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.02857142857142857},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.016666666666666666},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.023255813953488372},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.011235955056179775},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.021739130434782608},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.02857142857142857},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.014084507042253521},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"z":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}},"á":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}},"o":{"docs":{"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.01327433628318584},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.033707865168539325}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013201320132013201},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.011235955056179775},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.022727272727272728},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.01556420233463035}},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}},"t":{"docs":{"classes/ObjectId.html":{"ref":"classes/ObjectId.html","tf":0.05263157894736842},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.06451612903225806},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.019801980198019802},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.02610441767068273},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.05172413793103448},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.03017241379310345},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.019851116625310174},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.0625},"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.045454545454545456},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.08045977011494253},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.02702702702702703},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.049723756906077346},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.026515151515151516},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.028112449799196786},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.04035874439461883},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.022556390977443608},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.0625},"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.017543859649122806},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.02631578947368421},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.033707865168539325},"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.05454545454545454},"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":0.029411764705882353},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.05},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.046511627906976744},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.05},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.030973451327433628},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.05454545454545454},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.043478260869565216},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.043478260869565216},"classes/ObjectId.html":{"ref":"classes/ObjectId.html","tf":0.05263157894736842},"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.05714285714285714},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.056179775280898875},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.02631578947368421},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.05},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.046511627906976744},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.02247191011235955},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.043478260869565216},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.05714285714285714},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.028169014084507043},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.041666666666666664},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.06060606060606061},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.06666666666666667},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.05},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.04938271604938271},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.05128205128205128},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.04040404040404041},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.022727272727272728},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.036458333333333336},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.023346303501945526}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}},"o":{"docs":{"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.03508771929824561},"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.030303030303030304},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}},"s":{"docs":{},"'":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775},"coverage.html":{"ref":"coverage.html","tf":0.006993006993006993}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.02631578947368421},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.05}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.08771929824561403},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.03508771929824561},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.0449438202247191},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.06521739130434782},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.05263157894736842},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.05},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.0449438202247191},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.043478260869565216},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.05714285714285714},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.056338028169014086},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.041666666666666664}}}}}}}}},"i":{"docs":{},"l":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.03636363636363636},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.043478260869565216}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.08771929824561403},"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":0.058823529411764705},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.05},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.046511627906976744},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.05454545454545454},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.06521739130434782},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.043478260869565216}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.08771929824561403},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.03508771929824561},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.033707865168539325},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.05},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.06521739130434782},"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.05714285714285714},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.039473684210526314},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.03333333333333333},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.046511627906976744},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.07865168539325842},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.056338028169014086},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.041666666666666664}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.017543859649122806},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.03333333333333333},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.06521739130434782}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.03636363636363636},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.043478260869565216}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.02631578947368421},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.033707865168539325}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.02247191011235955},"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":0.08823529411764706},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.075},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.06976744186046512},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.05},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.046511627906976744}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.05714285714285714},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.02631578947368421},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.05714285714285714}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.2222222222222222},"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"modules.html":{"ref":"modules.html","tf":0.4},"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.016129032258064516},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.034482758620689655},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.041666666666666664},"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.045454545454545456},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.022988505747126436},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.041666666666666664},"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.03508771929824561},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.017543859649122806},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.02247191011235955},"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.03636363636363636},"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":0.058823529411764705},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.05},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.046511627906976744},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.05},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.03636363636363636},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.043478260869565216},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.043478260869565216},"classes/ObjectId.html":{"ref":"classes/ObjectId.html","tf":0.10526315789473684},"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.05714285714285714},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.02247191011235955},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.039473684210526314},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.03333333333333333},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.046511627906976744},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.02247191011235955},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.043478260869565216},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.05714285714285714},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.028169014084507043},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.0625},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.030303030303030304},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.03333333333333333},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.011111111111111112},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.024691358024691357},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.02564102564102564},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.020202020202020204},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.010416666666666666},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372},"coverage.html":{"ref":"coverage.html","tf":0.006993006993006993}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"/":{"docs":{},"[":{"docs":{},"a":{"docs":{"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332}}}}}}}}}}},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.02247191011235955},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.025},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.02631578947368421},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.023255813953488372},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.04225352112676056},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332}},"(":{"2":{"0":{"0":{"0":{"docs":{"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.011235955056179775},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.025},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.023255813953488372}}},"docs":{}},"docs":{}},"docs":{}},"6":{"0":{"docs":{"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.014084507042253521}}},"docs":{}},"docs":{}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}}},"p":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"[":{"docs":{},"'":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":5.033333333333333},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":10.2}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.022988505747126436},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.011111111111111112}}}}},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"classes/ObjectId.html":{"ref":"classes/ObjectId.html","tf":0.05263157894736842},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}},"d":{"docs":{},"b":{"docs":{"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":5.041666666666667},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.02242152466367713},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.016666666666666666},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.016666666666666666}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332},"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332},"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.045454545454545456}}}}}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.008032128514056224},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.008032128514056224},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.02631578947368421},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.05}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.012048192771084338},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.04218362282878412},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.013513513513513514},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.012048192771084338},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.015037593984962405},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.075},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.06976744186046512},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.012048192771084338},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":5.004962779156328},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.013513513513513514},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.012048192771084338},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.01818181818181818},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}}}}}}}},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.007444168734491315}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}},"t":{"docs":{},"o":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.025},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.023255813953488372},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.025},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.023255813953488372},"coverage.html":{"ref":"coverage.html","tf":0.013986013986013986}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.009925558312655087},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.075},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.06976744186046512}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.01327433628318584}}}}}}}}}}}}}}}}},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332}}}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.02631578947368421},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.04225352112676056},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332}},"(":{"6":{"docs":{"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.014084507042253521}}},"docs":{}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":10.011627906976743}}}}}}}}}}},"n":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.1111111111111111}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.016129032258064516},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.009900990099009901},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802},"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.05263157894736842},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.033707865168539325},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.033707865168539325},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.01893939393939394},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.011673151750972763}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.01327433628318584}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"j":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666}},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332},"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}},"/":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.008771929824561403},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.011235955056179775},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.025},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.023255813953488372},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.025},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.01818181818181818},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.021739130434782608},"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.02857142857142857},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.016666666666666666},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.023255813953488372},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.011235955056179775},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.021739130434782608},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.02857142857142857},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.014084507042253521},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.016129032258064516},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.019801980198019802},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543},"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.012531328320802004},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.022727272727272728},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.010416666666666666},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.023346303501945526}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}}},"x":{"docs":{},"t":{"docs":{"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.03636363636363636}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.01240694789081886},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.015151515151515152},"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.03636363636363636},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.017699115044247787},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.03636363636363636},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.043478260869565216},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.0449438202247191},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.038461538461538464},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.011363636363636364},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}},"l":{"docs":{},"l":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}},"o":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}}},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.013452914798206279},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.027777777777777776}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.011111111111111112}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332},"coverage.html":{"ref":"coverage.html","tf":0.006993006993006993}}}}}}}}}}}},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":5.011111111111111},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.011111111111111112}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}}},"ã":{"docs":{},"o":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.010416666666666666}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.1111111111111111},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.017543859649122806},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.008771929824561403},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.011235955056179775},"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":0.029411764705882353},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.025},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.023255813953488372},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.025},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.01818181818181818},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.021739130434782608},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.021739130434782608},"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.02857142857142857},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.016666666666666666},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.023255813953488372},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.011235955056179775},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.021739130434782608},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.02857142857142857},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.014084507042253521},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013201320132013201},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.014056224899598393},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.04741379310344827},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.017369727047146403},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.009009009009009009},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.026515151515151516},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.014056224899598393},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.02242152466367713},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.012531328320802004},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.02247191011235955},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.022222222222222223},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.011363636363636364},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.036458333333333336},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.011673151750972763}},"e":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.016129032258064516}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.016129032258064516},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.03333333333333333},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.024691358024691357},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.02564102564102564},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.020202020202020204},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}}}},"s":{"docs":{},"s":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013201320132013201},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.007518796992481203},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.06521739130434782},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.039473684210526314},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.04225352112676056},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.02857142857142857},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.014084507042253521},"coverage.html":{"ref":"coverage.html","tf":0.006993006993006993}}}}}}}}}}}}}},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.009900990099009901},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.0625},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.0625},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.011363636363636364},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.011673151750972763}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332}}}}}},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.011111111111111112}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.011111111111111112}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}},"docs":{}}}}}}}},"[":{"0":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}},"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}},"s":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":5.045454545454546},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.037037037037037035},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.006024096385542169},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.006756756756756757},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.006024096385542169}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.014056224899598393},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.013513513513513514},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.012048192771084338}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.006024096385542169}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.017369727047146403}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}},"t":{"docs":{},"o":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}},"u":{"docs":{},"s":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.033707865168539325}}}},"s":{"docs":{},"t":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.045454545454545456}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.041666666666666664}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.035398230088495575}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.02247191011235955}},".":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":5.061728395061729},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.05128205128205128},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.10101010101010101},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":5}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}},"(":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.2222222222222222},"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"modules.html":{"ref":"modules.html","tf":0.4},"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.016129032258064516},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.034482758620689655},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.041666666666666664},"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.045454545454545456},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.022988505747126436},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.041666666666666664},"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.03508771929824561},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.017543859649122806},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.02247191011235955},"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.03636363636363636},"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":0.058823529411764705},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.05},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.046511627906976744},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.05},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.03636363636363636},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.043478260869565216},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.043478260869565216},"classes/ObjectId.html":{"ref":"classes/ObjectId.html","tf":0.10526315789473684},"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.05714285714285714},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.02247191011235955},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.02631578947368421},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.03333333333333333},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.046511627906976744},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.02247191011235955},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.043478260869565216},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.05714285714285714},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.028169014084507043},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.041666666666666664},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.030303030303030304},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.03333333333333333},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.011111111111111112},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.024691358024691357},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.02564102564102564},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.020202020202020204},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.010416666666666666},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372},"coverage.html":{"ref":"coverage.html","tf":0.006993006993006993}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.016129032258064516},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}},"e":{"docs":{},"?":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}},"e":{"docs":{},"v":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.02247191011235955},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.037037037037037035},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.06741573033707865}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.02247191011235955}}}}},"i":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":5.022471910112359},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.016129032258064516},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.04950495049504951},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.08433734939759036},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.034482758620689655},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.05172413793103448},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.08436724565756824},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.041666666666666664},"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.045454545454545456},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.06896551724137931},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.09009009009009009},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.06629834254143646},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.08333333333333333},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.08433734939759036},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.04932735426008968},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.09774436090225563},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.041666666666666664},"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.03636363636363636},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.05752212389380531},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.02247191011235955},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.045454545454545456},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.027777777777777776},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.030303030303030304},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.03125},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0311284046692607}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013201320132013201},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.015151515151515152},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.023346303501945526}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.03017241379310345},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.020833333333333332}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218}},"e":{"docs":{},"r":{"docs":{},"[":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":5.022988505747127},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}}}}}}}},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":5.057142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}},"p":{"docs":{},"(":{"docs":{},"`":{"docs":{},"^":{"docs":{},"$":{"docs":{},"{":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":5.026315789473684},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.043859649122807015},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.0449438202247191},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.05},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.046511627906976744},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.05},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.03636363636363636},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.043478260869565216},"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.02857142857142857},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.039473684210526314},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.03333333333333333},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.046511627906976744},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.056179775280898875},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.021739130434782608},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.02857142857142857},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.04225352112676056},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666}}}}}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.04466501240694789},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.10810810810810811},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.023255813953488372},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.10606060606060606},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.011111111111111112},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.01240694789081886},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}},"i":{"docs":{},"d":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}}},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.01488833746898263},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":5.004504504504505},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.006756756756756757},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":5.033333333333333},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.01126126126126126}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.06976744186046512},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.06976744186046512}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":5.046511627906977},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"5":{"0":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218}}},"docs":{}},"6":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}},"docs":{}}}}}}}}}}}}},"x":{"docs":{},"j":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}},"s":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}},"s":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.1111111111111111}}}}},"e":{"docs":{},"r":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.045454545454545456}},"i":{"docs":{},"d":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.015151515151515152},"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":0.08823529411764706}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}}}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.021739130434782608},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":5.007575757575758},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}}}}}}}},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.011235955056179775},"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":0.029411764705882353},"coverage.html":{"ref":"coverage.html","tf":0.006993006993006993}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.10240963855421686}},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.010040160642570281},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":5.004016064257028},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}}}}}}}},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.006024096385542169},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":5.022471910112359},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.010040160642570281}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}}}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775}}}}}}}}},"b":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.020833333333333332},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":5.043478260869565},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.05829596412556054},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.041666666666666664},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.05555555555555555}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":5.00896860986547},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.03139013452914798},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.022222222222222223}},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.02247191011235955}}}}}}}}}},"v":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894}},"d":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"/":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.06521739130434782}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}},"z":{"docs":{},"e":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.01327433628318584}}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":5.007575757575758},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.010040160642570281},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.01126126126126126},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.022099447513812154},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.010040160642570281},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.012531328320802004},"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.03636363636363636},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"coverage.html":{"ref":"coverage.html","tf":0.006993006993006993}},".":{"docs":{},"i":{"docs":{},"o":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.02247191011235955},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}},"d":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"`":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"`":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":5.011049723756906},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.012531328320802004},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077}}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332},"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332},"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.017543859649122806},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.008771929824561403},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.011235955056179775},"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818},"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":0.029411764705882353},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.025},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.023255813953488372},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.025},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.01818181818181818},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.021739130434782608},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.021739130434782608},"classes/ObjectId.html":{"ref":"classes/ObjectId.html","tf":0.05263157894736842},"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.02857142857142857},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.016666666666666666},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.023255813953488372},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.011235955056179775},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.021739130434782608},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.02857142857142857},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.014084507042253521},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}},"e":{"docs":{},"$":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"[":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.037037037037037035},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":5.051282051282051},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.0707070707070707},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":5.02020202020202},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.007518796992481203}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.041666666666666664},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.08333333333333333}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.07272727272727272},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.017699115044247787},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.02247191011235955}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077}}}}}},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.05454545454545454},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.033707865168539325}}}}},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0462046204620462},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.03413654618473896},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.05172413793103448},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.02586206896551724},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.034739454094292806},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.08333333333333333},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.022988505747126436},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.03153153153153153},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.045454545454545456},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.030120481927710843},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.026905829596412557},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.06015037593984962},"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.10526315789473684},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.07894736842105263},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.0898876404494382},"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":0.11764705882352941},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.1},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.09302325581395349},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.1},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.022123893805309734},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.13043478260869565},"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.08571428571428572},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.02247191011235955},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.11842105263157894},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.05},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.09302325581395349},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.20224719101123595},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.08571428571428572},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.1267605633802817},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.0625},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.016666666666666666},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.16049382716049382},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.14102564102564102},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.1111111111111111},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.06060606060606061},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.041666666666666664},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.054474708171206226}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.030303030303030304},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.02631578947368421},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.033707865168539325}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"classes/ObjectId.html":{"ref":"classes/ObjectId.html","tf":0.05263157894736842}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}}}}}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/ObjectId.html":{"ref":"classes/ObjectId.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.02631578947368421},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.033707865168539325}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}},"m":{"docs":{},"t":{"docs":{},"p":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.1111111111111111}},"e":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0627062706270627},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.06224899598393574},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.05707196029776675},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.05747126436781609},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.06981981981981981},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0718232044198895},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.06224899598393574},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.08071748878923767},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.08521303258145363},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.043859649122807015},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.08333333333333333},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.10606060606060606},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.06666666666666667},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.05303030303030303},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.010416666666666666},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.054474708171206226}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}}}}}}},"a":{"docs":{},"v":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.016574585635359115},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.010040160642570281},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.022988505747126436},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.01126126126126126},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.010040160642570281},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.02242152466367713},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.027777777777777776}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.022099447513812154}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.008771929824561403},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.016666666666666666},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013201320132013201},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010025062656641603},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.06521739130434782},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.039473684210526314},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.0625},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.011363636363636364},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.015625},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.011673151750972763}},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0165016501650165},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.010040160642570281},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.02586206896551724},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.01240694789081886},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.01126126126126126},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.03314917127071823},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.01893939393939394},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.010040160642570281},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":5.005012531328321},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.015151515151515152},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.020833333333333332},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.01556420233463035},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}}}}}}}},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.015037593984962405}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}},"[":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}},"@":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666}}}}}}}}}}}}}}}},"u":{"docs":{},"á":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332}}}}}}}},"n":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.016129032258064516},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}}}}}},"'":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.006024096385542169},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.006024096385542169},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.007518796992481203}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152}}}}}}}},"t":{"docs":{},"f":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":5.041666666666667},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.02631578947368421}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":5.057142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":5.028169014084507},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}},"b":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.013452914798206279},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.016666666666666666}}}}}},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"s":{"docs":{},"/":{"docs":{},"g":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.006024096385542169},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.006024096385542169},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.007518796992481203}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.014056224899598393},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.015765765765765764},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.014056224899598393}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.02631578947368421},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.05},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.13043478260869565}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.019851116625310174},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.015151515151515152},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.05454545454545454},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.06521739130434782}}}}}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.033707865168539325}}},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332},"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332},"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":5.052631578947368},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":5.026315789473684},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":5.033707865168539},"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":5.036363636363636},"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":5.088235294117647},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":5.075},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":5.069767441860465},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":5.075},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":5.008849557522124},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":5.072727272727272},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":5.086956521739131},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":5.065217391304348},"classes/ObjectId.html":{"ref":"classes/ObjectId.html","tf":5.105263157894737},"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":5.085714285714285},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":5.022471910112359},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":5.0394736842105265},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":5.05},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":5.069767441860465},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":5.033707865168539},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":5.065217391304348},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":5.085714285714285},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":5.042253521126761},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":5.0625},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876},"coverage.html":{"ref":"coverage.html","tf":0.08041958041958042}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.034482758620689655},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.05603448275862069},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":5.03030303030303},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.046875},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}},"i":{"docs":{},"d":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.03225806451612903},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.037037037037037035},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.016129032258064516}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"?":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.010416666666666666}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"v":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}},"t":{"docs":{"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.010416666666666666},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}},"(":{"docs":{},"(":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.011111111111111112}}}}}}},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.01293103448275862},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.010416666666666666}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"t":{"docs":{},"x":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.030303030303030304},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.011111111111111112}}}},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.09839357429718876},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.056818181818181816},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.012048192771084338},"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":0.029411764705882353},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}},"i":{"docs":{},"g":{"docs":{"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102}},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102}}},"y":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102}}}}}}}}}}},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.033707865168539325},"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":0.08823529411764706}}},"r":{"docs":{},"m":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.06521739130434782}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.04225352112676056}}}}}}}}}}}}},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.015151515151515152},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.006024096385542169},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":5.017543859649122},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.010040160642570281}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":5.004016064257028},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.022727272727272728},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.006024096385542169},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":5.022471910112359},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}}}}}}}},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.04838709677419355},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.033003300330033},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.010040160642570281},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.06896551724137931},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.02586206896551724},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.01488833746898263},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.01126126126126126},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.03867403314917127},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.015151515151515152},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.010040160642570281},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.02506265664160401},"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.035398230088495575},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.033707865168539325},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.03333333333333333},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.011111111111111112},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.03787878787878788},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.03125},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.038910505836575876}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.022988505747126436},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.02247191011235955}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.03314917127071823}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}},"d":{"docs":{},"e":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.022988505747126436},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102}}}},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.033707865168539325}}}}},"o":{"docs":{},"k":{"docs":{},"i":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}},"r":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.01327433628318584}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.003496503496503}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.009900990099009901},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":5.036363636363636},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.02247191011235955},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.04225352112676056}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.022988505747126436},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.007444168734491315},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.02631578947368421}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.03636363636363636},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.02247191011235955}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.02247191011235955}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}},"t":{"docs":{},"x":{"docs":{"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"k":{"docs":{"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.055555555555555}}}}}}}}},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.007518796992481203}}}}}},"p":{"docs":{},"t":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.05454545454545454},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.030973451327433628},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.033707865168539325},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}},")":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.009925558312655087},"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.045454545454545456},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.007518796992481203},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.02247191011235955},"classes/ObjectId.html":{"ref":"classes/ObjectId.html","tf":5.105263157894737},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.01327433628318584}}}}}}},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.024096385542168676},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.022988505747126436},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.02252252252252252},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.02208835341365462},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.02631578947368421},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.05}},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827}},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827}}}}}}}}}}}}}}}},"docs":{}}}}},"s":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}},"z":{"0":{"docs":{"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332}}},"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.1111111111111111}}}}},"a":{"docs":{"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.009900990099009901},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.01556420233463035}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827},"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.05263157894736842}}}}}}}}}}},"k":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.02654867256637168}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}},")":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}},"p":{"docs":{},"p":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.02247191011235955}},"l":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.024193548387096774},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.030303030303030304}},"e":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":5.016129032258065},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.024193548387096774},"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":5.035087719298246},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876},"coverage.html":{"ref":"coverage.html","tf":0.01048951048951049}}}}}}}}}}}}}}}},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"/":{"docs":{},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"coverage.html":{"ref":"coverage.html","tf":0.006993006993006993}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.017543859649122806},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.021739130434782608},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102},"coverage.html":{"ref":"coverage.html","tf":0.01048951048951049}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.008771929824561403},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.025},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.023255813953488372},"coverage.html":{"ref":"coverage.html","tf":0.006993006993006993}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.025},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.01818181818181818},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.023255813953488372},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556},"coverage.html":{"ref":"coverage.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.021739130434782608},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.02857142857142857},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.014084507042253521},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332},"coverage.html":{"ref":"coverage.html","tf":0.01048951048951049}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.016666666666666666},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.011235955056179775},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":0.029411764705882353},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.021739130434782608},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.011235955056179775},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"/":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"/":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/ObjectId.html":{"ref":"classes/ObjectId.html","tf":0.05263157894736842},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.038461538461538464},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102}}}}}}}},"i":{"docs":{},"d":{"docs":{"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.038461538461538464},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102}}}}},"i":{"docs":{},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.06140350877192982},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.06741573033707865},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.075},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.06976744186046512},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.075},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.05454545454545454},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.06521739130434782},"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.05714285714285714},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.05263157894736842},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.05},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.06976744186046512},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.07865168539325842},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.06521739130434782},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.05714285714285714},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.056338028169014086},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.041666666666666664}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013201320132013201},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.012048192771084338},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.02481389578163772},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.013513513513513514},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.016574585635359115},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.022727272727272728},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.012048192771084338},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.022556390977443608},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.015151515151515152},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.010416666666666666},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.01556420233463035}}}}}},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}}},"t":{"docs":{},"h":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.016129032258064516},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.034482758620689655},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.046511627906976744}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827},"coverage.html":{"ref":"coverage.html","tf":0.006993006993006993}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}}}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}},".":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"coverage.html":{"ref":"coverage.html","tf":0.006993006993006993}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102}}}}}}}}}}}}}},"[":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}},"e":{"docs":{},"]":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.024691358024691357},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.02564102564102564},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.020202020202020204},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.010416666666666666}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.016129032258064516},"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.05263157894736842}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}}}}}},"1":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.010416666666666666}}},"docs":{}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":5.006600660066007},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.017241379310344827},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.015625},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"ç":{"docs":{},"ã":{"docs":{},"o":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.016129032258064516},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0429042904290429},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.008032128514056224},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.01293103448275862},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.01240694789081886},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.009009009009009009},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.055248618784530384},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.015151515151515152},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.008032128514056224},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.02506265664160401},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.04924242424242424},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.015625},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.05058365758754864}}}}}},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.010416666666666666},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}}}}},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}}}}}}}}}}}}},"d":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818}}}}}}}},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.06818181818181818}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.03508771929824561},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.030303030303030304}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"w":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}},"e":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.010416666666666666}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.010416666666666666},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.022988505747126436},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":5.05},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":5.046511627906977},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426}},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.016574585635359115}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":5.0588235294117645},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.02631578947368421},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.033707865168539325}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.01818181818181818},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.021739130434782608},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.06666666666666667},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.03333333333333333},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.046511627906976744}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.034482758620689655},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.007518796992481203},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.03982300884955752},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.011111111111111112}}},"e":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.009925558312655087},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.030303030303030304},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.08771929824561403},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.06741573033707865},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.05454545454545454},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.06521739130434782}},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.025},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.011111111111111112},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.009925558312655087}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":5.05},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.013452914798206279},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.030303030303030304},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.016666666666666666}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}},"e":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.03225806451612903},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.009900990099009901},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.01293103448275862},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.011111111111111112},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.011363636363636364},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.015625},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.011673151750972763}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.019801980198019802},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.012531328320802004},"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.08571428571428572},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.039473684210526314},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.08571428571428572},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.026515151515151516},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.019455252918287938}},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013201320132013201},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332},"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.013452914798206279},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332},"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.017543859649122806},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.008771929824561403},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.011235955056179775},"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818},"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":0.029411764705882353},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.025},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.023255813953488372},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.025},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.01818181818181818},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.021739130434782608},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.021739130434782608},"classes/ObjectId.html":{"ref":"classes/ObjectId.html","tf":0.05263157894736842},"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.02857142857142857},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.016666666666666666},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.023255813953488372},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.011235955056179775},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.021739130434782608},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.02857142857142857},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.014084507042253521},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.030303030303030304},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.03333333333333333},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.016666666666666666},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.024691358024691357},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.02564102564102564},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.020202020202020204},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.015151515151515152},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.010416666666666666},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.01556420233463035}}}}},"i":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.009900990099009901},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.011363636363636364},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.011673151750972763}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},".":{"docs":{},"b":{"docs":{},"r":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"`":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"`":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"`":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"`":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"`":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.04741379310344827},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.030303030303030304},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.03125}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"classes/ObjectId.html":{"ref":"classes/ObjectId.html","tf":0.05263157894736842},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775}}}},"r":{"docs":{},"n":{"docs":{"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.03636363636363636},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":5.008849557522124},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"v":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.06976744186046512}},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.11627906976744186}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077}}}}}}},"/":{"docs":{},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}},"[":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}},"o":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.022727272727272728},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.02631578947368421},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.033707865168539325}}},"u":{"docs":{},"m":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.008032128514056224},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.009009009009009009},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.008032128514056224},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010025062656641603}},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.021739130434782608},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332},"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332},"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.017543859649122806},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.008771929824561403},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.011235955056179775},"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818},"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":0.029411764705882353},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.025},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.023255813953488372},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.025},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.01818181818181818},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.021739130434782608},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.021739130434782608},"classes/ObjectId.html":{"ref":"classes/ObjectId.html","tf":0.05263157894736842},"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.02857142857142857},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.016666666666666666},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.023255813953488372},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.011235955056179775},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.021739130434782608},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.02857142857142857},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.014084507042253521},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.01240694789081886},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.015151515151515152},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}}}},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"i":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.009900990099009901},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.011363636363636364},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.011673151750972763}}}}}}},"n":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.006024096385542169},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}},"s":{"docs":{},"t":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894}}}}}},"s":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.030303030303030304},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}},"i":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.007518796992481203}}}}}}}}}},"l":{"docs":{},"s":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.011235955056179775},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.025},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.046511627906976744},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.025},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.03636363636363636},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.02247191011235955},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666}}}}},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"d":{"docs":{},"o":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.007518796992481203}}}}}},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.01240694789081886}}}}},"i":{"docs":{},"d":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}},"e":{"docs":{},"v":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894}}}}}}}}}}}}}},"c":{"docs":{},"m":{"docs":{"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.023255813953488372}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":5.036363636363636},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":5.043478260869565},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.016129032258064516},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}}}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207}},"(":{"docs":{},"c":{"docs":{},"t":{"docs":{},"x":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.016574585635359115}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.045454545454545456}}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332}}}}}}}}}},"u":{"docs":{},"b":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}}}}}}}},"w":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0165016501650165},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.021551724137931036},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.011363636363636364},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.015625},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.011673151750972763}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.019801980198019802},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.015151515151515152},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.01556420233463035}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":5.008620689655173},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},".":{"docs":{},"p":{"8":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}}},"docs":{}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.030303030303030304}}}}}}}}}},"o":{"docs":{},"f":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004}},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258}},".":{"docs":{},"t":{"docs":{"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.017543859649122806},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"r":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}},"y":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":5.043478260869565},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}},"o":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.02242152466367713},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.011111111111111112}},"(":{"docs":{},"'":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.019851116625310174},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.01893939393939394},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.05454545454545454},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.06521739130434782}},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894}}}}}}}},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.008032128514056224},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.009009009009009009},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.008032128514056224},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.010025062656641603},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152}},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.030303030303030304}}}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.024193548387096774},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0231023102310231},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543},"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.007518796992481203},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.026515151515151516},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.010416666666666666},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.027237354085603113}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"t":{"docs":{},"x":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.011049723756906077},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"t":{"docs":{},"x":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"t":{"docs":{},"x":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}}},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"y":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}}}}}}},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"(":{"docs":{},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.008968609865470852},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}},"b":{"docs":{},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}},"y":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.020080321285140562},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.019851116625310174},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.02027027027027027},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.018072289156626505}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}},"t":{"docs":{},"o":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"`":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"`":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.007518796992481203}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"`":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"`":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"`":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"`":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.012048192771084338}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.01327433628318584}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"t":{"docs":{},"x":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.01240694789081886}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.007444168734491315}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.008032128514056224}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.009009009009009009}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"`":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"`":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.010040160642570281}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},"o":{"docs":{},"n":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}}}}}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}},"o":{"docs":{},"n":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}}}}}}}}}}}}},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"`":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"`":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"`":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"`":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.01126126126126126}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"t":{"docs":{},"x":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.021551724137931036},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.026041666666666668}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.011494252873563218}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0165016501650165},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.04310344827586207},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.01893939393939394},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":5.052083333333333},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.019455252918287938},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":5.007782101167315},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}}}}},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.009925558312655087}}}}},"i":{"docs":{},"d":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}}}}},"(":{"docs":{},"`":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.016666666666666666}}}}}}}}}},"r":{"docs":{},"i":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.007575757575757576},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.010416666666666666},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.007782101167315175}}},"u":{"docs":{},"e":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.0055248618784530384},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.043859649122807015},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.033707865168539325},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.025},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.025},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.043478260869565216},"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.02857142857142857},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.039473684210526314},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.03333333333333333},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.046511627906976744},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.033707865168539325},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.021739130434782608},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.02857142857142857},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.04225352112676056},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.008849557522123894},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.01818181818181818},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.021739130434782608}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.045454545454545456}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.06666666666666667}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"injectables/AppleAuthService.html":{"ref":"injectables/AppleAuthService.html","tf":0.008064516129032258},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.04035874439461883},"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.05263157894736842},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.05263157894736842},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.056179775280898875},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.05454545454545454},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.06521739130434782},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.043478260869565216},"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.02857142857142857},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.039473684210526314},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.03333333333333333},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.06741573033707865},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.043478260869565216},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.02857142857142857},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.04225352112676056},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.045454545454545456},"interfaces/MailerSchema.html":{"ref":"interfaces/MailerSchema.html","tf":0.03333333333333333},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.05},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.037037037037037035},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.02564102564102564},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.030303030303030304},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.015151515151515152},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.010416666666666666},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.011673151750972763},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.02631578947368421},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.05}}}},"p":{"docs":{},"o":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}}}},"v":{"2":{"docs":{"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827}}},"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033003300330033004},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.008620689655172414},"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.017543859649122806},"classes/ConfDto.html":{"ref":"classes/ConfDto.html","tf":0.008771929824561403},"classes/ConfSpeakerDto.html":{"ref":"classes/ConfSpeakerDto.html","tf":0.011235955056179775},"classes/DeleteConfSpeakerDto.html":{"ref":"classes/DeleteConfSpeakerDto.html","tf":0.029411764705882353},"classes/DeleteDirectMessageDto.html":{"ref":"classes/DeleteDirectMessageDto.html","tf":0.025},"classes/DeleteRoomMessageDto.html":{"ref":"classes/DeleteRoomMessageDto.html","tf":0.023255813953488372},"classes/DirectMessageDto.html":{"ref":"classes/DirectMessageDto.html","tf":0.025},"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.01818181818181818},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.021739130434782608},"classes/LoginDto.html":{"ref":"classes/LoginDto.html","tf":0.021739130434782608},"classes/RecoverPasswordDto.html":{"ref":"classes/RecoverPasswordDto.html","tf":0.02857142857142857},"classes/RegisterDto.html":{"ref":"classes/RegisterDto.html","tf":0.013157894736842105},"classes/RoomDto.html":{"ref":"classes/RoomDto.html","tf":0.016666666666666666},"classes/RoomMessageDto.html":{"ref":"classes/RoomMessageDto.html","tf":0.023255813953488372},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.011235955056179775},"classes/SubscribeEventDto.html":{"ref":"classes/SubscribeEventDto.html","tf":0.021739130434782608},"classes/UpdateEmailDto.html":{"ref":"classes/UpdateEmailDto.html","tf":0.02857142857142857},"classes/UpdatePasswordDto.html":{"ref":"classes/UpdatePasswordDto.html","tf":0.014084507042253521},"classes/UpdateUsernameDto.html":{"ref":"classes/UpdateUsernameDto.html","tf":0.020833333333333332},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006600660066006601},"interfaces/SocialUser.html":{"ref":"interfaces/SocialUser.html","tf":0.003787878787878788},"interfaces/TokenResponse.html":{"ref":"interfaces/TokenResponse.html","tf":0.0038910505836575876}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.002008032128514056}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.004016064257028112}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.0024813895781637717}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0022522522522522522}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0045045045045045045}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.004016064257028112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"y":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.005012531328320802}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{"classes/FetchMessagesDto.html":{"ref":"classes/FetchMessagesDto.html","tf":0.01818181818181818},"classes/FetchSpeakersDto.html":{"ref":"classes/FetchSpeakersDto.html","tf":0.021739130434782608}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.011627906976744186}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013201320132013201},"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.04417670682730924},"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827},"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.017241379310344827},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.03970223325062035},"injectables/MobileNotificationService.html":{"ref":"injectables/MobileNotificationService.html","tf":0.020833333333333332},"injectables/ParseObjectIdPipe.html":{"ref":"injectables/ParseObjectIdPipe.html","tf":0.022727272727272728},"injectables/RecoverService.html":{"ref":"injectables/RecoverService.html","tf":0.034482758620689655},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.0472972972972973},"injectables/SocketConnectionService.html":{"ref":"injectables/SocketConnectionService.html","tf":0.03314917127071823},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.03787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.04417670682730924},"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.026905829596412557},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.047619047619047616},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332},"classes/CustomSocketIoAdapter.html":{"ref":"classes/CustomSocketIoAdapter.html","tf":0.01818181818181818},"classes/ExternalSocketIoAdapter.html":{"ref":"classes/ExternalSocketIoAdapter.html","tf":0.004424778761061947},"classes/RedisIoAdapter.html":{"ref":"classes/RedisIoAdapter.html","tf":0.011235955056179775}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/GoogleAuthService.html":{"ref":"injectables/GoogleAuthService.html","tf":0.017241379310344827}}}}}}}},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ConfService.html":{"ref":"injectables/ConfService.html","tf":0.006024096385542169},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543},"injectables/RoomService.html":{"ref":"injectables/RoomService.html","tf":0.006756756756756757},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.003787878787878788},"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.006024096385542169}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.004962779156327543},"injectables/SpeakerService.html":{"ref":"injectables/SpeakerService.html","tf":0.007575757575757576},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.002506265664160401}}}}}}}}}}}}}},"w":{"docs":{},"s":{"docs":{"injectables/JwtAuthGuard.html":{"ref":"injectables/JwtAuthGuard.html","tf":0.004310344827586207},"interfaces/Client.html":{"ref":"interfaces/Client.html","tf":0.015151515151515152},"interfaces/Token.html":{"ref":"interfaces/Token.html","tf":0.005208333333333333}}},"e":{"docs":{},"b":{"docs":{"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332},"classes/AppleLoginDto.html":{"ref":"classes/AppleLoginDto.html","tf":0.03508771929824561},"interfaces/Platform.html":{"ref":"interfaces/Platform.html","tf":0.012345679012345678},"interfaces/Secret.html":{"ref":"interfaces/Secret.html","tf":0.01282051282051282},"interfaces/SecretsSchema.html":{"ref":"interfaces/SecretsSchema.html","tf":0.030303030303030304}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.033707865168539325}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.004484304932735426},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.016666666666666666}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SubscriptionService.html":{"ref":"injectables/SubscriptionService.html","tf":0.017937219730941704},"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":5.041666666666667},"interfaces/NotificationPayload.html":{"ref":"interfaces/NotificationPayload.html","tf":0.016666666666666666},"coverage.html":{"ref":"coverage.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/WebNotificationService.html":{"ref":"injectables/WebNotificationService.html","tf":0.020833333333333332}}}}}}}}}}}}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"b":{"docs":{"injectables/SponsorService.html":{"ref":"injectables/SponsorService.html","tf":0.002008032128514056},"classes/SponsorDto.html":{"ref":"classes/SponsorDto.html","tf":0.033707865168539325}}}}}}}}},"length":3118},"corpusTokens":["0","0/0","0/1","0/10","0/11","0/17","0/2","0/21","0/24","0/3","0/4","0/5","0/6","0/7","1","1000","16","1e6","1mb","2","2,20","20","2000","23","30","6","60","8","9","9_","_filterqueri","_id","a.createdat.gettim","a.start.gettim","abstractwsadapt","access","access_token","accesstoken","ack","ack(respons","ack)).pip","adapt","adapter.t","address","admin","allow","allowani","allowedfield","allowedfields.includes(field","alreadi","android","api/firebas","apiproperti","app","appid","appl","appleauthservic","appleid","applelogindto","applesignin","applesignin.getauthorizationtoken","applesignin.getclientsecret","applesignin.verifyidtoken(response.id_token","apps/api/src/core/adapter/custom","apps/api/src/core/adapter/extern","apps/api/src/core/adapter/redi","apps/api/src/core/mail/config/mailer.config.t","apps/api/src/features/auth/config/auth.config.t","apps/api/src/features/auth/dto/appl","apps/api/src/features/auth/dto/login.dto.t","apps/api/src/features/auth/dto/register.dto.t","apps/api/src/features/auth/guard/jwt","apps/api/src/features/auth/service/appl","apps/api/src/features/auth/service/auth.service.t","apps/api/src/features/auth/service/googl","apps/api/src/features/conf/dto/conf.dto.t","apps/api/src/features/conf/service/conf.service.t","apps/api/src/features/messages/dto/delet","apps/api/src/features/messages/dto/direct","apps/api/src/features/messages/dto/fetch","apps/api/src/features/messages/dto/room","apps/api/src/features/messages/service/message.service.t","apps/api/src/features/notification/service/mobil","apps/api/src/features/notification/service/web","apps/api/src/features/room/dto/room.dto.t","apps/api/src/features/room/service/room.service.t","apps/api/src/features/speakers/dto/conf","apps/api/src/features/speakers/dto/delet","apps/api/src/features/speakers/dto/fetch","apps/api/src/features/speakers/service/speaker.service.t","apps/api/src/features/sponsor/dto/sponsor.dto.t","apps/api/src/features/sponsor/service/sponsor.service.t","apps/api/src/features/user/dto/recov","apps/api/src/features/user/dto/subscrib","apps/api/src/features/user/dto/upd","apps/api/src/features/user/service/recover.service.t","apps/api/src/features/user/service/socket","apps/api/src/features/user/service/subscription.service.t","apps/api/src/features/user/service/user.service.t","apps/api/src/shared/mongoose/object","apps/api/src/shared/pipe/pars","apps/api/src/shared/utils/get","appsecret","argumentmetadata","array.isarray(payload","async","audienc","auth","auth.appsecret","auth.config.json","auth.guard","auth.guard.t","auth.keyidentifi","auth.servic","auth.service.t","auth.teamid","auth[typ","auth[type].redirecturi","authconfig","authconfig.appl","authconfig.googl","authconfig.initprettifi","authconfigdefault","author","authorization[0].tolowercas","authorization[1","authorizationcod","authservic","autorização","await","b","b.createdat.gettim","b.start.gettim","badrequestexcept","badrequestexception('email","badrequestexception(`${metadata.data","base.replace(/\\s/g","bearer","befor","bindmessagehandl","bindmessagehandlers(cli","bio","blockedfield","bodi","boolean","break","browser","callback","canactiv","canactivate(ctx","case","catch","catch((","class","click_act","client","client.emit(response.ev","client.headers.authorization?.split","client.setcredenti","client.t","client.us","clientid","clientsecret","code","color","conf","conf._id","conf.members.push(user._id","conf.members.some((memb","conf.sav","conf/schema/conf.schema","conf/service/conf.servic","conf:delet","conf:delete_speak","conf:join","conf:leav","conf:upd","confdto","confgateway","confid","config","config.default","config/auth.config","config/dist","configfactori","configfactory.getconfig","confirmpassword","confirmpres","confmodel","confschema","confservic","confspeakerdto","connect","connection.populate('user').execpopul","connection.schema","connection.servic","connection.service.t","connection.us","connections.length","const","constructor","constructor(app","constructor(authservic","constructor(confmodel","constructor(host","constructor(messagemodel","constructor(recoverymodel","constructor(roommodel","constructor(socketconnectionmodel","constructor(speakermodel","constructor(sponsormodel","constructor(usermodel","constructor(userservic","constructor(webnotificationservic","continu","cooki","cor","coverag","creat","create(bodi","create(conf","create(port","create(room","create(socket","create(sponsor","create(us","createadapt","createconfspeak","createconfspeaker(start","createdat","createdirectmessag","createdirectmessage(from","createioserv","createioserver(port","createroommessag","createroommessage(from","credenti","ctx","ctx.gethandl","ctx.gettyp","ctx.switchtohttp().getrequest","ctx.switchtows().getclient().disconnect(tru","ctx.switchtows().getclient().handshak","currentpassword","currentus","custom","customnam","customsocketioadapt","data","date","date.now","de","decod","decodificar","default","defaultvalu","delet","delete(conf","delete(room","delete(socket","delete(sponsor","delete(us","deleteal","deleteall(us","deleteallconnect","deleteconfspeak","deleteconfspeaker(conf","deleteconfspeakerdto","deletedirectmessag","deletedirectmessage(messag","deletedirectmessagedto","deletedirectmessages(from","deleteroommessag","deleteroommessage(room","deleteroommessagedto","deleteroommessages(room","descript","dictionari","direct","direct:delete_messag","directmessagedto","disconnect","disconnect_ev","disconnect_event).pip","document","dto/appl","dto/conf.dto","dto/room.dto","dto/sponsor.dto","e","email","email.dto.t","emit(ev","encontrada","encontrado","end","enum","env","environ","environments.accesstokenexpir","environments.port","environments.recovercodeexpir","environments/environ","environments[typ","error","event","event.dto.t","except","except.broadcast.to(`conf_${conf._id}`).emit(ev","except.broadcast.to(`room_${room._id}`).emit(ev","except.broadcast.to(`sponsor_${sponsor._id}`).emit(ev","except.broadcast.to(`user_${user._id}`).emit(ev","execpopul","executioncontext","exist","expir","export","extend","extern","externalsocketioadapt","facebook","facebookid","fals","fcm","fcm.sendtodevice(token","features/room/schema/room.schema","features/user/schema/user.schema","fetchmessagesdto","fetchspeakersdto","field","fieldid","file","filter","filter((respons","filter.createdat","filter.start","filterqueri","filterus","filteruser(us","find","find(filt","findbyid(confid","findbyid(id","findbyid(roomid","findbyid(sponsorid","findon","findone(this.getdirectmessagefilter(from","findoneandupd","firebas","first","flutter_notification_click","fornecido","forwardref","found","from._id","from.id","fromev","fromevent(cli","fs","gateway/conf.gateway","gateway/room.gateway","gateway/sponsor.gateway","gateway/user.gateway","gener","generateusernam","generateusername(bas","get(cod","get(us","getaccesstokenopt","getaccesstokenoptions(us","getaddress","getaddress(socket","getaddressfrom","getal","getall(us","getbyid","getbyid(id","getbysocket","getbysocket(socket","getclient","getclient(ctx","getconf","getconf(confid","getconfbyidandown","getconfbyidandowner(confid","getconfsbymemb","getconfsbymember(us","getconfsbyown","getconfsbyowner(us","getconfsbysponsor","getconfsbysponsor(sponsorid","getconfspeak","getconfspeakers(conf","getdirectmessag","getdirectmessagefilt","getdirectmessagefilter(from","getdirectmessages(from","getfirstdirectmessag","getfirstdirectmessage(from","getfirstroommessag","getfirstroommessage(room","getmessag","getmessage(id","getmessages(filt","getnextconfspeak","getnextconfspeakers(conf","getonlineus","getpopulatedmessag","getpopulatedmessage(id","getpopulatedspeak","getpopulatedspeaker(id","getpublicconf","getpublicroom","getpublicsponsor","getrefreshtokenopt","getrefreshtokenoptions(us","getrequest","getrequest(ctx","getroom","getroom(roomid","getroombyidandown","getroombyidandowner(roomid","getroommessag","getroommessages(room","getroomsbymemb","getroomsbymember(us","getroomsbyown","getroomsbyowner(us","getsocialus","getsocialuserhandl","getsocket","getsocketcli","getsocketclient(socket).room","getsockets(conf","getsockets(room","getsockets(sponsor","getsocketus","getspeak","getspeaker(id","getspeakerfilt","getspeakerfilter(start","getspeakers(filt","getsponsor","getsponsor(sponsorid","getsponsorbyidandown","getsponsorbyidandowner(sponsorid","getsponsorsbyconf","getsponsorsbyconf(conf","getsponsorsbymemb","getsponsorsbymember(us","getsponsorsbyown","getsponsorsbyowner(us","gettoken","gettoken(ctx","gettokenopt","gettokenoptions(typ","geturl","getus","getuser(accesstoken","getuser(undefin","getuser(usernam","getuserbi","getuserby(filt","getuserbyemail","getuserbyemail(mail","getuserbygoogleid","getuserbygoogleid(id","getuserbyid","getuserbyid(id","getuserbynam","getuserbyname(nam","googl","google.auth.oauth2(auth.appid","google.oauth2","googleapi","googleauthservic","googleid","guard/jwt","handledeleteconf","handledeleteconf(conf","handledeleteroom","handledeleteroom(room","handledeletesponsor","handledeletesponsor(sponsor","handlejoinconf","handlejoinconf(us","handlejoinroom","handlejoinroom(us","handlejoinsponsor","handlejoinsponsor(us","handleleaveconf","handleleaveconf(us","handleleaveroom","handleleaveroom(us","handleleavesponsor","handleleavesponsor(us","handler","handlerequest","handlerequest(ctx","handlers.foreach","handleupdateconf","handleupdateconf(conf","handleupdateroom","handleupdateroom(room","handleupdatesponsor","handleupdatesponsor(sponsor","header","host","hostnam","http","httpexcept","httponli","id","id.pipe.t","id.t","identifi","ignoreexpir","implement","import","incapaz","index","inestapplicationcontext","info","inject","inject(forwardref","injectmodel","injectmodel(conf.nam","injectmodel(message.nam","injectmodel(recover.nam","injectmodel(room.nam","injectmodel(socketconnection.nam","injectmodel(speaker.nam","injectmodel(sponsor.nam","injectmodel(subscription.nam","injectmodel(user.nam","instanceof","interfac","internalus","internaluser.email","internaluser.sav","invalid","inválida","inválido","io","io.adapt","io.adapter.t","ios'].clientid","isack","isboolean","isdat","isdatestr","isemail","isfunct","isfunction(ack","isfunction(lastel","isfunction(server.of","ismongoid","isnil","isnil(respons","isnotempti","isnumb","isopt","ispubl","isstr","join","join(confid","join(paths.config","join(roomid","join(sponsorid","json","json.email","json.stringifi","json.sub","jwtauthguard","jwtservic","jwtsignopt","key.p8","keyidentifi","keyof","lastel","leav","leave(us","limit","limit(limit","logger","logger('subscriptionservic","login","login(us","login.dto","login.dto.t","logindto","loginwithrefreshtoken","loginwithrefreshtoken(refreshtoken","loginwiththirdparti","loginwiththirdparty(fieldid","logo","lte","mailer.config.json","mailerconfig","mailerconfig.initprettifi","maileropt","maileroptions['default","maileroptions['transport","mailerschema","map","map((respons","mappayload","mappayload(payload","match","matches(/[a","maxhttpbuffers","maxlength","maxlength(2000","maxlength(60","member","member.id","mergemap","mergemap((payload","messag","message).pip","message._id","message.dto.t","message.from","message.to","message.to._id","messageid","messagemappingproperti","messagemodel","messages.dto.t","messages.sort","messages/service/message.servic","messageschema","messageservic","messaging.messagingpayload","messaging.notificationmessagepayload","messaging.webpushconfig","messagingpayload","metadata","method","minlength","minlength(6","miscellan","mobiledata","mobilenotificationservic","model","modul","modules/mail","mongodb","mongoos","name","namespac","nestj","nestjs/common","nestjs/common/utils/shared.util","nestjs/cor","nestjs/jwt","nestjs/mongoos","nestjs/swagg","nestjs/websocket","nestjs/websockets/const","new","newinput","next","notfoundexcept","notfoundexception('conf","notfoundexception('messagem","notfoundexception('palestrant","notfoundexception('room","notfoundexception('sponsor","notfoundexception('us","notif","notification.servic","notification.service.t","notification/service/mobil","notification/service/web","notificationconfig","notificationmessagepayload","notificationpayload","notificationtyp","null","number","nx","não","o","oauth2","oauth2.userinfo.get","object","object.assign(conf","object.assign(room","object.assign(sponsor","object.assign(us","objectid","objectid.createfromhexstring(valu","objectid.isvalid(valu","observ","onlin","opt","opt).of(namespac","option","options.expiresin","origin","os","out","overview","owner","owner._id","packageid","parseobjectidpip","partial","pass","password","password.dto.t","path","payload","payload.data","payload.length","payload.mobiledata","payload.notif","payload.slice(0","payload.webdata","payload[0","payload[payload.length","per","pipetransform","platform","populate('conf","populate('from","populate('memb","populate('own","populate('room","populate('sponsor","populate('start","populate('to","populate('us","port","post","privat","privatekey","project","promis","promise.al","properti","pubclient","pubclient.dupl","public","push","pushsubscript","randomstr","randomstring(50","randomstring(6","readfilesync","readfilesync(join(paths.secret","readm","readonli","recov","recover['cod","recoverpassworddto","recoverschema","recoverservic","recoverymodel","redi","redirecturi","redisadapt","rediscli","redisioadapt","reflector","refresh","refresh_token","refreshtoken","regex","regexp(`^${mail","regexp(`^${nam","registerdto","remov","remove(conf.memb","remove(room.memb","remove(sponsor.memb","repli","request","requir","reset","respons","response.data","response.ev","response?.id_token","result","retriev","return","room","room._id","room.id","room.members.push(user._id","room.members.some((memb","room.sav","room/schema/room.schema","room/service/room.servic","room:delet","room:delete_messag","room:join","room:leav","room:upd","roomdto","roomgateway","roomid","roommessagedto","roommodel","roomschema","roomservic","rxj","rxjs/oper","s","schema","schema.types.objectid","schema/conf.schema","schema/message.schema","schema/recover.schema","schema/room.schema","schema/socket","schema/speaker.schema","schema/sponsor.schema","schema/subscription.schema","schema/user.schema","secret","secretsschema","secur","sendmessag","sendmessage(conf","sendmessage(room","sendmessage(sponsor","sendmessage(us","sendmessageexcept","sendmessageexcept(except","sendnotif","sendnotification(json.parse(subscription.subscript","sendnotification(subscript","sendnotification(subscription.subscript","sendnotification(token","sendnotification(us","server","server(port","server(this.httpserv","server.adapter(this.redisadapt","server.of(namespac","server.use((socket","serverhostnam","serveropt","serverport","service/auth.servic","sessiontoken","share","shared/constants/path","shared/mongoose/object","shared/utils/get","shared/utils/random","shared/utils/remov","sharedemail","signin","size","slug","smtp.example.com","socialus","socket","socket.handshake.address","socket.id","socket.io","socket.join(`conf_${conf._id","socket.join(`room_${room._id","socket.join(`sponsor_${sponsor._id","socket.join(`user_${user._id","socket.leave(`conf_${conf._id","socket.leave(`room_${room._id","socket.leave(`sponsor_${sponsor._id","socket.leave(`user_${user._id","socketconnect","socketconnectionmodel","socketconnectionschema","socketconnectionservic","socketid","sort","sortmessag","sortmessages(messag","sortspeak","sortspeakers(speak","sourc","source$.subscribe(([respons","speaker","speaker.dto.t","speakerid","speakermodel","speakers.dto.t","speakers.sort((a","speakerschema","speakerservic","speakout","sponsor","sponsor._id","sponsor.members.push(user._id","sponsor.members.some((memb","sponsor.sav","sponsor/service/sponsor.servic","sponsor:delet","sponsor:join","sponsor:leav","sponsor:upd","sponsordto","sponsorgateway","sponsorid","sponsormodel","sponsorschema","sponsorservic","start","statement","string","sub","subclient","subscribeeventdto","subscribesocket","subscribesocket(socket","subscript","subscription.typ","subscriptionmodel","subscriptionschema","subscriptionservic","subscriptiontyp","subscriptiontype.mobil","subscriptiontype.web","super(app","super.createioserver(port","support","svg","switch","t","takeuntil","takeuntil(disconnect","teamid","this.authservice.getaccesstokenoptions(us","this.blockedfield","this.blockedfields.join","this.confgateway.server.in(`conf_${conf._id}`).allsocket","this.confgateway.server.to(`conf_${conf._id}`).emit(ev","this.confmodel","this.confmodel.cr","this.confmodel.find","this.confmodel.findoneanddelet","this.confservice.sendmessage(conf","this.confservice.unpopulatedfield","this.cor","this.createioserver(port","this.delete(us","this.generateusername(nam","this.getaccesstokenoptions(us","this.getall(us","this.getbysocket(socket","this.getconf(confid","this.getconfbyidandowner(confid","this.getdirectmessagefilter(from","this.getmessage(id","this.getmessages(filt","this.getpopulatedmessage(id","this.getpopulatedspeaker(id","this.getrefreshtokenoptions(us","this.getrequest(ctx","this.getroom(roomid","this.getroombyidandowner(roomid","this.getspeaker(id","this.getspeakers(filt","this.getsponsor(sponsorid","this.getsponsorbyidandowner(sponsorid","this.gettoken(ctx","this.gettokenoptions('access","this.gettokenoptions('refresh","this.getuserbyemail(email","this.getuserbyemail(usernam","this.getuserbyid(id","this.getuserbyid(user._id","this.getuserbyname(nam","this.getuserbyname(usernam","this.handledeleteconf(conf","this.handledeleteroom(room","this.handledeletesponsor(sponsor","this.handlejoinconf(us","this.handlejoinroom(us","this.handlejoinsponsor(us","this.handleleaveconf(us","this.handleleaveroom(us","this.handleleavesponsor(us","this.handlerequest(ctx","this.handleupdateconf(conf","this.handleupdateroom(room","this.handleupdatesponsor(sponsor","this.httpserv","this.jwtservice.decode(refreshtoken","this.jwtservice.decode(token","this.jwtservice.signasync","this.jwtservice.verifyasync","this.logger.debug(`${subscription.typ","this.login(internalus","this.login(us","this.mappayload(payload","this.messagemodel","this.messagemodel.cr","this.messagemodel.deletemani","this.messagemodel.findoneanddelet","this.messageservice.deleteroommessages(conf","this.messageservice.deleteroommessages(room","this.mobilenotificationservic","this.recoverymodel.cr","this.recoverymodel.deletemani","this.recoverymodel.findon","this.redisadapt","this.reflector","this.reflector.get('allow","this.roomgateway.server.in(`room_${room._id}`).allsocket","this.roomgateway.server.to(`room_${room._id}`).emit(ev","this.roommodel","this.roommodel.cr","this.roommodel.find","this.roommodel.findoneanddelet","this.roomservice.sendmessage(room","this.sendmessag","this.sendmessage(conf","this.sendmessage(room","this.sendmessage(sponsor","this.socketconnectionmodel","this.socketconnectionmodel.cr","this.socketconnectionmodel.deletemani","this.socketconnectionmodel.find","this.socketconnectionmodel.findbyid(id).populate('us","this.socketconnectionmodel.findbyidanddelete(connection._id","this.socketconnectionservice.create(socket","this.socketconnectionservice.delete(socket","this.sortmessag","this.sortspeak","this.speakermodel.cr","this.speakermodel.find","this.speakermodel.find(filter).limit(limit).sort","this.speakermodel.findbyid(id","this.speakermodel.findbyid(id).populate('conf","this.speakermodel.findoneanddelet","this.sponsorgateway.serv","this.sponsorgateway.server.in(`sponsor_${sponsor._id}`).allsocket","this.sponsormodel","this.sponsormodel.cr","this.sponsormodel.find","this.sponsormodel.findon","this.sponsormodel.findoneanddelet","this.sponsorservice.unpopulatedfield","this.subscriptionmodel.cr","this.subscriptionmodel.deletemani","this.subscriptionmodel.find","this.subscriptionmodel.findon","this.subscriptionmodel.findoneanddelet","this.throwexception(ctx","this.usergateway.server.to(`user_${user._id}`).emit(ev","this.usermodel.create(bodi","this.usermodel.find","this.usermodel.findbyid(id","this.usermodel.findbyidandupdate(user._id","this.usermodel.findon","this.usermodel.findone(filt","this.userservice.cr","this.userservice.filteruser(us","this.userservice.generateusernam","this.userservice.getonlineus","this.userservice.getuser(usernam","this.userservice.getuserbi","this.userservice.getuserbyemail(email","this.userservice.sendmessag","this.userservice.sendmessage(from","this.userservice.sendmessage(to","this.userservice.unpopulatedfield","this.userservice.validateuserbyid(decoded.sub","this.userservice.validateuserbyid(sub","this.validate(decod","this.validateconf(confid","this.validateroom(roomid","this.validatesponsor(sponsorid","this.webnotificationservic","throw","throwexcept","throwexception(ctx","tipo","titl","to(`sponsor_${sponsor._id","to._id","to.id","token","tokenexpir","tokenrespons","tokensecret","topsecret","transform","transform(callback(data","transform(valu","transport","tri","true","type","unauthorizedexcept","unauthorizedexception('incorrect","unauthorizedexception('invalid","unauthorizedexception('us","unauthorizedexception(e.messag","unauthorizedexception(messag","undefin","unpopulatedfield","unsubscribesocket","unsubscribesocket(socket","updat","update(conf","update(room","update(sponsor","updatedat","updateemaildto","updatepassworddto","updatequeri","updateus","updateuser(us","updateusernamedto","updateuserobject","updateuserobject(us","us","user","user._id","user.generatesessiontoken","user.id","user.onlin","user.sav","user.servic","user.sessiontoken","user.toobject","user.usernam","user.validatepassword(password","user/schema/user.schema","user/service/user.servic","user@example.com","usergateway","usermodel","usernam","username.dto.t","userobject","userobject[field","userschema","userservic","usuário","utf","v2","valid","validate(undefin","validate(usernam","validateconf","validateconf(confid","validateconfbyidandown","validateconfbyidandowner(confid","validatemessag","validatemessage(id","validatepopulatedmessag","validatepopulatedmessage(id","validatepopulatedspeak","validatepopulatedspeaker(id","validateroom","validateroom(roomid","validateroombyidandown","validateroombyidandowner(roomid","validatespeak","validatespeaker(id","validatesponsor","validatesponsor(sponsorid","validatesponsorbyidandown","validatesponsorbyidandowner(sponsorid","validateuserbyemail","validateuserbyemail(email","validateuserbyid","validateuserbyid(id","validateuserbynam","validateuserbyname(usernam","valu","variabl","version","virtual","void","web","webdata","webnotificationservic","webpushconfig","websit","ws","youtub","z0","za","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \nSpeakOut\n\n\nThis project was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        16 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        23 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        9 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppleAuthService.html":{"url":"injectables/AppleAuthService.html","title":"injectable - AppleAuthService","body":"\n                   \n\n\n\n\n\n  Injectables\n  AppleAuthService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/auth/service/apple-auth.service.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getUser(undefined: AppleLoginDto)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {\n  HttpException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AppleLoginDto } from '../dto/apple-login.dto';\nimport { join } from 'path';\nimport appleSignin from 'apple-signin-auth';\nimport { authConfig } from '../config/auth.config';\nimport { SocialUser } from './auth.service';\nimport { readFileSync } from 'fs';\nimport { PATHS } from '../../../shared/constants/paths';\n\nconst auth = authConfig.apple;\n\n// const privateKey = readFileSync(join(PATHS.secrets, 'apple-key.p8'), 'utf-8');\n\n@Injectable()\nexport class AppleAuthService {\n  async getUser({\n    name,\n    authorizationCode,\n    type,\n  }: AppleLoginDto): Promise {\n    try {\n      const clientID = auth[type || 'ios'].clientId;\n\n      const clientSecret = appleSignin.getClientSecret({\n        // privateKey,\n        clientID,\n        teamID: auth.teamId,\n        keyIdentifier: auth.keyIdentifier,\n      });\n\n      const response = await appleSignin.getAuthorizationToken(\n        authorizationCode,\n        {\n          clientSecret,\n          clientID,\n          redirectUri: auth[type].redirectUri,\n        }\n      );\n\n      if (!response?.id_token) {\n        throw new UnauthorizedException(\n          `Access token cannot be retrieved from Apple: ${JSON.stringify(\n            response\n          )}`\n        );\n      }\n\n      const json = await appleSignin.verifyIdToken(response.id_token, {\n        audience: clientID,\n        ignoreExpiration: true,\n      });\n\n      return {\n        name,\n        id: json.sub,\n        email: json.email,\n      };\n    } catch (e) {\n      if (e instanceof HttpException) {\n        throw e;\n      }\n\n      throw new UnauthorizedException(e.message || e);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/auth/service/auth.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(userService: UserService, jwtService: JwtService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     validate\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validate(username: string, password: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     login\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    login(user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     loginWithThirdParty\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    loginWithThirdParty(fieldId: \"username\" | \"email\" | \"sessionToken\" | \"online\" | \"password\" | \"facebookId\" | \"googleId\" | \"appl..., getSocialUser: GetSocialUserHandler, customName: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     loginWithRefreshToken\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    loginWithRefreshToken(refreshToken: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getRefreshTokenOptions\n                                \n                            \n            \n                            \n                                \n            getRefreshTokenOptions(user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     JwtSignOptions\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getAccessTokenOptions\n                                \n                            \n            \n                            \n                                \n            getAccessTokenOptions(user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     JwtSignOptions\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private getTokenOptions\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTokenOptions(type: \"refresh\" | \"access\", user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {\n  BadRequestException,\n  forwardRef,\n  HttpException,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService, JwtSignOptions } from '@nestjs/jwt';\nimport { environments } from '../../../environments/environments';\nimport { User } from '../../user/schema/user.schema';\nimport { UserService } from '../../user/service/user.service';\nimport { Token } from '../guard/jwt-auth.guard';\n\nexport interface TokenResponse {\n  access_token: string;\n  refresh_token: string;\n}\n\nexport interface SocialUser {\n  id: number | string;\n  name: string;\n  email: string;\n}\n\nexport type GetSocialUserHandler = () => Promise>;\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(forwardRef(() => UserService)) private userService: UserService,\n    private jwtService: JwtService\n  ) {}\n\n  async validate(username: string, password: string) {\n    const user = await this.userService.getUser(username);\n\n    if (!user) {\n      throw new UnauthorizedException('Usuário não existe');\n    }\n\n    if (!(await user.validatePassword(password))) {\n      throw new UnauthorizedException('Incorrect password');\n    }\n\n    return user;\n  }\n\n  async login(user: User): Promise {\n    const payload: Token = {\n      sub: user.id,\n      username: user.username,\n    };\n\n    let refresh_token: string;\n\n    if (environments.accessTokenExpiration) {\n      refresh_token = await this.jwtService.signAsync(\n        payload,\n        this.getRefreshTokenOptions(user)\n      );\n    }\n\n    return {\n      access_token: await this.jwtService.signAsync(\n        payload,\n        this.getAccessTokenOptions(user)\n      ),\n      refresh_token,\n    };\n  }\n\n  async loginWithThirdParty(\n    fieldId: keyof User,\n    getSocialUser: GetSocialUserHandler,\n    customName?: string\n  ) {\n    try {\n      const { name, email, id } = await getSocialUser();\n\n      const internalUser = await this.userService.getUserBy({ [fieldId]: id });\n\n      if (internalUser) {\n        if (\n          internalUser.email != email &&\n          !(await this.userService.getUserByEmail(email))\n        ) {\n          internalUser.email = email;\n\n          await internalUser.save();\n        }\n\n        return this.login(internalUser);\n      }\n\n      if (await this.userService.getUserByEmail(email)) {\n        throw new BadRequestException('Email already exists');\n      }\n\n      const username = await this.userService.generateUsername(\n        customName || name\n      );\n\n      const user = await this.userService.create({\n        username,\n        email,\n        [fieldId]: id,\n      });\n\n      return this.login(user);\n    } catch (e) {\n      if (e instanceof HttpException) {\n        throw e;\n      }\n\n      throw new UnauthorizedException('Invalid access token');\n    }\n  }\n\n  async loginWithRefreshToken(refreshToken: string) {\n    try {\n      const decoded = this.jwtService.decode(refreshToken) as Token;\n\n      if (!decoded) {\n        throw new Error();\n      }\n\n      const user = await this.userService.validateUserById(decoded.sub);\n\n      await this.jwtService.verifyAsync(\n        refreshToken,\n        this.getRefreshTokenOptions(user)\n      );\n\n      return this.login(user);\n    } catch {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  getRefreshTokenOptions(user: User): JwtSignOptions {\n    return this.getTokenOptions('refresh', user);\n  }\n\n  getAccessTokenOptions(user: User): JwtSignOptions {\n    return this.getTokenOptions('access', user);\n  }\n\n  private getTokenOptions(type: 'refresh' | 'access', user: User) {\n    const options: JwtSignOptions = {\n      secret: environments[type + 'TokenSecret'] + user.sessionToken,\n    };\n\n    const expiration = environments[type + 'TokenExpiration'];\n\n    if (expiration) {\n      options.expiresIn = expiration;\n    }\n\n    return options;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfService.html":{"url":"injectables/ConfService.html","title":"injectable - ConfService","body":"\n                   \n\n\n\n\n\n  Injectables\n  ConfService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/conf/service/conf.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(confModel: any, confGateway: ConfGateway, userService: UserService, sponsorService: SponsorService, messageService: MessageService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     create\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    create(conf: ConfDto, user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     update\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    update(conf: Conf, body: any, user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     handleUpdateConf\n                                \n                            \n            \n                            \n                                \n            handleUpdateConf(conf: Conf, body: Partial)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     delete\n                                \n                            \n            \n                            \n                                \n            delete(conf: Conf, user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     handleDeleteConf\n                                \n                            \n            \n                            \n                                \n            handleDeleteConf(conf: Conf)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getConfByIdAndOwner\n                                \n                            \n            \n                            \n                                \n            getConfByIdAndOwner(confId: string, owner: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     validateConfByIdAndOwner\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validateConfByIdAndOwner(confId: string, owner: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getConf\n                                \n                            \n            \n                            \n                                \n            getConf(confId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     validateConf\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validateConf(confId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getConfsByMember\n                                \n                            \n            \n                            \n                                \n            getConfsByMember(user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getConfsBySponsor\n                                \n                            \n            \n                            \n                                \n            getConfsBySponsor(sponsorId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getPublicConfs\n                                \n                            \n            \n                            \n                                \n            getPublicConfs()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getConfsByOwner\n                                \n                            \n            \n                            \n                                \n            getConfsByOwner(user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getSockets\n                                \n                            \n            \n                            \n                                \n            getSockets(conf: Conf)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     subscribeSocket\n                                \n                            \n            \n                            \n                                \n            subscribeSocket(socket: any, conf: Conf)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     unsubscribeSocket\n                                \n                            \n            \n                            \n                                \n            unsubscribeSocket(socket: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     sendMessage\n                                \n                            \n            \n                            \n                                \n            sendMessage(conf: Conf, event: string, message: T)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     sendMessageExcept\n                                \n                            \n            \n                            \n                                \n            sendMessageExcept(except: any, conf: Conf, event: string, message: T)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     join\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    join(confId: string, user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     handleJoinConf\n                                \n                            \n            \n                            \n                                \n            handleJoinConf(user: User, conf: Conf)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     leave\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    leave(user: User, conf: Conf)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     handleLeaveConf\n                                \n                            \n            \n                            \n                                \n            handleLeaveConf(user: User, conf: Conf)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Private blockedFields\n                                \n                            \n                            \n                                \n                                    blockedFields:     (\"title\" | \"description\" | \"slug\" | \"members\" | \"owner\" | \"start\" | \"end\" | \"createdAt\" | \"update...\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     unpopulatedFields\n                                \n                            \n                            \n                                \n                                    unpopulatedFields:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {\n  Inject,\n  Injectable,\n  forwardRef,\n  NotFoundException,\n} from '@nestjs/common';\nimport { getSocketClient } from '../../../shared/utils/get-socket-client';\nimport { MessageService } from '../../messages/service/message.service';\nimport { SponsorService } from '../../sponsor/service/sponsor.service';\nimport { UserService } from '../../user/service/user.service';\nimport { ConfGateway } from '../gateway/conf.gateway';\nimport { remove } from '../../../shared/utils/remove';\nimport { User } from '../../user/schema/user.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, UpdateQuery } from 'mongoose';\nimport { Conf } from '../schema/conf.schema';\nimport { ConfDto } from '../dto/conf.dto';\nimport { Socket } from 'socket.io';\n\n@Injectable()\nexport class ConfService {\n  private blockedFields: (keyof Conf)[] = [\n    'members',\n    'owner',\n  ];\n\n  unpopulatedFields = '-' + this.blockedFields.join(' -');\n\n  constructor(\n    @InjectModel(Conf.name) private confModel: Model,\n    private confGateway: ConfGateway,\n    private userService: UserService,\n    private sponsorService: SponsorService,\n    @Inject(forwardRef(() => MessageService))\n    private messageService: MessageService\n  ) { }\n\n  async create(conf: ConfDto, user: User) {\n    const object = await this.confModel.create({ ...conf, owner: user._id });\n\n    return object\n      .populate('owner', this.userService.unpopulatedFields)\n      .execPopulate();\n  }\n\n  async update(conf: Conf, body: UpdateQuery, user: User) {\n    this.handleUpdateConf(conf, body as Conf);\n\n    return this.confModel\n      .findOneAndUpdate({ _id: conf._id, owner: user._id }, body)\n      .populate('owner', this.userService.unpopulatedFields);\n  }\n\n  handleUpdateConf(conf: Conf, body: Partial) {\n    this.sendMessage(conf, 'conf:update', Object.assign(conf, body));\n  }\n\n  delete(conf: Conf, user: User) {\n    this.handleDeleteConf(conf);\n\n    return Promise.all([\n      this.confModel.findOneAndDelete({ _id: conf._id, owner: user._id }),\n      this.messageService.deleteRoomMessages(conf),\n    ]);\n  }\n\n  handleDeleteConf(conf: Conf) {\n    this.sendMessage(conf, 'conf:delete', conf);\n  }\n\n  getConfByIdAndOwner(confId: string, owner: User) {\n    return this.confModel\n      .findOne({ _id: confId, owner: owner._id })\n      .populate('members', this.userService.unpopulatedFields)\n      .populate('sponsors', this.sponsorService.unpopulatedFields)\n      .populate('owner', this.userService.unpopulatedFields);\n  }\n\n  async validateConfByIdAndOwner(confId: string, owner: User) {\n    const conf = await this.getConfByIdAndOwner(confId, owner);\n\n    if (!conf) {\n      throw new NotFoundException('Conf não encontrada');\n    }\n\n    return conf;\n  }\n\n  getConf(confId: string) {\n    return this.confModel\n      .findById(confId)\n      .populate('members', this.userService.unpopulatedFields)\n      .populate('sponsors', this.sponsorService.unpopulatedFields)\n      .populate('owner', this.userService.unpopulatedFields);\n  }\n\n  async validateConf(confId: string) {\n    const conf = await this.getConf(confId);\n\n    if (!conf) {\n      throw new NotFoundException('Conf não encontrada');\n    }\n\n    return conf;\n  }\n\n  getConfsByMember(user: User) {\n    return this.confModel\n      .find({ members: { $in: user._id } })\n      .populate('owner', this.userService.unpopulatedFields);\n  }\n\n  getConfsBySponsor(sponsorId: string) {\n    return this.confModel\n      .find({ sponsors: { $in: sponsorId } })\n      .populate('sponsors', this.sponsorService.unpopulatedFields)\n      .populate('owner', this.userService.unpopulatedFields);\n  }\n\n  getPublicConfs() {\n    return this.confModel\n      .find({ isPublic: true })\n      .populate('owner', this.userService.unpopulatedFields);\n  }\n\n  getConfsByOwner(user: User) {\n    return this.confModel.find({ owner: user._id });\n  }\n\n  getSockets(conf: Conf) {\n    return this.confGateway.server.in(`conf_${conf._id}`).allSockets();\n  }\n\n  subscribeSocket(socket: Socket, conf: Conf) {\n    return socket.join(`conf_${conf._id}`);\n  }\n\n  unsubscribeSocket(socket: Socket) {\n    const conf = getSocketClient(socket).room;\n\n    if (!conf) {\n      return;\n    }\n\n    return socket.leave(`conf_${conf._id}`);\n  }\n\n  sendMessage(conf: Conf, event: string, message?: T) {\n    return this.confGateway.server.to(`conf_${conf._id}`).emit(event, message);\n  }\n\n  sendMessageExcept(except: Socket, conf: Conf, event: string, message: T) {\n    return except.broadcast.to(`conf_${conf._id}`).emit(event, message);\n  }\n\n  async join(confId: string, user: User) {\n    const conf = await this.validateConf(confId);\n\n    if (!conf.members.some((member) => user.id === member.id)) {\n      conf.members.push(user._id);\n\n      this.handleJoinConf(user, conf);\n\n      return conf.save();\n    }\n\n    return conf\n      .populate('members', this.userService.unpopulatedFields)\n      .execPopulate();\n  }\n\n  handleJoinConf(user: User, conf: Conf) {\n    this.sendMessage(conf, 'conf:join', this.userService.filterUser(user));\n  }\n\n  async leave(user: User, conf: Conf) {\n    remove(conf.members, (member) => member.id === user.id);\n\n    this.handleLeaveConf(user, conf);\n\n    return conf.save();\n  }\n\n  handleLeaveConf(user: User, conf: Conf) {\n    this.sendMessage(conf, 'conf:leave', this.userService.filterUser(user));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAuthService.html":{"url":"injectables/GoogleAuthService.html","title":"injectable - GoogleAuthService","body":"\n                   \n\n\n\n\n\n  Injectables\n  GoogleAuthService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/auth/service/google-auth.service.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getUser(accessToken: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@nestjs/common';\nimport { google } from 'googleapis';\nimport { authConfig } from '../config/auth.config';\n\nconst auth = authConfig.google;\n\n@Injectable()\nexport class GoogleAuthService {\n  async getUser(accessToken: string) {\n    const client = new google.auth.OAuth2(auth.appId as string, auth.appSecret);\n\n    client.setCredentials({ access_token: accessToken });\n\n    const oauth2 = google.oauth2({\n      auth: client,\n      version: 'v2',\n    });\n\n    const { data } = await oauth2.userinfo.get();\n\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/auth/guard/jwt-auth.guard.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(authService: AuthService, jwtService: JwtService, userService: UserService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     canActivate\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    canActivate(ctx: ExecutionContext)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private handleRequest\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    handleRequest(ctx: ExecutionContext, client: Client)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private validate\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validate(undefined: Token)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private getToken\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getToken(ctx: ExecutionContext, client: Client)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     throwException\n                                \n                            \n            \n                            \n                                \n            throwException(ctx: ExecutionContext, message: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private getRequest\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getRequest(ctx: ExecutionContext)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     reflector\n                                \n                            \n                            \n                                \n                                    reflector:     Reflector\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  UnauthorizedException,\n  Inject,\n  forwardRef,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\nimport { Socket } from 'socket.io';\nimport { Client, getClient } from '../../../shared/utils/get-client';\nimport { UserService } from '../../user/service/user.service';\nimport { AuthService } from '../service/auth.service';\n\nexport interface Token {\n  sub: string;\n  username: string;\n}\n\n@Injectable()\nexport class JwtAuthGuard implements CanActivate {\n  reflector: Reflector;\n\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n    @Inject(forwardRef(() => UserService)) private userService: UserService\n  ) {\n    this.reflector = new Reflector();\n  }\n\n  async canActivate(ctx: ExecutionContext): Promise {\n    const client = this.getRequest(ctx);\n\n    const allowAny = this.reflector.get('allow-any', ctx.getHandler());\n\n    try {\n      client.user = await this.handleRequest(ctx, client);\n    } catch (e) {\n      if (allowAny) {\n        return true;\n      }\n\n      throw e;\n    }\n\n    return client.user != null;\n  }\n\n  private async handleRequest(ctx: ExecutionContext, client: Client) {\n    const token = this.getToken(ctx, client);\n\n    const decoded = this.jwtService.decode(token) as Token;\n\n    if (!decoded) {\n      this.throwException(ctx, 'Incapaz de decodificar o token');\n    }\n\n    try {\n      const user = await this.validate(decoded);\n\n      await this.jwtService.verifyAsync(\n        token,\n        this.authService.getAccessTokenOptions(user)\n      );\n\n      return user;\n    } catch (e) {\n      this.throwException(ctx, 'Invalid token');\n    }\n  }\n\n  private validate({ sub }: Token) {\n    return this.userService.validateUserById(sub);\n  }\n\n  private getToken(ctx: ExecutionContext, client: Client): string {\n    const authorization = client.headers.authorization?.split(' ');\n\n    if (!authorization) {\n      this.throwException(ctx, 'Token não encontrado');\n    }\n\n    if (authorization[0].toLowerCase() !== 'bearer') {\n      this.throwException(ctx, 'Tipo de autorização inválida');\n    }\n\n    if (!authorization[1]) {\n      this.throwException(ctx, 'Token não fornecido');\n    }\n\n    return authorization[1];\n  }\n\n  throwException(ctx: ExecutionContext, message: string) {\n    if (ctx.getType() === 'ws') {\n      ctx.switchToWs().getClient().disconnect(true);\n    }\n\n    throw new UnauthorizedException(message);\n  }\n\n  private getRequest(ctx: ExecutionContext) {\n    return getClient(ctx);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/messages/service/message.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(messageModel: any, roomService: RoomService, userService: UserService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getMessage\n                                \n                            \n            \n                            \n                                \n            getMessage(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     validateMessage\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validateMessage(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getPopulatedMessage\n                                \n                            \n            \n                            \n                                \n            getPopulatedMessage(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     validatePopulatedMessage\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validatePopulatedMessage(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getFirstRoomMessage\n                                \n                            \n            \n                            \n                                \n            getFirstRoomMessage(room: Room)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getRoomMessages\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getRoomMessages(room: Room, limit: number, before: Date)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getDirectMessages\n                                \n                            \n            \n                            \n                                \n            getDirectMessages(from: User, to: User, limit: number, before: Date)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private getMessages\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getMessages(filter: _FilterQuery, limit: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     sortMessages\n                                \n                            \n            \n                            \n                                \n            sortMessages(messages: Message[])\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getFirstDirectMessage\n                                \n                            \n            \n                            \n                                \n            getFirstDirectMessage(from: User, to: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private getDirectMessageFilter\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getDirectMessageFilter(from: User, to: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     _FilterQuery\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createRoomMessage\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createRoomMessage(from: User, room: Room, message: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteRoomMessages\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    deleteRoomMessages(room: Room)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createDirectMessage\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createDirectMessage(from: User, to: User, message: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteDirectMessage\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    deleteDirectMessage(message: Message)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteRoomMessage\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    deleteRoomMessage(room: Room, messageId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteDirectMessages\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    deleteDirectMessages(from: User, to: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {\n  Inject,\n  Injectable,\n  forwardRef,\n  NotFoundException,\n} from '@nestjs/common';\nimport { RoomService } from '../../room/service/room.service';\nimport { UserService } from '../../user/service/user.service';\nimport { Room } from '../../room/schema/room.schema';\nimport { User } from '../../user/schema/user.schema';\nimport { Message } from '../schema/message.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { FilterQuery, Model } from 'mongoose';\n\n@Injectable()\nexport class MessageService {\n  constructor(\n    @InjectModel(Message.name) private messageModel: Model,\n    @Inject(forwardRef(() => RoomService)) private roomService: RoomService,\n    private userService: UserService\n  ) {}\n\n  getMessage(id: string) {\n    return this.messageModel\n      .findById(id)\n      .populate('from', this.userService.unpopulatedFields);\n  }\n\n  async validateMessage(id: string) {\n    const message = await this.getMessage(id);\n\n    if (!message) {\n      throw new NotFoundException('Messagem não encontrada');\n    }\n\n    return message;\n  }\n\n  getPopulatedMessage(id: string) {\n    return this.messageModel\n      .findById(id)\n      .populate('from', this.userService.unpopulatedFields)\n      .populate('to', this.userService.unpopulatedFields)\n      .populate('room');\n  }\n\n  async validatePopulatedMessage(id: string) {\n    const message = await this.getPopulatedMessage(id);\n\n    if (!message) {\n      throw new NotFoundException('Messagem não encontrada');\n    }\n\n    return message;\n  }\n\n  getFirstRoomMessage(room: Room) {\n    return this.messageModel\n      .findOne({ room: room._id })\n      .populate('from', this.userService.unpopulatedFields);\n  }\n\n  async getRoomMessages(room: Room, limit?: number, before?: Date) {\n    const filter: FilterQuery = {\n      room: room._id,\n      createdAt: { $lte: before },\n    };\n\n    if (!before) {\n      delete filter.createdAt;\n    }\n\n    return this.getMessages(filter, limit);\n  }\n\n  getDirectMessages(from: User, to: User, limit = 30, before?: Date) {\n    const filter: FilterQuery = {\n      ...this.getDirectMessageFilter(from, to),\n      createdAt: { $lte: before },\n    };\n\n    if (!before) {\n      delete filter.createdAt;\n    }\n\n    return this.getMessages(filter, limit);\n  }\n\n  private async getMessages(filter: FilterQuery, limit: number) {\n    return this.sortMessages(\n      await this.messageModel\n        .find(filter)\n        .limit(limit)\n        .sort({ createdAt: -1 })\n        .populate('from', this.userService.unpopulatedFields)\n    );\n  }\n\n  sortMessages(messages: Message[]) {\n    return messages.sort(\n      (a, b) => a.createdAt.getTime() - b.createdAt.getTime()\n    );\n  }\n\n  getFirstDirectMessage(from: User, to: User) {\n    return this.messageModel\n      .findOne(this.getDirectMessageFilter(from, to))\n      .populate('from', this.userService.unpopulatedFields);\n  }\n\n  private getDirectMessageFilter(from: User, to: User): FilterQuery {\n    return {\n      $or: [\n        {\n          from: from._id,\n          to: to._id,\n        },\n        {\n          to: from._id,\n          from: to._id,\n        },\n      ],\n    };\n  }\n\n  async createRoomMessage(from: User, room: Room, message: string) {\n    const object = await this.messageModel.create({\n      from: from._id,\n      room: room._id,\n      message,\n    });\n\n    return object\n      .populate('from', this.userService.unpopulatedFields)\n      .execPopulate();\n  }\n\n  async deleteRoomMessages(room: Room) {\n    this.roomService.sendMessage(room, 'room:delete_messages', room.id);\n\n    return this.messageModel.deleteMany({ room: room._id });\n  }\n\n  async createDirectMessage(from: User, to: User, message: string) {\n    const object = await this.messageModel.create({\n      from: from._id,\n      to: to._id,\n      message,\n    });\n\n    return object\n      .populate('from', this.userService.unpopulatedFields)\n      .execPopulate();\n  }\n\n  async deleteDirectMessage(message: Message) {\n    this.userService.sendMessage(\n      message.from,\n      'direct:delete_message',\n      message._id\n    );\n\n    this.userService.sendMessage(\n      message.to,\n      'direct:delete_message',\n      message._id\n    );\n\n    return this.messageModel.findOneAndDelete({\n      _id: message._id,\n      to: message.to._id,\n    });\n  }\n\n  async deleteRoomMessage(room: Room, messageId: string) {\n    this.roomService.sendMessage(room, 'room:delete_message', messageId);\n\n    return this.messageModel.findOneAndDelete({\n      _id: messageId,\n      room: room._id,\n    });\n  }\n\n  async deleteDirectMessages(from: User, to: User) {\n    this.userService.sendMessage(from, 'direct:delete_messages', to.id);\n    this.userService.sendMessage(to, 'direct:delete_messages', from.id);\n\n    return this.messageModel.findOneAndDelete({ from: from._id, to: to._id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MobileNotificationService.html":{"url":"injectables/MobileNotificationService.html","title":"injectable - MobileNotificationService","body":"\n                   \n\n\n\n\n\n  Injectables\n  MobileNotificationService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/notification/service/mobile-notification.service.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     sendNotification\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    sendNotification(token: string | string[], payload: MessagingPayload)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@nestjs/common';\nimport { messaging } from 'firebase-admin';\nimport { fcm } from '../api/firebase';\n\n@Injectable()\nexport class MobileNotificationService {\n  async sendNotification(\n    token: string | string[],\n    payload: messaging.MessagingPayload\n  ) {\n    return fcm.sendToDevice(token, {\n      ...payload,\n\n      data: {\n        ...payload.data,\n        click_action: 'FLUTTER_NOTIFICATION_CLICK',\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/pipe/parse-object-id.pipe.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     transform\n                                \n                            \n            \n                            \n                                \n            transform(value: any, metadata: ArgumentMetadata)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {\n  ArgumentMetadata,\n  BadRequestException,\n  Injectable,\n  PipeTransform,\n} from '@nestjs/common';\nimport { ObjectId } from 'mongodb';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    if (!ObjectId.isValid(value)) {\n      throw new BadRequestException(`${metadata.data} must be an ObjectId`);\n    }\n\n    return ObjectId.createFromHexString(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RecoverService.html":{"url":"injectables/RecoverService.html","title":"injectable - RecoverService","body":"\n                   \n\n\n\n\n\n  Injectables\n  RecoverService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/user/service/recover.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(recoveryModel: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     create\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    create(user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     get\n                                \n                            \n            \n                            \n                                \n            get(code: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     delete\n                                \n                            \n            \n                            \n                                \n            delete(user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { randomString } from '../../../shared/utils/random-string';\nimport { environments } from '../../../environments/environments';\nimport { Recover } from '../schema/recover.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User } from '../schema/user.schema';\nimport { Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class RecoverService {\n  constructor(\n    @InjectModel(Recover.name) private recoveryModel: Model\n  ) {}\n\n  async create(user: User) {\n    await this.delete(user);\n\n    return this.recoveryModel.create({\n      code: randomString(50),\n      owner: user._id,\n      expiration: new Date(\n        Date.now() + environments.recoverCodeExpiration * 1000\n      ),\n    });\n  }\n\n  get(code: Recover['code']) {\n    return this.recoveryModel.findOne({ code }).populate('owner');\n  }\n\n  delete(user: User) {\n    return this.recoveryModel.deleteMany({ owner: user._id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoomService.html":{"url":"injectables/RoomService.html","title":"injectable - RoomService","body":"\n                   \n\n\n\n\n\n  Injectables\n  RoomService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/room/service/room.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(roomModel: any, roomGateway: RoomGateway, userService: UserService, messageService: MessageService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     create\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    create(room: RoomDto, user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     update\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    update(room: Room, body: any, user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     handleUpdateRoom\n                                \n                            \n            \n                            \n                                \n            handleUpdateRoom(room: Room, body: Partial)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     delete\n                                \n                            \n            \n                            \n                                \n            delete(room: Room, user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     handleDeleteRoom\n                                \n                            \n            \n                            \n                                \n            handleDeleteRoom(room: Room)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getRoomByIdAndOwner\n                                \n                            \n            \n                            \n                                \n            getRoomByIdAndOwner(roomId: string, owner: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     validateRoomByIdAndOwner\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validateRoomByIdAndOwner(roomId: string, owner: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getRoom\n                                \n                            \n            \n                            \n                                \n            getRoom(roomId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     validateRoom\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validateRoom(roomId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getRoomsByMember\n                                \n                            \n            \n                            \n                                \n            getRoomsByMember(user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getPublicRooms\n                                \n                            \n            \n                            \n                                \n            getPublicRooms()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getRoomsByOwner\n                                \n                            \n            \n                            \n                                \n            getRoomsByOwner(user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getSockets\n                                \n                            \n            \n                            \n                                \n            getSockets(room: Room)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     subscribeSocket\n                                \n                            \n            \n                            \n                                \n            subscribeSocket(socket: any, room: Room)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     unsubscribeSocket\n                                \n                            \n            \n                            \n                                \n            unsubscribeSocket(socket: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     sendMessage\n                                \n                            \n            \n                            \n                                \n            sendMessage(room: Room, event: string, message: T)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     sendMessageExcept\n                                \n                            \n            \n                            \n                                \n            sendMessageExcept(except: any, room: Room, event: string, message: T)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     join\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    join(roomId: string, user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     handleJoinRoom\n                                \n                            \n            \n                            \n                                \n            handleJoinRoom(user: User, room: Room)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     leave\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    leave(user: User, room: Room)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     handleLeaveRoom\n                                \n                            \n            \n                            \n                                \n            handleLeaveRoom(user: User, room: Room)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {\n  Inject,\n  Injectable,\n  forwardRef,\n  NotFoundException,\n} from '@nestjs/common';\nimport { getSocketClient } from '../../../shared/utils/get-socket-client';\nimport { MessageService } from '../../messages/service/message.service';\nimport { UserService } from '../../user/service/user.service';\nimport { RoomGateway } from '../gateway/room.gateway';\nimport { remove } from '../../../shared/utils/remove';\nimport { User } from '../../user/schema/user.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, UpdateQuery } from 'mongoose';\nimport { Room } from '../schema/room.schema';\nimport { RoomDto } from '../dto/room.dto';\nimport { Socket } from 'socket.io';\n\n@Injectable()\nexport class RoomService {\n  constructor(\n    @InjectModel(Room.name) private roomModel: Model,\n    private roomGateway: RoomGateway,\n    private userService: UserService,\n    @Inject(forwardRef(() => MessageService))\n    private messageService: MessageService\n  ) {}\n\n  async create(room: RoomDto, user: User) {\n    const object = await this.roomModel.create({ ...room, owner: user._id });\n\n    return object\n      .populate('owner', this.userService.unpopulatedFields)\n      .execPopulate();\n  }\n\n  async update(room: Room, body: UpdateQuery, user: User) {\n    this.handleUpdateRoom(room, body as Room);\n\n    return this.roomModel\n      .findOneAndUpdate({ _id: room._id, owner: user._id }, body)\n      .populate('owner', this.userService.unpopulatedFields);\n  }\n\n  handleUpdateRoom(room: Room, body: Partial) {\n    this.sendMessage(room, 'room:update', Object.assign(room, body));\n  }\n\n  delete(room: Room, user: User) {\n    this.handleDeleteRoom(room);\n\n    return Promise.all([\n      this.roomModel.findOneAndDelete({ _id: room._id, owner: user._id }),\n      this.messageService.deleteRoomMessages(room),\n    ]);\n  }\n\n  handleDeleteRoom(room: Room) {\n    this.sendMessage(room, 'room:delete', room);\n  }\n\n  getRoomByIdAndOwner(roomId: string, owner: User) {\n    return this.roomModel\n      .findOne({ _id: roomId, owner: owner._id })\n      .populate('members', this.userService.unpopulatedFields)\n      .populate('owner', this.userService.unpopulatedFields);\n  }\n\n  async validateRoomByIdAndOwner(roomId: string, owner: User) {\n    const room = await this.getRoomByIdAndOwner(roomId, owner);\n\n    if (!room) {\n      throw new NotFoundException('Room not found');\n    }\n\n    return room;\n  }\n\n  getRoom(roomId: string) {\n    return this.roomModel\n      .findById(roomId)\n      .populate('members', this.userService.unpopulatedFields)\n      .populate('owner', this.userService.unpopulatedFields);\n  }\n\n  async validateRoom(roomId: string) {\n    const room = await this.getRoom(roomId);\n\n    if (!room) {\n      throw new NotFoundException('Room not found');\n    }\n\n    return room;\n  }\n\n  getRoomsByMember(user: User) {\n    return this.roomModel\n      .find({ members: { $in: user._id } })\n      .populate('owner', this.userService.unpopulatedFields);\n  }\n\n  getPublicRooms() {\n    return this.roomModel\n      .find({ isPublic: true })\n      .populate('owner', this.userService.unpopulatedFields);\n  }\n\n  getRoomsByOwner(user: User) {\n    return this.roomModel.find({ owner: user._id });\n  }\n\n  getSockets(room: Room) {\n    return this.roomGateway.server.in(`room_${room._id}`).allSockets();\n  }\n\n  subscribeSocket(socket: Socket, room: Room) {\n    return socket.join(`room_${room._id}`);\n  }\n\n  unsubscribeSocket(socket: Socket) {\n    const room = getSocketClient(socket).room;\n\n    if (!room) {\n      return;\n    }\n\n    return socket.leave(`room_${room._id}`);\n  }\n\n  sendMessage(room: Room, event: string, message?: T) {\n    return this.roomGateway.server.to(`room_${room._id}`).emit(event, message);\n  }\n\n  sendMessageExcept(except: Socket, room: Room, event: string, message: T) {\n    return except.broadcast.to(`room_${room._id}`).emit(event, message);\n  }\n\n  async join(roomId: string, user: User) {\n    const room = await this.validateRoom(roomId);\n\n    if (!room.members.some((member) => user.id === member.id)) {\n      room.members.push(user._id);\n\n      this.handleJoinRoom(user, room);\n\n      return room.save();\n    }\n\n    return room\n      .populate('members', this.userService.unpopulatedFields)\n      .execPopulate();\n  }\n\n  handleJoinRoom(user: User, room: Room) {\n    this.sendMessage(room, 'room:join', this.userService.filterUser(user));\n  }\n\n  async leave(user: User, room: Room) {\n    remove(room.members, (member) => member.id === user.id);\n\n    this.handleLeaveRoom(user, room);\n\n    return room.save();\n  }\n\n  handleLeaveRoom(user: User, room: Room) {\n    this.sendMessage(room, 'room:leave', this.userService.filterUser(user));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocketConnectionService.html":{"url":"injectables/SocketConnectionService.html","title":"injectable - SocketConnectionService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SocketConnectionService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/user/service/socket-connection.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(socketConnectionModel: any, userService: UserService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     create\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    create(socket: any, user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getAll\n                                \n                            \n            \n                            \n                                \n            getAll(user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getById\n                                \n                            \n            \n                            \n                                \n            getById(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getBySocket\n                                \n                            \n            \n                            \n                                \n            getBySocket(socket: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteAllConnections\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    deleteAllConnections()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     delete\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    delete(socket: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { SocketConnection } from '../schema/socket-connection.schema';\nimport { environments } from '../../../environments/environments';\nimport { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { UserService } from './user.service';\nimport { User } from '../schema/user.schema';\nimport { Socket } from 'socket.io';\nimport { Model } from 'mongoose';\nimport { hostname } from 'os';\n\n@Injectable()\nexport class SocketConnectionService {\n  constructor(\n    @InjectModel(SocketConnection.name)\n    private socketConnectionModel: Model,\n    @Inject(forwardRef(() => UserService)) private userService: UserService\n  ) {}\n\n  async create(socket: Socket, user: User) {\n    const connection = await this.socketConnectionModel.create({\n      user: user._id,\n      socketId: socket.id,\n      serverHostname: hostname(),\n      serverPort: environments.port,\n    });\n\n    if (!user.online) {\n      user.online = true;\n\n      await user.save();\n    }\n\n    return connection.populate('user').execPopulate();\n  }\n\n  getAll(user: User) {\n    return this.socketConnectionModel.find({ user: user._id });\n  }\n\n  getById(id: string) {\n    return this.socketConnectionModel.findById(id).populate('user');\n  }\n\n  getBySocket(socket: Socket) {\n    return this.socketConnectionModel\n      .findOne({ socketId: socket.id })\n      .populate('user');\n  }\n\n  async deleteAllConnections() {\n    await this.socketConnectionModel.deleteMany({\n      serverHostname: hostname(),\n      serverPort: environments.port,\n    });\n\n    const users = await this.userService.getOnlineUsers();\n\n    for (const user of users) {\n      const connections = await this.getAll(user);\n\n      if (connections.length === 0) {\n        user.online = false;\n\n        await user.save();\n      }\n    }\n  }\n\n  async delete(socket: Socket) {\n    const connection = await this.getBySocket(socket);\n\n    if (!connection) {\n      return;\n    }\n\n    await this.socketConnectionModel.findByIdAndDelete(connection._id);\n\n    const user = connection.user;\n\n    const connections = await this.getAll(user);\n\n    if (connections.length === 0) {\n      user.online = false;\n\n      await user.save();\n    }\n\n    return connection;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpeakerService.html":{"url":"injectables/SpeakerService.html","title":"injectable - SpeakerService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SpeakerService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/speakers/service/speaker.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(speakerModel: any, confService: ConfService, userService: UserService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getSpeaker\n                                \n                            \n            \n                            \n                                \n            getSpeaker(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     validateSpeaker\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validateSpeaker(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getPopulatedSpeaker\n                                \n                            \n            \n                            \n                                \n            getPopulatedSpeaker(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     validatePopulatedSpeaker\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validatePopulatedSpeaker(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getConfSpeakers\n                                \n                            \n            \n                            \n                                \n            getConfSpeakers(conf: Conf)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getNextConfSpeakers\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getNextConfSpeakers(conf: Conf, limit: number, before: Date)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private getSpeakers\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getSpeakers(filter: _FilterQuery, limit: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     sortSpeakers\n                                \n                            \n            \n                            \n                                \n            sortSpeakers(speakers: Speaker[])\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private getSpeakerFilter\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getSpeakerFilter(start: Date, end: Date)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     _FilterQuery\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createConfSpeaker\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createConfSpeaker(start: Date, conf: Conf, speaker: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteConfSpeaker\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    deleteConfSpeaker(conf: Conf, speakerId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {\n  Inject,\n  Injectable,\n  forwardRef,\n  NotFoundException,\n} from '@nestjs/common';\nimport { ConfService } from '../../conf/service/conf.service';\nimport { UserService } from '../../user/service/user.service';\nimport { Conf } from '../../conf/schema/conf.schema';\nimport { Speaker } from '../schema/speaker.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { FilterQuery, Model } from 'mongoose';\n\n@Injectable()\nexport class SpeakerService {\n  constructor(\n    @InjectModel(Speaker.name) private speakerModel: Model,\n    @Inject(forwardRef(() => ConfService)) private confService: ConfService,\n    private userService: UserService\n  ) {}\n\n  getSpeaker(id: string) {\n    return this.speakerModel.findById(id);\n  }\n\n  async validateSpeaker(id: string) {\n    const speaker = await this.getSpeaker(id);\n\n    if (!speaker) {\n      throw new NotFoundException('Palestrante não encontrado');\n    }\n\n    return speaker;\n  }\n\n  getPopulatedSpeaker(id: string) {\n    return this.speakerModel.findById(id).populate('conf');\n  }\n\n  async validatePopulatedSpeaker(id: string) {\n    const speaker = await this.getPopulatedSpeaker(id);\n\n    if (!speaker) {\n      throw new NotFoundException('Palestrante não encontrado');\n    }\n\n    return speaker;\n  }\n\n  getConfSpeakers(conf: Conf) {\n    return this.speakerModel.find({ conf: conf._id });\n  }\n\n  async getNextConfSpeakers(conf: Conf, limit?: number, before?: Date) {\n    const filter: FilterQuery = {\n      conf: conf._id,\n      start: { $lte: before },\n    };\n\n    if (!before) {\n      delete filter.start;\n    }\n\n    return this.getSpeakers(filter, limit);\n  }\n\n  private async getSpeakers(filter: FilterQuery, limit: number) {\n    return this.sortSpeakers(\n      await this.speakerModel.find(filter).limit(limit).sort({ start: -1 })\n    );\n  }\n\n  sortSpeakers(speakers: Speaker[]) {\n    return speakers.sort((a, b) => a.start.getTime() - b.start.getTime());\n  }\n\n  private getSpeakerFilter(start: Date, end: Date): FilterQuery {\n    return {\n      $or: [\n        { start: start, end: end },\n        { end: start, start: end },\n      ],\n    };\n  }\n\n  async createConfSpeaker(start: Date, conf: Conf, speaker: string) {\n    const object = await this.speakerModel.create({\n      start: start,\n      conf: conf._id,\n      speaker,\n    });\n\n    return object\n      .populate('start', this.userService.unpopulatedFields)\n      .execPopulate();\n  }\n\n  async deleteConfSpeaker(conf: Conf, speakerId: string) {\n    this.confService.sendMessage(conf, 'conf:delete_speaker', speakerId);\n\n    return this.speakerModel.findOneAndDelete({\n      _id: speakerId,\n      conf: conf._id,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SponsorService.html":{"url":"injectables/SponsorService.html","title":"injectable - SponsorService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SponsorService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/sponsor/service/sponsor.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(sponsorModel: any, sponsorGateway: SponsorGateway, userService: UserService, messageService: MessageService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     create\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    create(sponsor: SponsorDto, user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     update\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    update(sponsor: Sponsor, body: any, user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     handleUpdateSponsor\n                                \n                            \n            \n                            \n                                \n            handleUpdateSponsor(sponsor: Sponsor, body: Partial)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     delete\n                                \n                            \n            \n                            \n                                \n            delete(sponsor: Sponsor, user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     handleDeleteSponsor\n                                \n                            \n            \n                            \n                                \n            handleDeleteSponsor(sponsor: Sponsor)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getSponsorByIdAndOwner\n                                \n                            \n            \n                            \n                                \n            getSponsorByIdAndOwner(sponsorId: string, owner: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     validateSponsorByIdAndOwner\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validateSponsorByIdAndOwner(sponsorId: string, owner: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getSponsor\n                                \n                            \n            \n                            \n                                \n            getSponsor(sponsorId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getSponsorsByConf\n                                \n                            \n            \n                            \n                                \n            getSponsorsByConf(conf: Conf)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     validateSponsor\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validateSponsor(sponsorId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getSponsorsByMember\n                                \n                            \n            \n                            \n                                \n            getSponsorsByMember(user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getPublicSponsors\n                                \n                            \n            \n                            \n                                \n            getPublicSponsors()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getSponsorsByOwner\n                                \n                            \n            \n                            \n                                \n            getSponsorsByOwner(user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getSockets\n                                \n                            \n            \n                            \n                                \n            getSockets(sponsor: Sponsor)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     subscribeSocket\n                                \n                            \n            \n                            \n                                \n            subscribeSocket(socket: any, sponsor: Sponsor)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     unsubscribeSocket\n                                \n                            \n            \n                            \n                                \n            unsubscribeSocket(socket: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     sendMessage\n                                \n                            \n            \n                            \n                                \n            sendMessage(sponsor: Sponsor, event: string, message: T)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     sendMessageExcept\n                                \n                            \n            \n                            \n                                \n            sendMessageExcept(except: any, sponsor: Sponsor, event: string, message: T)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     join\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    join(sponsorId: string, user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     handleJoinSponsor\n                                \n                            \n            \n                            \n                                \n            handleJoinSponsor(user: User, sponsor: Sponsor)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     leave\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    leave(user: User, sponsor: Sponsor)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     handleLeaveSponsor\n                                \n                            \n            \n                            \n                                \n            handleLeaveSponsor(user: User, sponsor: Sponsor)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Private blockedFields\n                                \n                            \n                            \n                                \n                                    blockedFields:     (\"name\" | \"description\" | \"logo\" | \"slug\" | \"color\" | \"website\" | \"youtube\" | \"members\" | \"conf\" ...\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     unpopulatedFields\n                                \n                            \n                            \n                                \n                                    unpopulatedFields:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {\n  Inject,\n  Injectable,\n  forwardRef,\n  NotFoundException,\n} from '@nestjs/common';\nimport { getSocketClient } from '../../../shared/utils/get-socket-client';\nimport { MessageService } from '../../messages/service/message.service';\nimport { UserService } from '../../user/service/user.service';\nimport { SponsorGateway } from '../gateway/sponsor.gateway';\nimport { remove } from '../../../shared/utils/remove';\nimport { User } from '../../user/schema/user.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, ObjectId, UpdateQuery } from 'mongoose';\nimport { Sponsor } from '../schema/sponsor.schema';\nimport { SponsorDto } from '../dto/sponsor.dto';\nimport { Socket } from 'socket.io';\nimport { Conf } from '../../conf/schema/conf.schema';\nimport { ConfService } from '../../conf/service/conf.service';\n\n@Injectable()\nexport class SponsorService {\n  private blockedFields: (keyof Sponsor)[] = [\n    'members',\n    'owner',\n    'conf',\n  ];\n\n  unpopulatedFields = '-' + this.blockedFields.join(' -');\n\n  constructor(\n    @InjectModel(Sponsor.name) private sponsorModel: Model,\n    // private confService: ConfService,\n    private sponsorGateway: SponsorGateway,\n    private userService: UserService,\n    @Inject(forwardRef(() => MessageService))\n    private messageService: MessageService,\n  ) {}\n\n  async create(sponsor: SponsorDto, user: User) {\n    const object = await this.sponsorModel.create({\n      ...sponsor,\n      owner: user._id,\n    });\n\n    return object\n      .populate('owner', this.userService.unpopulatedFields)\n      .execPopulate();\n  }\n\n  async update(sponsor: Sponsor, body: UpdateQuery, user: User) {\n    this.handleUpdateSponsor(sponsor, body as Sponsor);\n\n    return this.sponsorModel\n      .findOneAndUpdate({ _id: sponsor._id, owner: user._id }, body)\n      .populate('owner', this.userService.unpopulatedFields);\n  }\n\n  handleUpdateSponsor(sponsor: Sponsor, body: Partial) {\n    this.sendMessage(sponsor, 'sponsor:update', Object.assign(sponsor, body));\n  }\n\n  delete(sponsor: Sponsor, user: User) {\n    this.handleDeleteSponsor(sponsor);\n\n    return Promise.all([\n      this.sponsorModel.findOneAndDelete({ _id: sponsor._id, owner: user._id }),\n    ]);\n  }\n\n  handleDeleteSponsor(sponsor: Sponsor) {\n    this.sendMessage(sponsor, 'sponsor:delete', sponsor);\n  }\n\n  getSponsorByIdAndOwner(sponsorId: string, owner: User) {\n    return this.sponsorModel\n      .findOne({ _id: sponsorId, owner: owner._id })\n      .populate('members', this.userService.unpopulatedFields)\n      .populate('owner', this.userService.unpopulatedFields);\n  }\n\n  async validateSponsorByIdAndOwner(sponsorId: string, owner: User) {\n    const sponsor = await this.getSponsorByIdAndOwner(sponsorId, owner);\n\n    if (!sponsor) {\n      throw new NotFoundException('Sponsor não encontrada');\n    }\n\n    return sponsor;\n  }\n\n  getSponsor(sponsorId: string) {\n    return this.sponsorModel\n      .findById(sponsorId)\n      .populate('members', this.userService.unpopulatedFields)\n      .populate('owner', this.userService.unpopulatedFields)\n      // .populate('conf', this.confService.unpopulatedFields);\n  }\n\n  getSponsorsByConf(conf: Conf) {\n    return this.sponsorModel.findOne({ conf: conf._id })\n      // .populate('conf', this.confService.unpopulatedFields);\n  }\n\n  async validateSponsor(sponsorId: string) {\n    const sponsor = await this.getSponsor(sponsorId);\n\n    if (!sponsor) {\n      throw new NotFoundException('Sponsor não encontrada');\n    }\n\n    return sponsor;\n  }\n\n  getSponsorsByMember(user: User) {\n    return this.sponsorModel\n      .find({ members: { $in: user._id } })\n      .populate('owner', this.userService.unpopulatedFields);\n  }\n\n  getPublicSponsors() {\n    return this.sponsorModel\n      .find()\n      .populate('owner', this.userService.unpopulatedFields);\n  }\n\n  getSponsorsByOwner(user: User) {\n    return this.sponsorModel.find({ owner: user._id });\n  }\n\n  getSockets(sponsor: Sponsor) {\n    return this.sponsorGateway.server.in(`sponsor_${sponsor._id}`).allSockets();\n  }\n\n  subscribeSocket(socket: Socket, sponsor: Sponsor) {\n    return socket.join(`sponsor_${sponsor._id}`);\n  }\n\n  unsubscribeSocket(socket: Socket) {\n    const sponsor = getSocketClient(socket).room;\n\n    if (!sponsor) {\n      return;\n    }\n\n    return socket.leave(`sponsor_${sponsor._id}`);\n  }\n\n  sendMessage(sponsor: Sponsor, event: string, message?: T) {\n    return this.sponsorGateway.server\n      .to(`sponsor_${sponsor._id}`)\n      .emit(event, message);\n  }\n\n  sendMessageExcept(\n    except: Socket,\n    sponsor: Sponsor,\n    event: string,\n    message: T\n  ) {\n    return except.broadcast.to(`sponsor_${sponsor._id}`).emit(event, message);\n  }\n\n  async join(sponsorId: string, user: User) {\n    const sponsor = await this.validateSponsor(sponsorId);\n\n    if (!sponsor.members.some((member) => user.id === member.id)) {\n      sponsor.members.push(user._id);\n\n      this.handleJoinSponsor(user, sponsor);\n\n      return sponsor.save();\n    }\n\n    return sponsor\n      .populate('members', this.userService.unpopulatedFields)\n      .execPopulate();\n  }\n\n  handleJoinSponsor(user: User, sponsor: Sponsor) {\n    this.sendMessage(\n      sponsor,\n      'sponsor:join',\n      this.userService.filterUser(user)\n    );\n  }\n\n  async leave(user: User, sponsor: Sponsor) {\n    remove(sponsor.members, (member) => member.id === user.id);\n\n    this.handleLeaveSponsor(user, sponsor);\n\n    return sponsor.save();\n  }\n\n  handleLeaveSponsor(user: User, sponsor: Sponsor) {\n    this.sendMessage(\n      sponsor,\n      'sponsor:leave',\n      this.userService.filterUser(user)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscriptionService.html":{"url":"injectables/SubscriptionService.html","title":"injectable - SubscriptionService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SubscriptionService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/user/service/subscription.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(webNotificationService: WebNotificationService, mobileNotificationService: MobileNotificationService, subscriptionModel: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getAll\n                                \n                            \n            \n                            \n                                \n            getAll(user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     get\n                                \n                            \n            \n                            \n                                \n            get(user: User, type: SubscriptionType, subscription: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     create\n                                \n                            \n            \n                            \n                                \n            create(user: User, type: SubscriptionType, subscription: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     delete\n                                \n                            \n            \n                            \n                                \n            delete(user: User, type: SubscriptionType, subscription: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteAll\n                                \n                            \n            \n                            \n                                \n            deleteAll(user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     sendNotification\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    sendNotification(user: User, payload: Partial)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Private logger\n                                \n                            \n                            \n                                \n                                    logger:     Logger\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { MobileNotificationService } from '../../notification/service/mobile-notification.service';\nimport { WebNotificationService } from '../../notification/service/web-notification.service';\nimport { SubscriptionType, Subscription } from '../schema/subscription.schema';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User } from '../schema/user.schema';\nimport { Dictionary } from 'code-config/dist';\nimport { messaging } from 'firebase-admin';\nimport { Model } from 'mongoose';\n\nexport interface NotificationPayload {\n  notification: messaging.NotificationMessagePayload;\n  webData: Dictionary;\n  mobileData: Dictionary;\n}\n\nexport enum NotificationType {\n  Room = 'room',\n  Direct = 'direct',\n}\n\n@Injectable()\nexport class SubscriptionService {\n  private logger = new Logger('SubscriptionService');\n\n  constructor(\n    private webNotificationService: WebNotificationService,\n    private mobileNotificationService: MobileNotificationService,\n    @InjectModel(Subscription.name)\n    private subscriptionModel: Model\n  ) {}\n\n  getAll(user: User) {\n    return this.subscriptionModel.find({ user: user._id });\n  }\n\n  get(user: User, type: SubscriptionType, subscription: string) {\n    return this.subscriptionModel.findOne({\n      user: user._id,\n      type,\n      subscription,\n    });\n  }\n\n  create(user: User, type: SubscriptionType, subscription: string) {\n    return this.subscriptionModel.create({\n      user: user._id,\n      type,\n      subscription,\n    });\n  }\n\n  delete(user: User, type: SubscriptionType, subscription: string) {\n    return this.subscriptionModel.findOneAndDelete({\n      user: user._id,\n      type,\n      subscription,\n    });\n  }\n\n  deleteAll(user: User) {\n    return this.subscriptionModel.deleteMany({ user: user._id });\n  }\n\n  async sendNotification(user: User, payload: Partial) {\n    const subscriptions = await this.getAll(user);\n\n    for (const subscription of subscriptions) {\n      switch (subscription.type) {\n        case SubscriptionType.Web:\n          this.webNotificationService\n            .sendNotification(JSON.parse(subscription.subscription), {\n              notification: payload.notification,\n              data: payload.webData,\n            })\n            .catch((e) => this.logger.debug(`${subscription.type} ${e}`));\n          break;\n        case SubscriptionType.Mobile:\n          delete payload.webData;\n\n          this.mobileNotificationService\n            .sendNotification(subscription.subscription, {\n              notification: payload.notification,\n              data: payload.mobileData,\n            })\n            .catch((e) => this.logger.debug(`${subscription.type} ${e}`));\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/user/service/user.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(userModel: any, userGateway: UserGateway, socketConnectionService: SocketConnectionService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getUserByName\n                                \n                            \n            \n                            \n                                \n            getUserByName(name: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     validateUserByName\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validateUserByName(username: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getUserByEmail\n                                \n                            \n            \n                            \n                                \n            getUserByEmail(mail: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     validateUserByEmail\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validateUserByEmail(email: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getUserBy\n                                \n                            \n            \n                            \n                                \n            getUserBy(filter: _FilterQuery)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getUserByGoogleId\n                                \n                            \n            \n                            \n                                \n            getUserByGoogleId(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getUserById\n                                \n                            \n            \n                            \n                                \n            getUserById(id: string | ObjectId)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     validateUserById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    validateUserById(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getOnlineUsers\n                                \n                            \n            \n                            \n                                \n            getOnlineUsers()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     subscribeSocket\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    subscribeSocket(socket: any, user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     unsubscribeSocket\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    unsubscribeSocket(socket: any, user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     sendMessage\n                                \n                            \n            \n                            \n                                \n            sendMessage(user: User, event: string, message: T)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     sendMessageExcept\n                                \n                            \n            \n                            \n                                \n            sendMessageExcept(except: any, user: User, event: string, message: T)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     generateUsername\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    generateUsername(base: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getUser(username: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateUser\n                                \n                            \n            \n                            \n                                \n            updateUser(user: User, data: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     filterUser\n                                \n                            \n            \n                            \n                                \n            filterUser(user: User, allowedFields: (\"username\" | \"email\" | \"sessionToken\" | \"online\" | \"password\" | \"facebookId\" | \"googleId\" | \"app...)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateUserObject\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    updateUserObject(user: User)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     create\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    create(body: Partial)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Private blockedFields\n                                \n                            \n                            \n                                \n                                    blockedFields:     (\"username\" | \"email\" | \"sessionToken\" | \"online\" | \"password\" | \"facebookId\" | \"googleId\" | \"app...\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     unpopulatedFields\n                                \n                            \n                            \n                                \n                                    unpopulatedFields:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { FilterQuery, Model, UpdateQuery } from 'mongoose';\nimport { ObjectId } from 'mongodb';\nimport { User } from '../schema/user.schema';\nimport { randomString } from '../../../shared/utils/random-string';\nimport { UserGateway } from '../gateway/user.gateway';\nimport { Socket } from 'socket.io';\nimport { SocketConnectionService } from './socket-connection.service';\n\n@Injectable()\nexport class UserService {\n  private blockedFields: (keyof User)[] = [\n    'password',\n    'sessionToken',\n    'email',\n    'facebookId',\n    'googleId',\n    'appleId',\n  ];\n\n  unpopulatedFields = '-' + this.blockedFields.join(' -');\n\n  constructor(\n    @InjectModel(User.name) private userModel: Model,\n    @Inject(forwardRef(() => UserGateway)) private userGateway: UserGateway,\n    private socketConnectionService: SocketConnectionService\n  ) {}\n\n  getUserByName(name: string) {\n    const username = { $regex: new RegExp(`^${name}$`, 'i') };\n\n    return this.userModel.findOne({ username });\n  }\n\n  async validateUserByName(username: string) {\n    const user = await this.getUserByName(username);\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    return user;\n  }\n\n  getUserByEmail(mail: string) {\n    const email = { $regex: new RegExp(`^${mail}$`, 'i') };\n\n    return this.userModel.findOne({ email });\n  }\n\n  async validateUserByEmail(email: string) {\n    const user = await this.getUserByEmail(email);\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    return user;\n  }\n\n  getUserBy(filter: FilterQuery) {\n    return this.userModel.findOne(filter);\n  }\n\n  getUserByGoogleId(id: string) {\n    return this.userModel.findOne({ googleId: id });\n  }\n\n  getUserById(id: ObjectId | string) {\n    return this.userModel.findById(id);\n  }\n\n  async validateUserById(id: string) {\n    const user = await this.getUserById(id);\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    return user;\n  }\n\n  getOnlineUsers() {\n    return this.userModel.find({ online: true });\n  }\n\n  async subscribeSocket(socket: Socket, user: User) {\n    await this.socketConnectionService.create(socket, user);\n\n    return socket.join(`user_${user._id}`);\n  }\n\n  async unsubscribeSocket(socket: Socket, user: User) {\n    await this.socketConnectionService.delete(socket);\n\n    return socket.leave(`user_${user._id}`);\n  }\n\n  sendMessage(user: User, event: string, message?: T) {\n    return this.userGateway.server.to(`user_${user._id}`).emit(event, message);\n  }\n\n  sendMessageExcept(except: Socket, user: User, event: string, message: T) {\n    return except.broadcast.to(`user_${user._id}`).emit(event, message);\n  }\n\n  async generateUsername(base: string) {\n    const name = base.replace(/\\s/g, '');\n\n    if (!(await this.getUserByName(name))) {\n      return name;\n    }\n\n    return this.generateUsername(name + randomString(6));\n  }\n\n  async getUser(username: string) {\n    return (\n      (await this.getUserByName(username)) ??\n      (await this.getUserByEmail(username))\n    );\n  }\n\n  updateUser(user: User, data: UpdateQuery) {\n    return this.userModel.findByIdAndUpdate(user._id, data);\n  }\n\n  filterUser(user: User, allowedFields: (keyof User)[] = []) {\n    const userObject = user.toObject({ virtuals: true });\n\n    for (const field of this.blockedFields) {\n      if (allowedFields.includes(field)) {\n        continue;\n      }\n\n      delete userObject[field];\n    }\n\n    return userObject;\n  }\n\n  async updateUserObject(user: User) {\n    const newInput = await this.getUserById(user._id);\n\n    return Object.assign(user, newInput);\n  }\n\n  async create(body: Partial) {\n    const user = await this.userModel.create(body);\n\n    user.generateSessionToken();\n\n    return user.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebNotificationService.html":{"url":"injectables/WebNotificationService.html","title":"injectable - WebNotificationService","body":"\n                   \n\n\n\n\n\n  Injectables\n  WebNotificationService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/notification/service/web-notification.service.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     sendNotification\n                                \n                            \n            \n                            \n                                \n            sendNotification(subscription: any, payload: WebpushConfig)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@nestjs/common';\nimport { messaging } from 'firebase-admin';\nimport { PushSubscription, sendNotification } from 'web-push';\n\n@Injectable()\nexport class WebNotificationService {\n  sendNotification(\n    subscription: PushSubscription,\n    payload: messaging.WebpushConfig\n  ) {\n    return sendNotification(\n      subscription,\n      JSON.stringify({\n        ...payload,\n        notification: { ...payload.notification, data: payload.data },\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppleLoginDto.html":{"url":"classes/AppleLoginDto.html","title":"class - AppleLoginDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  AppleLoginDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/auth/dto/apple-login.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     accessToken\n                                \n                            \n                            \n                                \n                                    accessToken:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     authorizationCode\n                                \n                            \n                            \n                                \n                                    authorizationCode:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     type\n                                \n                            \n                            \n                                \n                                    type:     \"web\" | \"ios\" | \"android\"\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class AppleLoginDto {\n  @IsOptional()\n  @IsNotEmpty()\n  @IsString()\n  name?: string;\n\n  @IsOptional()\n  @IsNotEmpty()\n  @IsString()\n  accessToken?: string;\n\n  @IsOptional()\n  @IsNotEmpty()\n  @IsString()\n  authorizationCode?: string;\n\n  @IsOptional()\n  @IsNotEmpty()\n  @IsString()\n  type?: 'web' | 'ios' | 'android';\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfDto.html":{"url":"classes/ConfDto.html","title":"class - ConfDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  ConfDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/conf/dto/conf.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     createdAt\n                                \n                            \n                            \n                                \n                                    createdAt:     Date\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     description\n                                \n                            \n                            \n                                \n                                    description:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     end\n                                \n                            \n                            \n                                \n                                    end:     Date\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isPublic\n                                \n                            \n                            \n                                \n                                    isPublic:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     members\n                                \n                            \n                            \n                                \n                                    members:     User[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     owner\n                                \n                            \n                            \n                                \n                                    owner:     User\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     slug\n                                \n                            \n                            \n                                \n                                    slug:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     start\n                                \n                            \n                            \n                                \n                                    start:     Date\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     title\n                                \n                            \n                            \n                                \n                                    title:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updatedAt\n                                \n                            \n                            \n                                \n                                    updatedAt:     Date\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IsBoolean, IsDateString, IsNotEmpty, IsString } from 'class-validator';\nimport { User } from '../../user/schema/user.schema';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ConfDto {\n  @ApiProperty({\n    type: String,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  title: string;\n\n\n  @ApiProperty({\n    type: String,\n  })\n  @IsString()\n  description: string;\n\n\n  @ApiProperty({\n    type: String,\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  slug: string;\n\n  members: User[];\n\n  owner: User;\n\n  @ApiProperty({\n    type: Date,\n    required: true,\n  })\n  @IsDateString()\n  start: Date;\n\n\n  @ApiProperty({\n    type: Date,\n    required: true,\n  })\n  @IsDateString()\n  end: Date;\n\n  \n  @ApiProperty({\n    type: Boolean,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsBoolean()\n  isPublic: boolean;\n\n  createdAt: Date;\n\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfSpeakerDto.html":{"url":"classes/ConfSpeakerDto.html","title":"class - ConfSpeakerDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  ConfSpeakerDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/speakers/dto/conf-speaker.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     bio\n                                \n                            \n                            \n                                \n                                    bio:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     confId\n                                \n                            \n                            \n                                \n                                    confId:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     end\n                                \n                            \n                            \n                                \n                                    end:     Date\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     start\n                                \n                            \n                            \n                                \n                                    start:     Date\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ObjectId } from '../../../shared/mongoose/object-id';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsDateString,\n  IsMongoId,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n} from 'class-validator';\n\nexport class ConfSpeakerDto {\n  @ApiProperty({\n    type: String,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  \n  @ApiProperty({\n    type: String,\n    maxLength: 2000\n  })\n  @IsString()\n  @MaxLength(2000)\n  bio: string;\n\n\n  @ApiProperty({\n    type: Date,\n    required: true\n  })\n  @IsDateString()\n  @IsNotEmpty()\n  start: Date;\n\n\n  @ApiProperty({\n    type: Date,\n    required: false\n  })\n  @IsDateString()\n  end: Date;\n\n\n  @ApiProperty({\n    type: ObjectId,\n    required: true\n  })\n  @IsNotEmpty()\n  @IsMongoId()\n  confId: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomSocketIoAdapter.html":{"url":"classes/CustomSocketIoAdapter.html","title":"class - CustomSocketIoAdapter","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  CustomSocketIoAdapter\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/core/adapter/custom-socket-io.adapter.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     createIOServer\n                                \n                            \n            \n                            \n                                \n            createIOServer(port: number, options: ServerOptions)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { Server, ServerOptions } from 'socket.io';\nimport { getAddress } from '../../shared/utils/get-address';\nimport { ExternalSocketIoAdapter } from './external-socket-io-adapter';\n\nexport class CustomSocketIoAdapter extends ExternalSocketIoAdapter {\n  createIOServer(port: number, options?: ServerOptions) {\n    const server = super.createIOServer(port, options) as Server;\n\n    server.use((socket, next) => {\n      socket.handshake.address = getAddress(socket);\n\n      next();\n    });\n\n    return server;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteConfSpeakerDto.html":{"url":"classes/DeleteConfSpeakerDto.html","title":"class - DeleteConfSpeakerDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  DeleteConfSpeakerDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/speakers/dto/delete-conf-speaker.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     confId\n                                \n                            \n                            \n                                \n                                    confId:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     speakerId\n                                \n                            \n                            \n                                \n                                    speakerId:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IsMongoId, IsOptional } from 'class-validator';\n\nexport class DeleteConfSpeakerDto {\n  @IsOptional()\n  @IsMongoId()\n  speakerId?: string;\n\n  @IsMongoId()\n  confId: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteDirectMessageDto.html":{"url":"classes/DeleteDirectMessageDto.html","title":"class - DeleteDirectMessageDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  DeleteDirectMessageDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/messages/dto/delete-direct-message.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     messageId\n                                \n                            \n                            \n                                \n                                    messageId:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     to\n                                \n                            \n                            \n                                \n                                    to:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId, IsOptional } from 'class-validator';\n\nexport class DeleteDirectMessageDto {\n  @IsMongoId()\n  @ApiProperty({\n    required: true\n  })\n  to: string;\n\n  @IsOptional()\n  @IsMongoId()\n  @ApiProperty({\n    required: false\n  })\n  messageId?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteRoomMessageDto.html":{"url":"classes/DeleteRoomMessageDto.html","title":"class - DeleteRoomMessageDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  DeleteRoomMessageDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/messages/dto/delete-room-message.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     messageId\n                                \n                            \n                            \n                                \n                                    messageId:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     roomId\n                                \n                            \n                            \n                                \n                                    roomId:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId, IsOptional } from 'class-validator';\n\nexport class DeleteRoomMessageDto {\n  @IsOptional()\n  @IsMongoId()\n  @ApiProperty({\n    required: false\n  })\n  messageId?: string;\n\n  @IsMongoId()\n  @ApiProperty({\n    required: false\n  })\n  roomId: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DirectMessageDto.html":{"url":"classes/DirectMessageDto.html","title":"class - DirectMessageDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  DirectMessageDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/messages/dto/direct-message.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     message\n                                \n                            \n                            \n                                \n                                    message:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     to\n                                \n                            \n                            \n                                \n                                    to:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId, IsString, MaxLength } from 'class-validator';\n\nexport class DirectMessageDto {\n  @IsString()\n  @MaxLength(2000)\n  @ApiProperty({\n    required: false\n  })\n  message: string;\n\n  @IsMongoId()\n  @ApiProperty({\n    required: true\n  })\n  to: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExternalSocketIoAdapter.html":{"url":"classes/ExternalSocketIoAdapter.html","title":"class - ExternalSocketIoAdapter","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  ExternalSocketIoAdapter\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/core/adapter/external-socket-io-adapter.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(app: INestApplicationContext, cors: string | string[])\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Public create\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    create(port: number, options: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public createIOServer\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createIOServer(port: number, options: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public bindMessageHandlers\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    bindMessageHandlers(client: any, handlers: MessageMappingProperties[], transform: (data: any) => Observable)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public mapPayload\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    mapPayload(payload: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     { data: any; ack?: () => any; }\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { INestApplicationContext } from '@nestjs/common';\nimport { isFunction, isNil } from '@nestjs/common/utils/shared.utils';\nimport {\n  AbstractWsAdapter,\n  MessageMappingProperties,\n} from '@nestjs/websockets';\nimport { DISCONNECT_EVENT } from '@nestjs/websockets/constants';\nimport { fromEvent, Observable } from 'rxjs';\nimport { filter, first, map, mergeMap, share, takeUntil } from 'rxjs/operators';\nimport { Server } from 'socket.io';\n\nexport class ExternalSocketIoAdapter extends AbstractWsAdapter {\n  constructor(\n    app?: INestApplicationContext,\n    private readonly cors: string | string[] = '*'\n  ) {\n    super(app);\n  }\n\n  public create(\n    port: number,\n    options?: any & { namespace?: string; server?: any }\n  ): any {\n    if (!options) {\n      return this.createIOServer(port);\n    }\n    const { namespace, server, ...opt } = options;\n    return server && isFunction(server.of)\n      ? server.of(namespace)\n      : namespace\n      ? this.createIOServer(port, opt).of(namespace)\n      : this.createIOServer(port, opt);\n  }\n\n  public createIOServer(port: number, options?: any): any {\n    if (this.httpServer && port === 0) {\n      const s = new Server(this.httpServer, {\n        cors: {\n          origin: this.cors,\n          methods: ['GET', 'POST'],\n          credentials: true,\n        },\n        cookie: {\n          httpOnly: true,\n          path: '/',\n        },\n        // Allow 1MB of data per request.\n        maxHttpBufferSize: 1e6,\n      } as any);\n\n      return s;\n    }\n    return new Server(port, options);\n  }\n\n  public bindMessageHandlers(\n    client: any,\n    handlers: MessageMappingProperties[],\n    transform: (data: any) => Observable\n  ) {\n    const disconnect$ = fromEvent(client, DISCONNECT_EVENT).pipe(\n      share(),\n      first()\n    );\n\n    handlers.forEach(({ message, callback }) => {\n      const source$ = fromEvent(client, message).pipe(\n        mergeMap((payload: any) => {\n          const { data, ack } = this.mapPayload(payload);\n          return transform(callback(data, ack)).pipe(\n            filter((response: any) => !isNil(response)),\n            map((response: any) => [response, ack])\n          );\n        }),\n        takeUntil(disconnect$)\n      );\n      source$.subscribe(([response, ack]) => {\n        if (response.event) {\n          return client.emit(response.event, response.data);\n        }\n        isFunction(ack) && ack(response);\n      });\n    });\n  }\n\n  public mapPayload(payload: any): { data: any; ack?: () => any } {\n    if (!Array.isArray(payload)) {\n      return { data: payload };\n    }\n    const lastElement = payload[payload.length - 1];\n    const isAck = isFunction(lastElement);\n    if (isAck) {\n      const size = payload.length - 1;\n      return {\n        data: size === 1 ? payload[0] : payload.slice(0, size),\n        ack: lastElement,\n      };\n    }\n    return { data: payload };\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchMessagesDto.html":{"url":"classes/FetchMessagesDto.html","title":"class - FetchMessagesDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  FetchMessagesDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/messages/dto/fetch-messages.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     before\n                                \n                            \n                            \n                                \n                                    before:     Date\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     limit\n                                \n                            \n                            \n                                \n                                    limit:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 30\n                                    \n                                \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsDate, IsNumber, IsOptional } from 'class-validator';\n\nexport class FetchMessagesDto {\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  @ApiProperty({\n    required: false\n  })\n  limit = 30;\n\n  @IsOptional()\n  @Type(() => Date)\n  @IsDate()\n  @ApiProperty({\n    required: false\n  })\n  before: Date;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchSpeakersDto.html":{"url":"classes/FetchSpeakersDto.html","title":"class - FetchSpeakersDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  FetchSpeakersDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/speakers/dto/fetch-speakers.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     before\n                                \n                            \n                            \n                                \n                                    before:     Date\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     limit\n                                \n                            \n                            \n                                \n                                    limit:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 30\n                                    \n                                \n                        \n                    \n            \n    \n    \n        import { Type } from 'class-transformer';\nimport { IsDate, IsNumber, IsOptional } from 'class-validator';\n\nexport class FetchSpeakersDto {\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  limit = 30;\n\n  @IsOptional()\n  @Type(() => Date)\n  @IsDate()\n  before: Date;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/auth/dto/login.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     password\n                                \n                            \n                            \n                                \n                                    password:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     username\n                                \n                            \n                            \n                                \n                                    username:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class LoginDto {\n  @ApiProperty({\n    type: String,\n    required: true\n  })\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n\n  @ApiProperty({\n    type: String,\n    required: true\n  })\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ObjectId.html":{"url":"classes/ObjectId.html","title":"class - ObjectId","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  ObjectId\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/mongoose/object-id.ts\n        \n\n\n\n\n\n    \n    \n        import { Schema } from 'mongoose';\n\nexport class ObjectId extends Schema.Types.ObjectId {}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RecoverPasswordDto.html":{"url":"classes/RecoverPasswordDto.html","title":"class - RecoverPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  RecoverPasswordDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/user/dto/recover-password.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     email\n                                \n                            \n                            \n                                \n                                    email:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IsEmail, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class RecoverPasswordDto {\n  @ApiProperty({\n    type: String,\n    required: true\n  })\n  @IsString()\n  @IsEmail()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RedisIoAdapter.html":{"url":"classes/RedisIoAdapter.html","title":"class - RedisIoAdapter","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  RedisIoAdapter\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/core/adapter/redis-io.adapter.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(host: string, port: number, app: INestApplicationContext)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     createIOServer\n                                \n                            \n            \n                            \n                                \n            createIOServer(port: number, options: ServerOptions)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Private redisAdapter\n                                \n                            \n                            \n                                \n                                    redisAdapter:     RedisAdapter\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { INestApplicationContext } from '@nestjs/common';\nimport { RedisClient } from 'redis';\nimport { ServerOptions } from 'socket.io';\nimport { createAdapter, RedisAdapter } from 'socket.io-redis';\nimport { CustomSocketIoAdapter } from './custom-socket-io.adapter';\n\nexport class RedisIoAdapter extends CustomSocketIoAdapter {\n  private redisAdapter: RedisAdapter;\n\n  constructor(host: string, port: number, app: INestApplicationContext) {\n    super(app);\n\n    const pubClient = new RedisClient({ host, port });\n    const subClient = pubClient.duplicate();\n    this.redisAdapter = createAdapter({ pubClient, subClient });\n  }\n\n  createIOServer(port: number, options?: ServerOptions) {\n    const server = super.createIOServer(port, options);\n\n    server.adapter(this.redisAdapter as any);\n\n    return server;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/auth/dto/register.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     email\n                                \n                            \n                            \n                                \n                                    email:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     password\n                                \n                            \n                            \n                                \n                                    password:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     username\n                                \n                            \n                            \n                                \n                                    username:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class RegisterDto {\n  @ApiProperty({\n    type: String,\n    required: true\n  })\n  @IsNotEmpty()\n  @IsString()\n  @Matches(/[a-zA-Z0-9_-]{2,20}/, {\n    message: 'Usuário inválido',\n  })\n  username: string;\n  \n\n  @ApiProperty({\n    type: String,\n    required: true,\n    minLength: 6,\n    maxLength: 60\n  })\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(60)\n  password: string;\n  \n  \n  @ApiProperty({\n    type: String,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoomDto.html":{"url":"classes/RoomDto.html","title":"class - RoomDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  RoomDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/room/dto/room.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     isPublic\n                                \n                            \n                            \n                                \n                                    isPublic:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     members\n                                \n                            \n                            \n                                \n                                    members:     User[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     owner\n                                \n                            \n                            \n                                \n                                    owner:     User\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     title\n                                \n                            \n                            \n                                \n                                    title:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IsBoolean, IsNotEmpty, IsString } from 'class-validator';\nimport { User } from '../../user/schema/user.schema';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class RoomDto {\n  @ApiProperty({\n    type: String,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  title: string;\n\n  members: User[];\n\n  owner: User;\n\n  @ApiProperty({\n    type: Boolean,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsBoolean()\n  isPublic: boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoomMessageDto.html":{"url":"classes/RoomMessageDto.html","title":"class - RoomMessageDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  RoomMessageDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/messages/dto/room-message.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     message\n                                \n                            \n                            \n                                \n                                    message:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     roomId\n                                \n                            \n                            \n                                \n                                    roomId:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId, IsString, MaxLength } from 'class-validator';\n\nexport class RoomMessageDto {\n  @IsString()\n  @MaxLength(2000)\n  @ApiProperty({\n    required: true\n  })\n  message: string;\n\n  @IsMongoId()\n  @ApiProperty({\n    required: true\n  })\n  roomId: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SponsorDto.html":{"url":"classes/SponsorDto.html","title":"class - SponsorDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  SponsorDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/sponsor/dto/sponsor.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     color\n                                \n                            \n                            \n                                \n                                    color:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     description\n                                \n                            \n                            \n                                \n                                    description:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     slug\n                                \n                            \n                            \n                                \n                                    slug:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     website\n                                \n                            \n                            \n                                \n                                    website:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     youtube\n                                \n                            \n                            \n                                \n                                    youtube:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class SponsorDto {\n  @ApiProperty({\n    type: String,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n\n  @ApiProperty({\n    type: String,\n  })\n  @IsString()\n  description: string;\n\n\n  @ApiProperty({\n    type: String,\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  slug: string;\n  \n\n  @ApiProperty({\n    type: String,\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  color: string;\n  \n  \n  @ApiProperty({\n    type: String,\n    required: false,\n  })\n  @IsString()\n  website: string;\n\n  \n  @ApiProperty({\n    type: String,\n    required: false,\n  })\n  @IsString()\n  youtube: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubscribeEventDto.html":{"url":"classes/SubscribeEventDto.html","title":"class - SubscribeEventDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  SubscribeEventDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/user/dto/subscribe-event.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     confirmPresence\n                                \n                            \n                            \n                                \n                                    confirmPresence:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     sharedEmail\n                                \n                            \n                            \n                                \n                                    sharedEmail:     boolean\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IsBoolean, IsNotEmpty, IsOptional } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class SubscribeEventDto {\n  @ApiProperty({\n    type: Boolean,\n  })\n  @IsOptional()\n  @IsBoolean()\n  sharedEmail: boolean;\n\n  @ApiProperty({\n    type: Boolean,\n    required: true\n  })\n  @IsNotEmpty()\n  @IsBoolean()\n  confirmPresence: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmailDto.html":{"url":"classes/UpdateEmailDto.html","title":"class - UpdateEmailDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  UpdateEmailDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/user/dto/update-email.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     email\n                                \n                            \n                            \n                                \n                                    email:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateEmailDto {\n  @ApiProperty({\n    type: String,\n    required: true\n  })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePasswordDto.html":{"url":"classes/UpdatePasswordDto.html","title":"class - UpdatePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  UpdatePasswordDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/user/dto/update-password.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     confirmPassword\n                                \n                            \n                            \n                                \n                                    confirmPassword:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     currentPassword\n                                \n                            \n                            \n                                \n                                    currentPassword:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     password\n                                \n                            \n                            \n                                \n                                    password:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class UpdatePasswordDto {\n  @ApiProperty({\n    type: String,\n    required: true\n  })\n  @IsNotEmpty()\n  @IsString()\n  currentPassword: string;\n\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    minLength: 6,\n    maxLength: 60\n  })\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(60)\n  password: string;\n\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    minLength: 6,\n    maxLength: 60\n  })\n  @IsNotEmpty()\n  @IsString()\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUsernameDto.html":{"url":"classes/UpdateUsernameDto.html","title":"class - UpdateUsernameDto","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  UpdateUsernameDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/user/dto/update-username.dto.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     username\n                                \n                            \n                            \n                                \n                                    username:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IsNotEmpty, IsString, Matches } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateUsernameDto {\n  @ApiProperty({\n    type: String,\n    required: true,\n    minLength: 2,\n    maxLength: 20\n  })\n  @IsNotEmpty()\n  @IsString()\n  @Matches(/[a-zA-Z0-9_-]{2,20}/, {\n    message: 'Usuário inválido',\n  })\n  username: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Client.html":{"url":"interfaces/Client.html","title":"interface - Client","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Client\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/utils/get-client.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        room\n                                    \n                                \n                                \n                                    \n                                        room:     Room\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Room\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { ExecutionContext } from '@nestjs/common';\nimport { Dictionary } from 'code-config';\nimport { Room } from '../../features/room/schema/room.schema';\nimport { User } from '../../features/user/schema/user.schema';\n\nexport interface Client {\n  headers: Dictionary;\n  user: User;\n  room?: Room;\n}\n\nexport const getClient = (ctx: ExecutionContext): T => {\n  switch (ctx.getType()) {\n    case 'ws':\n      return ctx.switchToWs().getClient().handshake;\n    case 'http':\n      return ctx.switchToHttp().getRequest();\n    default:\n      return undefined;\n  }\n};\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailerSchema.html":{"url":"interfaces/MailerSchema.html","title":"interface - MailerSchema","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  MailerSchema\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/core/mail/config/mailer.config.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        defaults\n                                    \n                                \n                                \n                                    \n                                        defaults:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        transport\n                                    \n                                \n                                \n                                    \n                                        transport:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { MailerOptions } from '@nestjs-modules/mailer';\nimport { ConfigFactory } from 'code-config';\nimport { join } from 'path';\nimport { PATHS } from '../../../shared/constants/paths';\n\nexport interface MailerSchema {\n  transport: MailerOptions['transport'];\n  defaults: MailerOptions['defaults'];\n}\n\nconst defaultValue = {\n  transport: {\n    host: 'smtp.example.com',\n    secure: false,\n    auth: {\n      user: 'user@example.com',\n      pass: 'topsecret',\n    },\n  },\n  defaults: {\n    from: '\"No Reply\" ',\n  },\n};\n\nexport const mailerConfig = ConfigFactory.getConfig(\n  join(PATHS.config, 'mailer.config.json'),\n  defaultValue\n);\n\nmailerConfig.initPrettify();\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationPayload.html":{"url":"interfaces/NotificationPayload.html","title":"interface - NotificationPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  NotificationPayload\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/user/service/subscription.service.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        mobileData\n                                    \n                                \n                                \n                                    \n                                        mobileData:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        notification\n                                    \n                                \n                                \n                                    \n                                        notification:     NotificationMessagePayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NotificationMessagePayload\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        webData\n                                    \n                                \n                                \n                                    \n                                        webData:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { MobileNotificationService } from '../../notification/service/mobile-notification.service';\nimport { WebNotificationService } from '../../notification/service/web-notification.service';\nimport { SubscriptionType, Subscription } from '../schema/subscription.schema';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User } from '../schema/user.schema';\nimport { Dictionary } from 'code-config/dist';\nimport { messaging } from 'firebase-admin';\nimport { Model } from 'mongoose';\n\nexport interface NotificationPayload {\n  notification: messaging.NotificationMessagePayload;\n  webData: Dictionary;\n  mobileData: Dictionary;\n}\n\nexport enum NotificationType {\n  Room = 'room',\n  Direct = 'direct',\n}\n\n@Injectable()\nexport class SubscriptionService {\n  private logger = new Logger('SubscriptionService');\n\n  constructor(\n    private webNotificationService: WebNotificationService,\n    private mobileNotificationService: MobileNotificationService,\n    @InjectModel(Subscription.name)\n    private subscriptionModel: Model\n  ) {}\n\n  getAll(user: User) {\n    return this.subscriptionModel.find({ user: user._id });\n  }\n\n  get(user: User, type: SubscriptionType, subscription: string) {\n    return this.subscriptionModel.findOne({\n      user: user._id,\n      type,\n      subscription,\n    });\n  }\n\n  create(user: User, type: SubscriptionType, subscription: string) {\n    return this.subscriptionModel.create({\n      user: user._id,\n      type,\n      subscription,\n    });\n  }\n\n  delete(user: User, type: SubscriptionType, subscription: string) {\n    return this.subscriptionModel.findOneAndDelete({\n      user: user._id,\n      type,\n      subscription,\n    });\n  }\n\n  deleteAll(user: User) {\n    return this.subscriptionModel.deleteMany({ user: user._id });\n  }\n\n  async sendNotification(user: User, payload: Partial) {\n    const subscriptions = await this.getAll(user);\n\n    for (const subscription of subscriptions) {\n      switch (subscription.type) {\n        case SubscriptionType.Web:\n          this.webNotificationService\n            .sendNotification(JSON.parse(subscription.subscription), {\n              notification: payload.notification,\n              data: payload.webData,\n            })\n            .catch((e) => this.logger.debug(`${subscription.type} ${e}`));\n          break;\n        case SubscriptionType.Mobile:\n          delete payload.webData;\n\n          this.mobileNotificationService\n            .sendNotification(subscription.subscription, {\n              notification: payload.notification,\n              data: payload.mobileData,\n            })\n            .catch((e) => this.logger.debug(`${subscription.type} ${e}`));\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Platform.html":{"url":"interfaces/Platform.html","title":"interface - Platform","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Platform\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/auth/config/auth.config.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        packageId\n                                    \n                                \n                                \n                                    \n                                        packageId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        redirectUri\n                                    \n                                \n                                \n                                    \n                                        redirectUri:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { ConfigFactory } from 'code-config';\nimport { join } from 'path';\nimport { PATHS } from '../../../shared/constants/paths';\nimport { authConfigDefault } from './auth-config.default';\n\ninterface Secret {\n  appId: number | string;\n  appSecret: string;\n}\n\ninterface Platform {\n  clientId: string;\n  redirectUri: string;\n  packageId?: string;\n}\n\nexport interface SecretsSchema {\n  facebook: Secret;\n  google: Secret;\n  apple: {\n    ios: Platform;\n    web: Platform;\n    android: Platform;\n    teamId: string;\n    keyIdentifier: string;\n  };\n}\n\nexport const authConfig = ConfigFactory.getConfig(\n  join(PATHS.config, 'auth.config.json'),\n  authConfigDefault\n);\n\nauthConfig.initPrettify();\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Secret.html":{"url":"interfaces/Secret.html","title":"interface - Secret","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Secret\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/auth/config/auth.config.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        appId\n                                    \n                                \n                                \n                                    \n                                        appId:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        appSecret\n                                    \n                                \n                                \n                                    \n                                        appSecret:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { ConfigFactory } from 'code-config';\nimport { join } from 'path';\nimport { PATHS } from '../../../shared/constants/paths';\nimport { authConfigDefault } from './auth-config.default';\n\ninterface Secret {\n  appId: number | string;\n  appSecret: string;\n}\n\ninterface Platform {\n  clientId: string;\n  redirectUri: string;\n  packageId?: string;\n}\n\nexport interface SecretsSchema {\n  facebook: Secret;\n  google: Secret;\n  apple: {\n    ios: Platform;\n    web: Platform;\n    android: Platform;\n    teamId: string;\n    keyIdentifier: string;\n  };\n}\n\nexport const authConfig = ConfigFactory.getConfig(\n  join(PATHS.config, 'auth.config.json'),\n  authConfigDefault\n);\n\nauthConfig.initPrettify();\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SecretsSchema.html":{"url":"interfaces/SecretsSchema.html","title":"interface - SecretsSchema","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  SecretsSchema\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/auth/config/auth.config.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        apple\n                                    \n                                \n                                \n                                    \n                                        apple:     { ios: Platform; web: Platform; android: Platform; teamId: string; keyIdentifier: string; }\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { ios: Platform; web: Platform; android: Platform; teamId: string; keyIdentifier: string; }\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        facebook\n                                    \n                                \n                                \n                                    \n                                        facebook:     Secret\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Secret\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        google\n                                    \n                                \n                                \n                                    \n                                        google:     Secret\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Secret\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { ConfigFactory } from 'code-config';\nimport { join } from 'path';\nimport { PATHS } from '../../../shared/constants/paths';\nimport { authConfigDefault } from './auth-config.default';\n\ninterface Secret {\n  appId: number | string;\n  appSecret: string;\n}\n\ninterface Platform {\n  clientId: string;\n  redirectUri: string;\n  packageId?: string;\n}\n\nexport interface SecretsSchema {\n  facebook: Secret;\n  google: Secret;\n  apple: {\n    ios: Platform;\n    web: Platform;\n    android: Platform;\n    teamId: string;\n    keyIdentifier: string;\n  };\n}\n\nexport const authConfig = ConfigFactory.getConfig(\n  join(PATHS.config, 'auth.config.json'),\n  authConfigDefault\n);\n\nauthConfig.initPrettify();\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SocialUser.html":{"url":"interfaces/SocialUser.html","title":"interface - SocialUser","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  SocialUser\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/auth/service/auth.service.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import {\n  BadRequestException,\n  forwardRef,\n  HttpException,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService, JwtSignOptions } from '@nestjs/jwt';\nimport { environments } from '../../../environments/environments';\nimport { User } from '../../user/schema/user.schema';\nimport { UserService } from '../../user/service/user.service';\nimport { Token } from '../guard/jwt-auth.guard';\n\nexport interface TokenResponse {\n  access_token: string;\n  refresh_token: string;\n}\n\nexport interface SocialUser {\n  id: number | string;\n  name: string;\n  email: string;\n}\n\nexport type GetSocialUserHandler = () => Promise>;\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(forwardRef(() => UserService)) private userService: UserService,\n    private jwtService: JwtService\n  ) {}\n\n  async validate(username: string, password: string) {\n    const user = await this.userService.getUser(username);\n\n    if (!user) {\n      throw new UnauthorizedException('Usuário não existe');\n    }\n\n    if (!(await user.validatePassword(password))) {\n      throw new UnauthorizedException('Incorrect password');\n    }\n\n    return user;\n  }\n\n  async login(user: User): Promise {\n    const payload: Token = {\n      sub: user.id,\n      username: user.username,\n    };\n\n    let refresh_token: string;\n\n    if (environments.accessTokenExpiration) {\n      refresh_token = await this.jwtService.signAsync(\n        payload,\n        this.getRefreshTokenOptions(user)\n      );\n    }\n\n    return {\n      access_token: await this.jwtService.signAsync(\n        payload,\n        this.getAccessTokenOptions(user)\n      ),\n      refresh_token,\n    };\n  }\n\n  async loginWithThirdParty(\n    fieldId: keyof User,\n    getSocialUser: GetSocialUserHandler,\n    customName?: string\n  ) {\n    try {\n      const { name, email, id } = await getSocialUser();\n\n      const internalUser = await this.userService.getUserBy({ [fieldId]: id });\n\n      if (internalUser) {\n        if (\n          internalUser.email != email &&\n          !(await this.userService.getUserByEmail(email))\n        ) {\n          internalUser.email = email;\n\n          await internalUser.save();\n        }\n\n        return this.login(internalUser);\n      }\n\n      if (await this.userService.getUserByEmail(email)) {\n        throw new BadRequestException('Email already exists');\n      }\n\n      const username = await this.userService.generateUsername(\n        customName || name\n      );\n\n      const user = await this.userService.create({\n        username,\n        email,\n        [fieldId]: id,\n      });\n\n      return this.login(user);\n    } catch (e) {\n      if (e instanceof HttpException) {\n        throw e;\n      }\n\n      throw new UnauthorizedException('Invalid access token');\n    }\n  }\n\n  async loginWithRefreshToken(refreshToken: string) {\n    try {\n      const decoded = this.jwtService.decode(refreshToken) as Token;\n\n      if (!decoded) {\n        throw new Error();\n      }\n\n      const user = await this.userService.validateUserById(decoded.sub);\n\n      await this.jwtService.verifyAsync(\n        refreshToken,\n        this.getRefreshTokenOptions(user)\n      );\n\n      return this.login(user);\n    } catch {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  getRefreshTokenOptions(user: User): JwtSignOptions {\n    return this.getTokenOptions('refresh', user);\n  }\n\n  getAccessTokenOptions(user: User): JwtSignOptions {\n    return this.getTokenOptions('access', user);\n  }\n\n  private getTokenOptions(type: 'refresh' | 'access', user: User) {\n    const options: JwtSignOptions = {\n      secret: environments[type + 'TokenSecret'] + user.sessionToken,\n    };\n\n    const expiration = environments[type + 'TokenExpiration'];\n\n    if (expiration) {\n      options.expiresIn = expiration;\n    }\n\n    return options;\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Token\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/auth/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  UnauthorizedException,\n  Inject,\n  forwardRef,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\nimport { Socket } from 'socket.io';\nimport { Client, getClient } from '../../../shared/utils/get-client';\nimport { UserService } from '../../user/service/user.service';\nimport { AuthService } from '../service/auth.service';\n\nexport interface Token {\n  sub: string;\n  username: string;\n}\n\n@Injectable()\nexport class JwtAuthGuard implements CanActivate {\n  reflector: Reflector;\n\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n    @Inject(forwardRef(() => UserService)) private userService: UserService\n  ) {\n    this.reflector = new Reflector();\n  }\n\n  async canActivate(ctx: ExecutionContext): Promise {\n    const client = this.getRequest(ctx);\n\n    const allowAny = this.reflector.get('allow-any', ctx.getHandler());\n\n    try {\n      client.user = await this.handleRequest(ctx, client);\n    } catch (e) {\n      if (allowAny) {\n        return true;\n      }\n\n      throw e;\n    }\n\n    return client.user != null;\n  }\n\n  private async handleRequest(ctx: ExecutionContext, client: Client) {\n    const token = this.getToken(ctx, client);\n\n    const decoded = this.jwtService.decode(token) as Token;\n\n    if (!decoded) {\n      this.throwException(ctx, 'Incapaz de decodificar o token');\n    }\n\n    try {\n      const user = await this.validate(decoded);\n\n      await this.jwtService.verifyAsync(\n        token,\n        this.authService.getAccessTokenOptions(user)\n      );\n\n      return user;\n    } catch (e) {\n      this.throwException(ctx, 'Invalid token');\n    }\n  }\n\n  private validate({ sub }: Token) {\n    return this.userService.validateUserById(sub);\n  }\n\n  private getToken(ctx: ExecutionContext, client: Client): string {\n    const authorization = client.headers.authorization?.split(' ');\n\n    if (!authorization) {\n      this.throwException(ctx, 'Token não encontrado');\n    }\n\n    if (authorization[0].toLowerCase() !== 'bearer') {\n      this.throwException(ctx, 'Tipo de autorização inválida');\n    }\n\n    if (!authorization[1]) {\n      this.throwException(ctx, 'Token não fornecido');\n    }\n\n    return authorization[1];\n  }\n\n  throwException(ctx: ExecutionContext, message: string) {\n    if (ctx.getType() === 'ws') {\n      ctx.switchToWs().getClient().disconnect(true);\n    }\n\n    throw new UnauthorizedException(message);\n  }\n\n  private getRequest(ctx: ExecutionContext) {\n    return getClient(ctx);\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenResponse.html":{"url":"interfaces/TokenResponse.html","title":"interface - TokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TokenResponse\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/features/auth/service/auth.service.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        refresh_token\n                                    \n                                \n                                \n                                    \n                                        refresh_token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import {\n  BadRequestException,\n  forwardRef,\n  HttpException,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService, JwtSignOptions } from '@nestjs/jwt';\nimport { environments } from '../../../environments/environments';\nimport { User } from '../../user/schema/user.schema';\nimport { UserService } from '../../user/service/user.service';\nimport { Token } from '../guard/jwt-auth.guard';\n\nexport interface TokenResponse {\n  access_token: string;\n  refresh_token: string;\n}\n\nexport interface SocialUser {\n  id: number | string;\n  name: string;\n  email: string;\n}\n\nexport type GetSocialUserHandler = () => Promise>;\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(forwardRef(() => UserService)) private userService: UserService,\n    private jwtService: JwtService\n  ) {}\n\n  async validate(username: string, password: string) {\n    const user = await this.userService.getUser(username);\n\n    if (!user) {\n      throw new UnauthorizedException('Usuário não existe');\n    }\n\n    if (!(await user.validatePassword(password))) {\n      throw new UnauthorizedException('Incorrect password');\n    }\n\n    return user;\n  }\n\n  async login(user: User): Promise {\n    const payload: Token = {\n      sub: user.id,\n      username: user.username,\n    };\n\n    let refresh_token: string;\n\n    if (environments.accessTokenExpiration) {\n      refresh_token = await this.jwtService.signAsync(\n        payload,\n        this.getRefreshTokenOptions(user)\n      );\n    }\n\n    return {\n      access_token: await this.jwtService.signAsync(\n        payload,\n        this.getAccessTokenOptions(user)\n      ),\n      refresh_token,\n    };\n  }\n\n  async loginWithThirdParty(\n    fieldId: keyof User,\n    getSocialUser: GetSocialUserHandler,\n    customName?: string\n  ) {\n    try {\n      const { name, email, id } = await getSocialUser();\n\n      const internalUser = await this.userService.getUserBy({ [fieldId]: id });\n\n      if (internalUser) {\n        if (\n          internalUser.email != email &&\n          !(await this.userService.getUserByEmail(email))\n        ) {\n          internalUser.email = email;\n\n          await internalUser.save();\n        }\n\n        return this.login(internalUser);\n      }\n\n      if (await this.userService.getUserByEmail(email)) {\n        throw new BadRequestException('Email already exists');\n      }\n\n      const username = await this.userService.generateUsername(\n        customName || name\n      );\n\n      const user = await this.userService.create({\n        username,\n        email,\n        [fieldId]: id,\n      });\n\n      return this.login(user);\n    } catch (e) {\n      if (e instanceof HttpException) {\n        throw e;\n      }\n\n      throw new UnauthorizedException('Invalid access token');\n    }\n  }\n\n  async loginWithRefreshToken(refreshToken: string) {\n    try {\n      const decoded = this.jwtService.decode(refreshToken) as Token;\n\n      if (!decoded) {\n        throw new Error();\n      }\n\n      const user = await this.userService.validateUserById(decoded.sub);\n\n      await this.jwtService.verifyAsync(\n        refreshToken,\n        this.getRefreshTokenOptions(user)\n      );\n\n      return this.login(user);\n    } catch {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n\n  getRefreshTokenOptions(user: User): JwtSignOptions {\n    return this.getTokenOptions('refresh', user);\n  }\n\n  getAccessTokenOptions(user: User): JwtSignOptions {\n    return this.getTokenOptions('access', user);\n  }\n\n  private getTokenOptions(type: 'refresh' | 'access', user: User) {\n    const options: JwtSignOptions = {\n      secret: environments[type + 'TokenSecret'] + user.sessionToken,\n    };\n\n    const expiration = environments[type + 'TokenExpiration'];\n\n    if (expiration) {\n      options.expiresIn = expiration;\n    }\n\n    return options;\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous.html":{"url":"miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    \n        Variables\n            \n                \n                    \n                        \n                             defaultValue\n                        \n                    \n                    \n                        \n                            defaultValue:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mailerConfig\n                        \n                    \n                    \n                        \n                            mailerConfig:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             env\n                        \n                    \n                    \n                        \n                            env:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             environments\n                        \n                    \n                    \n                        \n                            environments:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             environment\n                        \n                    \n                    \n                        \n                            environment:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             env\n                        \n                    \n                    \n                        \n                            env:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             environments\n                        \n                    \n                    \n                        \n                            environments:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             environment\n                        \n                    \n                    \n                        \n                            environment:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             env\n                        \n                    \n                    \n                        \n                            env:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             environments\n                        \n                    \n                    \n                        \n                            environments:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             facebook\n                        \n                    \n                    \n                        \n                            facebook:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             authConfigDefault\n                        \n                    \n                    \n                        \n                            authConfigDefault:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             authConfig\n                        \n                    \n                    \n                        \n                            authConfig:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             AllowAny\n                        \n                    \n                    \n                        \n                            AllowAny:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             CurrentUser\n                        \n                    \n                    \n                        \n                            CurrentUser:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             auth\n                        \n                    \n                    \n                        \n                            auth:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             auth\n                        \n                    \n                    \n                        \n                            auth:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ConfSchema\n                        \n                    \n                    \n                        \n                            ConfSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             MessageSchema\n                        \n                    \n                    \n                        \n                            MessageSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             fcm\n                        \n                    \n                    \n                        \n                            fcm:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             defaultValue\n                        \n                    \n                    \n                        \n                            defaultValue:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             notificationConfig\n                        \n                    \n                    \n                        \n                            notificationConfig:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             RoomSchema\n                        \n                    \n                    \n                        \n                            RoomSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             SpeakerSchema\n                        \n                    \n                    \n                        \n                            SpeakerSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             SponsorSchema\n                        \n                    \n                    \n                        \n                            SponsorSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             RecoverSchema\n                        \n                    \n                    \n                        \n                            RecoverSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             SocketConnectionSchema\n                        \n                    \n                    \n                        \n                            SocketConnectionSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             SubscriptionSchema\n                        \n                    \n                    \n                        \n                            SubscriptionSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             UserSchema\n                        \n                    \n                    \n                        \n                            UserSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             redis\n                        \n                    \n                    \n                        \n                            redis:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             PATHS\n                        \n                    \n                    \n                        \n                            PATHS:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getAddressFrom\n                        \n                    \n                    \n                        \n                            getAddressFrom:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getAddress\n                        \n                    \n                    \n                        \n                            getAddress:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getClient\n                        \n                    \n                    \n                        \n                            getClient:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getRequest\n                        \n                    \n                    \n                        \n                            getRequest:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getSocketClient\n                        \n                    \n                    \n                        \n                            getSocketClient:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getSocketUser\n                        \n                    \n                    \n                        \n                            getSocketUser:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getURL\n                        \n                    \n                    \n                        \n                            getURL:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             randomString\n                        \n                    \n                    \n                        \n                            randomString:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             remove\n                        \n                    \n                    \n                        \n                            remove:     \n    \n                        \n                    \n                \n            \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage \n\n\n\n    Project\n    0%\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                apps/api/src/core/adapter/custom-socket-io.adapter.ts\n            \n            \n                classe\n            \n            \n                CustomSocketIoAdapter\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                apps/api/src/core/adapter/external-socket-io-adapter.ts\n            \n            \n                classe\n            \n            \n                ExternalSocketIoAdapter\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                apps/api/src/core/adapter/redis-io.adapter.ts\n            \n            \n                classe\n            \n            \n                RedisIoAdapter\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                apps/api/src/core/mail/config/mailer.config.ts\n            \n            \n                interface\n            \n            \n                MailerSchema\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                apps/api/src/features/auth/config/auth.config.ts\n            \n            \n                interface\n            \n            \n                Platform\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                apps/api/src/features/auth/config/auth.config.ts\n            \n            \n                interface\n            \n            \n                Secret\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                apps/api/src/features/auth/config/auth.config.ts\n            \n            \n                interface\n            \n            \n                SecretsSchema\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                apps/api/src/features/auth/dto/apple-login.dto.ts\n            \n            \n                classe\n            \n            \n                AppleLoginDto\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                apps/api/src/features/auth/dto/login.dto.ts\n            \n            \n                classe\n            \n            \n                LoginDto\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                apps/api/src/features/auth/dto/register.dto.ts\n            \n            \n                classe\n            \n            \n                RegisterDto\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                apps/api/src/features/auth/guard/jwt-auth.guard.ts\n            \n            \n                injectable\n            \n            \n                JwtAuthGuard\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                apps/api/src/features/auth/guard/jwt-auth.guard.ts\n            \n            \n                interface\n            \n            \n                Token\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                apps/api/src/features/auth/service/apple-auth.service.ts\n            \n            \n                injectable\n            \n            \n                AppleAuthService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                apps/api/src/features/auth/service/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                apps/api/src/features/auth/service/auth.service.ts\n            \n            \n                interface\n            \n            \n                SocialUser\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                apps/api/src/features/auth/service/auth.service.ts\n            \n            \n                interface\n            \n            \n                TokenResponse\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                apps/api/src/features/auth/service/google-auth.service.ts\n            \n            \n                injectable\n            \n            \n                GoogleAuthService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                apps/api/src/features/conf/dto/conf.dto.ts\n            \n            \n                classe\n            \n            \n                ConfDto\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                apps/api/src/features/conf/service/conf.service.ts\n            \n            \n                injectable\n            \n            \n                ConfService\n            \n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                apps/api/src/features/messages/dto/delete-direct-message.dto.ts\n            \n            \n                classe\n            \n            \n                DeleteDirectMessageDto\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                apps/api/src/features/messages/dto/delete-room-message.dto.ts\n            \n            \n                classe\n            \n            \n                DeleteRoomMessageDto\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                apps/api/src/features/messages/dto/direct-message.dto.ts\n            \n            \n                classe\n            \n            \n                DirectMessageDto\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                apps/api/src/features/messages/dto/fetch-messages.dto.ts\n            \n            \n                classe\n            \n            \n                FetchMessagesDto\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                apps/api/src/features/messages/dto/room-message.dto.ts\n            \n            \n                classe\n            \n            \n                RoomMessageDto\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                apps/api/src/features/messages/service/message.service.ts\n            \n            \n                injectable\n            \n            \n                MessageService\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                apps/api/src/features/notification/service/mobile-notification.service.ts\n            \n            \n                injectable\n            \n            \n                MobileNotificationService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                apps/api/src/features/notification/service/web-notification.service.ts\n            \n            \n                injectable\n            \n            \n                WebNotificationService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                apps/api/src/features/room/dto/room.dto.ts\n            \n            \n                classe\n            \n            \n                RoomDto\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                apps/api/src/features/room/service/room.service.ts\n            \n            \n                injectable\n            \n            \n                RoomService\n            \n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                apps/api/src/features/speakers/dto/conf-speaker.dto.ts\n            \n            \n                classe\n            \n            \n                ConfSpeakerDto\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                apps/api/src/features/speakers/dto/delete-conf-speaker.dto.ts\n            \n            \n                classe\n            \n            \n                DeleteConfSpeakerDto\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                apps/api/src/features/speakers/dto/fetch-speakers.dto.ts\n            \n            \n                classe\n            \n            \n                FetchSpeakersDto\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                apps/api/src/features/speakers/service/speaker.service.ts\n            \n            \n                injectable\n            \n            \n                SpeakerService\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                apps/api/src/features/sponsor/dto/sponsor.dto.ts\n            \n            \n                classe\n            \n            \n                SponsorDto\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                apps/api/src/features/sponsor/service/sponsor.service.ts\n            \n            \n                injectable\n            \n            \n                SponsorService\n            \n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                apps/api/src/features/user/dto/recover-password.dto.ts\n            \n            \n                classe\n            \n            \n                RecoverPasswordDto\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                apps/api/src/features/user/dto/subscribe-event.dto.ts\n            \n            \n                classe\n            \n            \n                SubscribeEventDto\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                apps/api/src/features/user/dto/update-email.dto.ts\n            \n            \n                classe\n            \n            \n                UpdateEmailDto\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                apps/api/src/features/user/dto/update-password.dto.ts\n            \n            \n                classe\n            \n            \n                UpdatePasswordDto\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                apps/api/src/features/user/dto/update-username.dto.ts\n            \n            \n                classe\n            \n            \n                UpdateUsernameDto\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                apps/api/src/features/user/service/recover.service.ts\n            \n            \n                injectable\n            \n            \n                RecoverService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                apps/api/src/features/user/service/socket-connection.service.ts\n            \n            \n                injectable\n            \n            \n                SocketConnectionService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                apps/api/src/features/user/service/subscription.service.ts\n            \n            \n                injectable\n            \n            \n                SubscriptionService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                apps/api/src/features/user/service/subscription.service.ts\n            \n            \n                interface\n            \n            \n                NotificationPayload\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                apps/api/src/features/user/service/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                apps/api/src/shared/mongoose/object-id.ts\n            \n            \n                classe\n            \n            \n                ObjectId\n            \n            \n                0 %\n                (0/0)\n            \n        \n        \n            \n                apps/api/src/shared/pipe/parse-object-id.pipe.ts\n            \n            \n                injectable\n            \n            \n                ParseObjectIdPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                apps/api/src/shared/utils/get-client.ts\n            \n            \n                interface\n            \n            \n                Client\n            \n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
